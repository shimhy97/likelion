{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"내꺼ml_15_지도학습_실습.ipynb의 사본","provenance":[{"file_id":"139FmJrtR7tE4S8y7tmKD4jsfRAtKH2oW","timestamp":1618539597368}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"0zl0dLFHe6kF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618791863174,"user_tz":-540,"elapsed":19400,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8189cc7e-9097-4eae-8ab7-17fcb4acb15f"},"source":["# 구글드라이브 연동\n","from google.colab import drive\n","drive.mount('/gdrive', force_remount=True)\n","\n","# 구글 드라이브 파일 확인\n","!ls '/gdrive/My Drive/temp/'\n","\n","# 반복되는 드라이브 경로 변수화\n","drive_path = '/gdrive/My Drive/temp/'"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /gdrive\n"," 매수종목1.txt\t\t   example.docx\t\t   seoul.html\n"," 매수종목2.txt\t\t   exmaple.docx\t\t   stock-data.csv\n"," abalone.txt\t\t   height_weight.txt\t  'stock price.xlsx'\n"," adult.data\t\t   HelloWorld.xlsx\t  'stock valuation.xlsx'\n"," auto-mpg.csv\t\t   little-char.png\t   test.db.db\n"," bmi_500.csv\t\t   population_number.csv   test.txt\n"," citibike.csv\t\t   ram_price.csv\t   titanic.xls\n","'투표 결과.csv'\t\t   ratings_small.txt\t   Traffic_Accident_2017.csv\n"," 매수종목.csv\t\t   ratings_test.txt\t   train.csv\n"," database\t\t   ratings_train.txt\t  'UCI HAR Dataset'\n"," data_mine.csv\t\t   sample1.pdf\t\t  'UCI HAR Dataset.zip'\n"," data_population.csv\t   sample2.pdf\t\t   user_id_mean.csv\n"," data_studentlist_en.csv   sample_merge.pdf\t   wine.csv\n"," demo.docx\t\t   sample.xlsx\t\t   주가데이터.xlsx\n"," diabetes.csv\t\t   score.csv\t\t   남북한발전전력량.xlsx\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"HO2HMxozgQFH"},"source":["# 경고메시지 무시\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"l_8nPQtBf-oU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618791919166,"user_tz":-540,"elapsed":2633,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"a0f3a3d9-1147-414a-f2a0-7ed81f388512"},"source":["!apt -qq -y install fonts-nanum\n"," \n","import matplotlib.font_manager as fm\n","import matplotlib.pyplot as plt\n","fontpath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf'\n","font = fm.FontProperties(fname=fontpath, size=10)\n","fm._rebuild()\n"," \n","# 그래프에 retina display 적용\n","%config InlineBackend.figure_format = 'retina'\n"," \n","# Colab 의 한글 폰트 설정\n","plt.rc('font', family='NanumBarunGothic') "],"execution_count":null,"outputs":[{"output_type":"stream","text":["fonts-nanum is already the newest version (20170925-1).\n","0 upgraded, 0 newly installed, 0 to remove and 31 not upgraded.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_JzAw78ugSqd"},"source":["\n","import numpy as np\n","import pandas as pd\n"," \n","from sklearn.preprocessing import OneHotEncoder\n","\n","from sklearn.model_selection import ShuffleSplit\n","from sklearn.model_selection import cross_val_score\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","\n","from sklearn.svm import SVC\n","from sklearn.preprocessing import MinMaxScaler\n","\n","import os"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ET59IDf6iPfw"},"source":["# 지도학습 실습"]},{"cell_type":"markdown","metadata":{"id":"oJCDMNjuiwau"},"source":["## 피마 인디언 당뇨병 예측\n","\n","당뇨병 여부를 판단하는 머신러닝 예측 모델을 수립\n","\n","- [데이터세트 다운로드](https://www.kaggle.com/uciml/pima-indians-diabetes-database)\n","\n","- 다운받은 archive.zip 압축 파일에서 diabetes.csv 을 이용하거나 또는 수업자료 temp 폴더에서 diabetes.csv을 이용\n","\n","- 모델 적용 후 성능 평가 지표를 확인 (오차행렬, 정확도, 정밀도, 재현율, F1스코어, AUC)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D7bPbjbEgxIk","executionInfo":{"status":"ok","timestamp":1618792223350,"user_tz":-540,"elapsed":596,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"3043399e-69d4-4971-ec9a-3803c7d591b1"},"source":["# 항상 인포와 decribe를 해봐라# 항상 인포와 decribe를 해봐라\n","\n","data = pd.read_csv(drive_path + 'diabetes.csv')\n","data.info()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 768 entries, 0 to 767\n","Data columns (total 9 columns):\n"," #   Column                    Non-Null Count  Dtype  \n","---  ------                    --------------  -----  \n"," 0   Pregnancies               768 non-null    int64  \n"," 1   Glucose                   768 non-null    int64  \n"," 2   BloodPressure             768 non-null    int64  \n"," 3   SkinThickness             768 non-null    int64  \n"," 4   Insulin                   768 non-null    int64  \n"," 5   BMI                       768 non-null    float64\n"," 6   DiabetesPedigreeFunction  768 non-null    float64\n"," 7   Age                       768 non-null    int64  \n"," 8   Outcome                   768 non-null    int64  \n","dtypes: float64(2), int64(7)\n","memory usage: 54.1 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rMJKmeAKgxFV"},"source":["X = data.iloc[:, :-1]\n","y = data.iloc[:, -1]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eIRcaK1ygxCY","executionInfo":{"status":"ok","timestamp":1618792469420,"user_tz":-540,"elapsed":609,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"9379aef1-b944-4255-cc8f-43c9f6344182"},"source":["model_rg = RandomForestClassifier(n_estimators=100).fit(X_train,y_train)\n","\n","\n","model_rg.predict(X_test)\n"," \n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0])"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UJ1NmZCGgw4Y","executionInfo":{"status":"ok","timestamp":1618792833749,"user_tz":-540,"elapsed":787,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"30577d3a-c687-4506-a3be-ce3f0aaa5e9c"},"source":["# 데이터 전처리 과정\n","# 값이 0인 데이터가 너무 많았다.ㅎ.ㅎ\n","\n","data.value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin  BMI   DiabetesPedigreeFunction  Age  Outcome\n","17           163      72             41             114      40.9  0.817                     47   1          1\n","15           136      70             32             110      37.1  0.153                     43   1          1\n","2            87       58             16             52       32.7  0.166                     25   0          1\n","                      0              23             0        28.9  0.773                     25   0          1\n","             85       65             0              0        39.6  0.930                     27   0          1\n","                                                                                                            ..\n","5            106      82             30             0        39.5  0.286                     38   0          1\n","             105      72             29             325      36.9  0.159                     28   0          1\n","             104      74             0              0        28.8  0.153                     48   0          1\n","             103      108            37             0        39.2  0.305                     65   0          1\n","0            57       60             0              0        21.7  0.735                     67   0          1\n","Length: 768, dtype: int64"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"0rXfeZ_EkOSC"},"source":["# 특성의 0인 값을 평균으로 수정\n","zero_features = ['Glucose', 'BloodPressure','SkinThickness','Insulin','BMI']\n","\n","# data[zero_features].mean()\n","data[zero_features] = data[zero_features].replace(0, data[zero_features].mean())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yvfm96tOkOoe","executionInfo":{"status":"ok","timestamp":1618793214751,"user_tz":-540,"elapsed":1145,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"b334c13d-421f-4391-dd5a-588fb92ed5bb"},"source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import classification_report\n","X = data.iloc[:, :-1]\n","y = data.iloc[:, -1]\n","\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0, stratify=y)\n","\n","model_lr = LogisticRegression(max_iter=1000).fit(X_train, y_train)\n","pred = model_lr.predict(X_test)\n","\n","print( classification_report(y_test, pred) )"],"execution_count":21,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.79      0.88      0.83       125\n","           1       0.71      0.55      0.62        67\n","\n","    accuracy                           0.77       192\n","   macro avg       0.75      0.72      0.73       192\n","weighted avg       0.76      0.77      0.76       192\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OLRqR1DVkOvh"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3ZH3pVjokO07"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Q8yrysJQkO6P"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XwtX2aSwkO9y"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0oIuzJWUkPCe"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZBDfjTe-kPGp"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KNSGIScCkPK5"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZiAsVM_SkPQM"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8ODks_01goFj"},"source":["여기부터 내 코드"]},{"cell_type":"code","metadata":{"id":"0GKT9I2z7MV7"},"source":["[i for i in range(2,10)]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4i62ny-E7oCs"},"source":["data = pd.read_csv(drive_path+\"diabetes.csv\")\n","\n","data.info()\n","\n","data.describe()\n","\n","data.head(n=10)\n","\n","# data[\"Outcome\"].value_counts()\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MC2-bm_Llu_f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618550369373,"user_tz":-540,"elapsed":24137,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"3dbda00c-b668-4bf3-8b9f-aec85b444123"},"source":["# 랜덤포레스트 써보자.\n","\n","\n","\n","X = data.iloc[:,:-1]\n","y = data.iloc[:,-1]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X,\n","                                                    y,\n","                                                    test_size=0.2,\n","                                                    stratify = y,\n","                                                    random_state=0)\n","\n","#모델 학습\n","param_grid={'max_depth':[i for i in range(2,10)], 'n_estimators' : [5,10,50,100]}\n","\n","model_db=RandomForestClassifier().fit(X_train,y_train)    # 그냥 점수\n","\n","\n","ss = ShuffleSplit(n_splits=10, train_size=0.5, test_size=0.3) # 교차검증\n","grid_search_rf = GridSearchCV(RandomForestClassifier(), param_grid=param_grid, cv=ss, return_train_score=True)\n","grid_search_rf.fit(X_train, y_train)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=ShuffleSplit(n_splits=10, random_state=None, test_size=0.3, train_size=0.5),\n","             error_score=nan,\n","             estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,\n","                                              class_weight=None,\n","                                              criterion='gini', max_depth=None,\n","                                              max_features='auto',\n","                                              max_leaf_nodes=None,\n","                                              max_samples=None,\n","                                              min_impurity_decrease=0.0,\n","                                              min_impurity_split=None,\n","                                              min_samples_leaf=1,\n","                                              min_samples_split=2,\n","                                              min_weight_fraction_leaf=0.0,\n","                                              n_estimators=100, n_jobs=None,\n","                                              oob_score=False,\n","                                              random_state=None, verbose=0,\n","                                              warm_start=False),\n","             iid='deprecated', n_jobs=None,\n","             param_grid={'max_depth': [2, 3, 4, 5, 6, 7, 8, 9],\n","                         'n_estimators': [5, 10, 50, 100]},\n","             pre_dispatch='2*n_jobs', refit=True, return_train_score=True,\n","             scoring=None, verbose=0)"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ni_Dg8LL8u3Q","executionInfo":{"status":"ok","timestamp":1618550253891,"user_tz":-540,"elapsed":4367,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"13732f30-58d1-4f9b-b451-fd43d92e9866"},"source":["#SVM 모델에 써보자.\n","\n","\n","X = data.iloc[:,:-1]\n","y = data.iloc[:,-1]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X,\n","                                                    y,\n","                                                    test_size=0.2,\n","                                                    stratify = y,\n","                                                    random_state=0)\n","\n","\n","scaler = MinMaxScaler()\n","scaler.fit(X_train)\n","X_train_scaled = scaler.transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","\n","param_grid_SVM={'C':np.logspace(-4,4,10), 'gamma':np.logspace(-4,4,10)}\n","\n","\n","ss = ShuffleSplit(n_splits=3, train_size=0.5, test_size=0.3) # 교차검증\n","grid_search_SVM = GridSearchCV(SVC(), param_grid=param_grid_SVM, cv=ss, return_train_score=True)\n","\n","# print(X_train_scaled)\n","# print(np.array(X_train_scaled).shape)\n","grid_search_SVM.fit(X_train_scaled, y_train)\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=ShuffleSplit(n_splits=3, random_state=None, test_size=0.3, train_size=0.5),\n","             error_score=nan,\n","             estimator=SVC(C=1.0, break_ties=False, cache_size=200,\n","                           class_weight=None, coef0=0.0,\n","                           decision_function_shape='ovr', degree=3,\n","                           gamma='scale', kernel='rbf', max_iter=-1,\n","                           probability=False, random_state=None, shrinking=True,\n","                           tol=0.001, verbose=False),\n","             iid='depreca...\n","             param_grid={'C': array([1.00000000e-04, 7.74263683e-04, 5.99484250e-03, 4.64158883e-02,\n","       3.59381366e-01, 2.78255940e+00, 2.15443469e+01, 1.66810054e+02,\n","       1.29154967e+03, 1.00000000e+04]),\n","                         'gamma': array([1.00000000e-04, 7.74263683e-04, 5.99484250e-03, 4.64158883e-02,\n","       3.59381366e-01, 2.78255940e+00, 2.15443469e+01, 1.66810054e+02,\n","       1.29154967e+03, 1.00000000e+04])},\n","             pre_dispatch='2*n_jobs', refit=True, return_train_score=True,\n","             scoring=None, verbose=0)"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ViS2JYNv54SC","executionInfo":{"status":"ok","timestamp":1618550391567,"user_tz":-540,"elapsed":727,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"261c4fcb-ae26-4de7-f12f-d8c6ccb0bdb7"},"source":["#평가\n","print(model_db.score(X_train,y_train),model_db.score(X_test,y_test))\n","\n","print(grid_search_rf.score(X_train,y_train), grid_search_rf.score(X_test,y_test))     ##랜포\n","\n","print(grid_search_SVM.score(X_train_scaled , y_train), grid_search_SVM.score(X_test_scaled ,  y_test)) ##SVM"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1.0 0.8181818181818182\n","0.8192182410423453 0.7857142857142857\n","0.7752442996742671 0.7662337662337663\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UXApm033lv3f"},"source":["## 사용자 행동 인식 동작 예측\n","\n","스마트폰 센서를 이용한 사용자 행동 인식 데이터 세트를 기반으로 어떠한 동작인지 예측하는 머신러닝 모델을 수립\n","\n","- [UCI HAR Dataset.zip 데이터세트 다운로드](http://archive.ics.uci.edu/ml/machine-learning-databases/00240/)\n","\n","- 다운받은 'UCI HAR Dataset.zip' 압축 파일을 이용하거나 또는 수업자료 temp 폴더에서 human_activity 폴더에 있는 자료를 이용\n","\n","- 압축파일 폴더와 파일설명\n","```\n","/test             -> 테스트 용도의 데이터 세트\n","/train            -> 학습 용도의 데이터 세트\n","activity_labels.txt -> 동작 레이블 값에 대한 설명\n","features.txt      -> 특성 인덱스와 특성이름\n","features_info.txt -> 특성에 대한 간략 설명\n","README.txt        -> 데이터 세트에 대한 설명\n","```\n","\n","- Pandas를 이용하여 데이터 분석 및 전처리\n","- GridSearch를 이용한 평균 정확도와 최적의 하이퍼파라미터를 확인\n"]},{"cell_type":"code","metadata":{"id":"M4OaAR6brRpm","colab":{"base_uri":"https://localhost:8080/","height":278},"executionInfo":{"status":"ok","timestamp":1618792702965,"user_tz":-540,"elapsed":13449,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"6ee22d03-4825-46e2-acd0-428a456e6350"},"source":["# 탭으로 분리된(tsv) .txt 텍스트파일 불러오기\n","\n","os.getcwd()\n","\n","features = pd.read_csv (drive_path+'UCI HAR Dataset//features.txt',sep=\"\\s+\", engine='python', header=None)\n","X_train = pd.read_csv (drive_path+'UCI HAR Dataset//train//X_train.txt',sep=\"\\s+\", engine='python', header=None)\n","y_train = pd.read_csv (drive_path+'UCI HAR Dataset//train//y_train.txt',sep=\"\\s+\", engine='python', header=None)\n","X_test = pd.read_csv (drive_path+'UCI HAR Dataset//test//X_test.txt',sep=\"\\s+\", engine='python', header=None)\n","y_test = pd.read_csv (drive_path+'UCI HAR Dataset//test//y_test.txt',sep=\"\\s+\", engine='python', header=None)\n","\n","X_train.columns= features.iloc[:,1]\n","X_test.columns= features.iloc[:,1]\n","\n","X_train.head()\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>1</th>\n","      <th>tBodyAcc-mean()-X</th>\n","      <th>tBodyAcc-mean()-Y</th>\n","      <th>tBodyAcc-mean()-Z</th>\n","      <th>tBodyAcc-std()-X</th>\n","      <th>tBodyAcc-std()-Y</th>\n","      <th>tBodyAcc-std()-Z</th>\n","      <th>tBodyAcc-mad()-X</th>\n","      <th>tBodyAcc-mad()-Y</th>\n","      <th>tBodyAcc-mad()-Z</th>\n","      <th>tBodyAcc-max()-X</th>\n","      <th>tBodyAcc-max()-Y</th>\n","      <th>tBodyAcc-max()-Z</th>\n","      <th>tBodyAcc-min()-X</th>\n","      <th>tBodyAcc-min()-Y</th>\n","      <th>tBodyAcc-min()-Z</th>\n","      <th>tBodyAcc-sma()</th>\n","      <th>tBodyAcc-energy()-X</th>\n","      <th>tBodyAcc-energy()-Y</th>\n","      <th>tBodyAcc-energy()-Z</th>\n","      <th>tBodyAcc-iqr()-X</th>\n","      <th>tBodyAcc-iqr()-Y</th>\n","      <th>tBodyAcc-iqr()-Z</th>\n","      <th>tBodyAcc-entropy()-X</th>\n","      <th>tBodyAcc-entropy()-Y</th>\n","      <th>tBodyAcc-entropy()-Z</th>\n","      <th>tBodyAcc-arCoeff()-X,1</th>\n","      <th>tBodyAcc-arCoeff()-X,2</th>\n","      <th>tBodyAcc-arCoeff()-X,3</th>\n","      <th>tBodyAcc-arCoeff()-X,4</th>\n","      <th>tBodyAcc-arCoeff()-Y,1</th>\n","      <th>tBodyAcc-arCoeff()-Y,2</th>\n","      <th>tBodyAcc-arCoeff()-Y,3</th>\n","      <th>tBodyAcc-arCoeff()-Y,4</th>\n","      <th>tBodyAcc-arCoeff()-Z,1</th>\n","      <th>tBodyAcc-arCoeff()-Z,2</th>\n","      <th>tBodyAcc-arCoeff()-Z,3</th>\n","      <th>tBodyAcc-arCoeff()-Z,4</th>\n","      <th>tBodyAcc-correlation()-X,Y</th>\n","      <th>tBodyAcc-correlation()-X,Z</th>\n","      <th>tBodyAcc-correlation()-Y,Z</th>\n","      <th>...</th>\n","      <th>fBodyBodyAccJerkMag-energy()</th>\n","      <th>fBodyBodyAccJerkMag-iqr()</th>\n","      <th>fBodyBodyAccJerkMag-entropy()</th>\n","      <th>fBodyBodyAccJerkMag-maxInds</th>\n","      <th>fBodyBodyAccJerkMag-meanFreq()</th>\n","      <th>fBodyBodyAccJerkMag-skewness()</th>\n","      <th>fBodyBodyAccJerkMag-kurtosis()</th>\n","      <th>fBodyBodyGyroMag-mean()</th>\n","      <th>fBodyBodyGyroMag-std()</th>\n","      <th>fBodyBodyGyroMag-mad()</th>\n","      <th>fBodyBodyGyroMag-max()</th>\n","      <th>fBodyBodyGyroMag-min()</th>\n","      <th>fBodyBodyGyroMag-sma()</th>\n","      <th>fBodyBodyGyroMag-energy()</th>\n","      <th>fBodyBodyGyroMag-iqr()</th>\n","      <th>fBodyBodyGyroMag-entropy()</th>\n","      <th>fBodyBodyGyroMag-maxInds</th>\n","      <th>fBodyBodyGyroMag-meanFreq()</th>\n","      <th>fBodyBodyGyroMag-skewness()</th>\n","      <th>fBodyBodyGyroMag-kurtosis()</th>\n","      <th>fBodyBodyGyroJerkMag-mean()</th>\n","      <th>fBodyBodyGyroJerkMag-std()</th>\n","      <th>fBodyBodyGyroJerkMag-mad()</th>\n","      <th>fBodyBodyGyroJerkMag-max()</th>\n","      <th>fBodyBodyGyroJerkMag-min()</th>\n","      <th>fBodyBodyGyroJerkMag-sma()</th>\n","      <th>fBodyBodyGyroJerkMag-energy()</th>\n","      <th>fBodyBodyGyroJerkMag-iqr()</th>\n","      <th>fBodyBodyGyroJerkMag-entropy()</th>\n","      <th>fBodyBodyGyroJerkMag-maxInds</th>\n","      <th>fBodyBodyGyroJerkMag-meanFreq()</th>\n","      <th>fBodyBodyGyroJerkMag-skewness()</th>\n","      <th>fBodyBodyGyroJerkMag-kurtosis()</th>\n","      <th>angle(tBodyAccMean,gravity)</th>\n","      <th>angle(tBodyAccJerkMean),gravityMean)</th>\n","      <th>angle(tBodyGyroMean,gravityMean)</th>\n","      <th>angle(tBodyGyroJerkMean,gravityMean)</th>\n","      <th>angle(X,gravityMean)</th>\n","      <th>angle(Y,gravityMean)</th>\n","      <th>angle(Z,gravityMean)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.288585</td>\n","      <td>-0.020294</td>\n","      <td>-0.132905</td>\n","      <td>-0.995279</td>\n","      <td>-0.983111</td>\n","      <td>-0.913526</td>\n","      <td>-0.995112</td>\n","      <td>-0.983185</td>\n","      <td>-0.923527</td>\n","      <td>-0.934724</td>\n","      <td>-0.567378</td>\n","      <td>-0.744413</td>\n","      <td>0.852947</td>\n","      <td>0.685845</td>\n","      <td>0.814263</td>\n","      <td>-0.965523</td>\n","      <td>-0.999945</td>\n","      <td>-0.999863</td>\n","      <td>-0.994612</td>\n","      <td>-0.994231</td>\n","      <td>-0.987614</td>\n","      <td>-0.943220</td>\n","      <td>-0.407747</td>\n","      <td>-0.679338</td>\n","      <td>-0.602122</td>\n","      <td>0.929294</td>\n","      <td>-0.853011</td>\n","      <td>0.359910</td>\n","      <td>-0.058526</td>\n","      <td>0.256892</td>\n","      <td>-0.224848</td>\n","      <td>0.264106</td>\n","      <td>-0.095246</td>\n","      <td>0.278851</td>\n","      <td>-0.465085</td>\n","      <td>0.491936</td>\n","      <td>-0.190884</td>\n","      <td>0.376314</td>\n","      <td>0.435129</td>\n","      <td>0.660790</td>\n","      <td>...</td>\n","      <td>-0.999918</td>\n","      <td>-0.991364</td>\n","      <td>-1.0</td>\n","      <td>-0.936508</td>\n","      <td>0.346989</td>\n","      <td>-0.516080</td>\n","      <td>-0.802760</td>\n","      <td>-0.980135</td>\n","      <td>-0.961309</td>\n","      <td>-0.973653</td>\n","      <td>-0.952264</td>\n","      <td>-0.989498</td>\n","      <td>-0.980135</td>\n","      <td>-0.999240</td>\n","      <td>-0.992656</td>\n","      <td>-0.701291</td>\n","      <td>-1.000000</td>\n","      <td>-0.128989</td>\n","      <td>0.586156</td>\n","      <td>0.374605</td>\n","      <td>-0.991990</td>\n","      <td>-0.990697</td>\n","      <td>-0.989941</td>\n","      <td>-0.992448</td>\n","      <td>-0.991048</td>\n","      <td>-0.991990</td>\n","      <td>-0.999937</td>\n","      <td>-0.990458</td>\n","      <td>-0.871306</td>\n","      <td>-1.000000</td>\n","      <td>-0.074323</td>\n","      <td>-0.298676</td>\n","      <td>-0.710304</td>\n","      <td>-0.112754</td>\n","      <td>0.030400</td>\n","      <td>-0.464761</td>\n","      <td>-0.018446</td>\n","      <td>-0.841247</td>\n","      <td>0.179941</td>\n","      <td>-0.058627</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.278419</td>\n","      <td>-0.016411</td>\n","      <td>-0.123520</td>\n","      <td>-0.998245</td>\n","      <td>-0.975300</td>\n","      <td>-0.960322</td>\n","      <td>-0.998807</td>\n","      <td>-0.974914</td>\n","      <td>-0.957686</td>\n","      <td>-0.943068</td>\n","      <td>-0.557851</td>\n","      <td>-0.818409</td>\n","      <td>0.849308</td>\n","      <td>0.685845</td>\n","      <td>0.822637</td>\n","      <td>-0.981930</td>\n","      <td>-0.999991</td>\n","      <td>-0.999788</td>\n","      <td>-0.998405</td>\n","      <td>-0.999150</td>\n","      <td>-0.977866</td>\n","      <td>-0.948225</td>\n","      <td>-0.714892</td>\n","      <td>-0.500930</td>\n","      <td>-0.570979</td>\n","      <td>0.611627</td>\n","      <td>-0.329549</td>\n","      <td>0.284213</td>\n","      <td>0.284595</td>\n","      <td>0.115705</td>\n","      <td>-0.090963</td>\n","      <td>0.294310</td>\n","      <td>-0.281211</td>\n","      <td>0.085988</td>\n","      <td>-0.022153</td>\n","      <td>-0.016657</td>\n","      <td>-0.220643</td>\n","      <td>-0.013429</td>\n","      <td>-0.072692</td>\n","      <td>0.579382</td>\n","      <td>...</td>\n","      <td>-0.999867</td>\n","      <td>-0.991134</td>\n","      <td>-1.0</td>\n","      <td>-0.841270</td>\n","      <td>0.532061</td>\n","      <td>-0.624871</td>\n","      <td>-0.900160</td>\n","      <td>-0.988296</td>\n","      <td>-0.983322</td>\n","      <td>-0.982659</td>\n","      <td>-0.986321</td>\n","      <td>-0.991829</td>\n","      <td>-0.988296</td>\n","      <td>-0.999811</td>\n","      <td>-0.993979</td>\n","      <td>-0.720683</td>\n","      <td>-0.948718</td>\n","      <td>-0.271958</td>\n","      <td>-0.336310</td>\n","      <td>-0.720015</td>\n","      <td>-0.995854</td>\n","      <td>-0.996399</td>\n","      <td>-0.995442</td>\n","      <td>-0.996866</td>\n","      <td>-0.994440</td>\n","      <td>-0.995854</td>\n","      <td>-0.999981</td>\n","      <td>-0.994544</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>0.158075</td>\n","      <td>-0.595051</td>\n","      <td>-0.861499</td>\n","      <td>0.053477</td>\n","      <td>-0.007435</td>\n","      <td>-0.732626</td>\n","      <td>0.703511</td>\n","      <td>-0.844788</td>\n","      <td>0.180289</td>\n","      <td>-0.054317</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.279653</td>\n","      <td>-0.019467</td>\n","      <td>-0.113462</td>\n","      <td>-0.995380</td>\n","      <td>-0.967187</td>\n","      <td>-0.978944</td>\n","      <td>-0.996520</td>\n","      <td>-0.963668</td>\n","      <td>-0.977469</td>\n","      <td>-0.938692</td>\n","      <td>-0.557851</td>\n","      <td>-0.818409</td>\n","      <td>0.843609</td>\n","      <td>0.682401</td>\n","      <td>0.839344</td>\n","      <td>-0.983478</td>\n","      <td>-0.999969</td>\n","      <td>-0.999660</td>\n","      <td>-0.999470</td>\n","      <td>-0.997130</td>\n","      <td>-0.964810</td>\n","      <td>-0.974675</td>\n","      <td>-0.592235</td>\n","      <td>-0.485821</td>\n","      <td>-0.570979</td>\n","      <td>0.273025</td>\n","      <td>-0.086309</td>\n","      <td>0.337202</td>\n","      <td>-0.164739</td>\n","      <td>0.017150</td>\n","      <td>-0.074507</td>\n","      <td>0.342256</td>\n","      <td>-0.332564</td>\n","      <td>0.239281</td>\n","      <td>-0.136204</td>\n","      <td>0.173863</td>\n","      <td>-0.299493</td>\n","      <td>-0.124698</td>\n","      <td>-0.181105</td>\n","      <td>0.608900</td>\n","      <td>...</td>\n","      <td>-0.999845</td>\n","      <td>-0.986658</td>\n","      <td>-1.0</td>\n","      <td>-0.904762</td>\n","      <td>0.660795</td>\n","      <td>-0.724697</td>\n","      <td>-0.928539</td>\n","      <td>-0.989255</td>\n","      <td>-0.986028</td>\n","      <td>-0.984274</td>\n","      <td>-0.990979</td>\n","      <td>-0.995703</td>\n","      <td>-0.989255</td>\n","      <td>-0.999854</td>\n","      <td>-0.993238</td>\n","      <td>-0.736521</td>\n","      <td>-0.794872</td>\n","      <td>-0.212728</td>\n","      <td>-0.535352</td>\n","      <td>-0.871914</td>\n","      <td>-0.995031</td>\n","      <td>-0.995127</td>\n","      <td>-0.994640</td>\n","      <td>-0.996060</td>\n","      <td>-0.995866</td>\n","      <td>-0.995031</td>\n","      <td>-0.999973</td>\n","      <td>-0.993755</td>\n","      <td>-1.000000</td>\n","      <td>-0.555556</td>\n","      <td>0.414503</td>\n","      <td>-0.390748</td>\n","      <td>-0.760104</td>\n","      <td>-0.118559</td>\n","      <td>0.177899</td>\n","      <td>0.100699</td>\n","      <td>0.808529</td>\n","      <td>-0.848933</td>\n","      <td>0.180637</td>\n","      <td>-0.049118</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.279174</td>\n","      <td>-0.026201</td>\n","      <td>-0.123283</td>\n","      <td>-0.996091</td>\n","      <td>-0.983403</td>\n","      <td>-0.990675</td>\n","      <td>-0.997099</td>\n","      <td>-0.982750</td>\n","      <td>-0.989302</td>\n","      <td>-0.938692</td>\n","      <td>-0.576159</td>\n","      <td>-0.829711</td>\n","      <td>0.843609</td>\n","      <td>0.682401</td>\n","      <td>0.837869</td>\n","      <td>-0.986093</td>\n","      <td>-0.999976</td>\n","      <td>-0.999736</td>\n","      <td>-0.999504</td>\n","      <td>-0.997180</td>\n","      <td>-0.983799</td>\n","      <td>-0.986007</td>\n","      <td>-0.627446</td>\n","      <td>-0.850930</td>\n","      <td>-0.911872</td>\n","      <td>0.061436</td>\n","      <td>0.074840</td>\n","      <td>0.198204</td>\n","      <td>-0.264307</td>\n","      <td>0.072545</td>\n","      <td>-0.155320</td>\n","      <td>0.323154</td>\n","      <td>-0.170813</td>\n","      <td>0.294938</td>\n","      <td>-0.306081</td>\n","      <td>0.482148</td>\n","      <td>-0.470129</td>\n","      <td>-0.305693</td>\n","      <td>-0.362654</td>\n","      <td>0.507459</td>\n","      <td>...</td>\n","      <td>-0.999895</td>\n","      <td>-0.988055</td>\n","      <td>-1.0</td>\n","      <td>1.000000</td>\n","      <td>0.678921</td>\n","      <td>-0.701131</td>\n","      <td>-0.909639</td>\n","      <td>-0.989413</td>\n","      <td>-0.987836</td>\n","      <td>-0.986850</td>\n","      <td>-0.986749</td>\n","      <td>-0.996199</td>\n","      <td>-0.989413</td>\n","      <td>-0.999876</td>\n","      <td>-0.989136</td>\n","      <td>-0.720891</td>\n","      <td>-1.000000</td>\n","      <td>-0.035684</td>\n","      <td>-0.230091</td>\n","      <td>-0.511217</td>\n","      <td>-0.995221</td>\n","      <td>-0.995237</td>\n","      <td>-0.995722</td>\n","      <td>-0.995273</td>\n","      <td>-0.995732</td>\n","      <td>-0.995221</td>\n","      <td>-0.999974</td>\n","      <td>-0.995226</td>\n","      <td>-0.955696</td>\n","      <td>-0.936508</td>\n","      <td>0.404573</td>\n","      <td>-0.117290</td>\n","      <td>-0.482845</td>\n","      <td>-0.036788</td>\n","      <td>-0.012892</td>\n","      <td>0.640011</td>\n","      <td>-0.485366</td>\n","      <td>-0.848649</td>\n","      <td>0.181935</td>\n","      <td>-0.047663</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.276629</td>\n","      <td>-0.016570</td>\n","      <td>-0.115362</td>\n","      <td>-0.998139</td>\n","      <td>-0.980817</td>\n","      <td>-0.990482</td>\n","      <td>-0.998321</td>\n","      <td>-0.979672</td>\n","      <td>-0.990441</td>\n","      <td>-0.942469</td>\n","      <td>-0.569174</td>\n","      <td>-0.824705</td>\n","      <td>0.849095</td>\n","      <td>0.683250</td>\n","      <td>0.837869</td>\n","      <td>-0.992653</td>\n","      <td>-0.999991</td>\n","      <td>-0.999856</td>\n","      <td>-0.999757</td>\n","      <td>-0.998004</td>\n","      <td>-0.981232</td>\n","      <td>-0.991325</td>\n","      <td>-0.786553</td>\n","      <td>-0.559477</td>\n","      <td>-0.761434</td>\n","      <td>0.313276</td>\n","      <td>-0.131208</td>\n","      <td>0.191161</td>\n","      <td>0.086904</td>\n","      <td>0.257615</td>\n","      <td>-0.272505</td>\n","      <td>0.434728</td>\n","      <td>-0.315375</td>\n","      <td>0.439744</td>\n","      <td>-0.269069</td>\n","      <td>0.179414</td>\n","      <td>-0.088952</td>\n","      <td>-0.155804</td>\n","      <td>-0.189763</td>\n","      <td>0.599213</td>\n","      <td>...</td>\n","      <td>-0.999941</td>\n","      <td>-0.994169</td>\n","      <td>-1.0</td>\n","      <td>-1.000000</td>\n","      <td>0.559058</td>\n","      <td>-0.528901</td>\n","      <td>-0.858933</td>\n","      <td>-0.991433</td>\n","      <td>-0.989059</td>\n","      <td>-0.987744</td>\n","      <td>-0.991462</td>\n","      <td>-0.998353</td>\n","      <td>-0.991433</td>\n","      <td>-0.999902</td>\n","      <td>-0.989321</td>\n","      <td>-0.763372</td>\n","      <td>-0.897436</td>\n","      <td>-0.273582</td>\n","      <td>-0.510282</td>\n","      <td>-0.830702</td>\n","      <td>-0.995093</td>\n","      <td>-0.995465</td>\n","      <td>-0.995279</td>\n","      <td>-0.995609</td>\n","      <td>-0.997418</td>\n","      <td>-0.995093</td>\n","      <td>-0.999974</td>\n","      <td>-0.995487</td>\n","      <td>-1.000000</td>\n","      <td>-0.936508</td>\n","      <td>0.087753</td>\n","      <td>-0.351471</td>\n","      <td>-0.699205</td>\n","      <td>0.123320</td>\n","      <td>0.122542</td>\n","      <td>0.693578</td>\n","      <td>-0.615971</td>\n","      <td>-0.847865</td>\n","      <td>0.185151</td>\n","      <td>-0.043892</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 561 columns</p>\n","</div>"],"text/plain":["1  tBodyAcc-mean()-X  ...  angle(Z,gravityMean)\n","0           0.288585  ...             -0.058627\n","1           0.278419  ...             -0.054317\n","2           0.279653  ...             -0.049118\n","3           0.279174  ...             -0.047663\n","4           0.276629  ...             -0.043892\n","\n","[5 rows x 561 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"aBSXkFAoTvcN","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"error","timestamp":1618792703420,"user_tz":-540,"elapsed":12547,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8624564e-c18a-41e7-fbb7-97390935f4fa"},"source":["#랜덤포레스트 분류로 해보기\n","\n","\n","\n","select_model = SelectFromModel(RandomForestClassifier(n_estimators=100, random_state=0), threshold=\"median\")\n","select_model.fit(X_train, y_train)\n","X_train_sm = select_model.transform(X_train)\n","X_test_sm = select_model.transform(X_test)\n","\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-605ca9956f57>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mselect_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSelectFromModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mRandomForestClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_estimators\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mthreshold\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"median\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mselect_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mX_train_sm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mselect_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'SelectFromModel' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VCHL-NBaZ7Te","executionInfo":{"status":"ok","timestamp":1618556398160,"user_tz":-540,"elapsed":1810,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"0edb155b-dc92-4ee8-84de-bc75bb1514f3"},"source":["model_rf = RandomForestClassifier(n_estimators=10,max_depth=10).fit(X_train,y_train)\n","model_rf.score(X_train,y_train),model_rf.score(X_test,y_test)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.9918389553862894, 0.9019341703427214)"]},"metadata":{"tags":[]},"execution_count":114}]},{"cell_type":"code","metadata":{"id":"uOzM3FuKdmRx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618559077860,"user_tz":-540,"elapsed":26636,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"972b2cb6-7c12-4da6-b206-64c2c465d84e"},"source":["#SVC\n","\n","# 훈련데이터에 대한 스케일링 초기화\n","scaler.fit(X_train)           \n","\n","# 스케일링 적용\n","X_train_scaled = scaler.transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","\n","#그리드 서치를 이용하여 모델 학습\n","# param_grid_SVC={'C':np.logspace(-4,4,1), 'gamma':np.logspace(-4,4,1)}\n","\n","# ss = ShuffleSplit(n_splits=5, train_size=0.5, test_size=0.3) # 교차검증\n","# grid_search_SVC = GridSearchCV(SVC(), param_grid=param_grid_SVC, cv=3, return_train_score=True)  #그리드 서치\n","\n","# grid_search_SVC.fit(X_train_scaled, y_train)\n","# grid_search_SVC.score(X_test_scaled,y_test)\n","\n","\n","\n","\n","\n","#그냥 하자.\n","model_svc = SVC().fit(X_train_scaled,y_train)\n","model_svc.score(X_train_scaled,y_train),model_svc.score(X_test_scaled,y_test)\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.9797334058759521, 0.9480827960637936)"]},"metadata":{"tags":[]},"execution_count":121}]},{"cell_type":"markdown","metadata":{"id":"b7CcWb_trcUe"},"source":["## 캐글 산탄데르 고객 만족 예측\n","\n","370개 특성으로 주어진 데이터 세트 기반에서 고객 만족 여부를 예측하는 머신러닝 모델을 수립\n","\n","- [데이터세트 다운로드](https://www.kaggle.com/c/santander-customer-satisfaction/data)\n","\n","- 규칙준수 동의를 하고 Download All 버튼을 클릭해 압축 파일을 내려받은 후 train.csv를 추출하거나 왼쪽의 'Data Explorer'에서 train.csv 파일만 클릭해서 다운받은 후 이용\n","\n","- 특성 이름은 모두 익명 처리돼 이름만을 가지고 어떤 속성인지 추정이 어려움. 클래스 레이블 명은 TARGET이며, 이 값이 1이면 불만, 0이면 만족한 고객\n","\n","- 데이터 전처리 후 XGBoost와 LightGBM을 이용하여 모델 작성 및 ROC-AUC를 이용한 성능 평가와 GridSearch를 이용한 최적의 하이퍼파라미터를 확인"]},{"cell_type":"code","metadata":{"id":"TtP7wmIlxLTP"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pF2KeeD_xPgd"},"source":["## 캐글 신용카드 사기 검출\n","\n","매우 불균형한 분포를 가지고 있는 데이터 세트 기반에서 신용카드 사기 검출 머신러닝 모델을 수립\n","\n","- [데이터세트 다운로드](https://www.kaggle.com/mlg-ulb/creditcardfraud)\n","\n","- 규칙준수 동의를 하고 Download(144 MB) 버튼을 클릭해 압축 파일을 내려받은 후 creditcard.csv를 추출하거나 왼쪽의 'Data Explorer'에서 creditcard.csv 파일만 클릭해서 다운받은 후 이용\n","\n","- 클래스 레이블 명은 Class 이며, 이 값이 1이면 사기 트랜잭션, 0이면 정상 트랜잭션\n","\n","- 모델 적용 후 성능 평가 지표를 확인 (오차행렬, 정확도, 정밀도, 재현율, F1스코어, AUC)\n"]},{"cell_type":"code","metadata":{"id":"mAQ9DhPo1IZq"},"source":[""],"execution_count":null,"outputs":[]}]}