{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"내꺼ml_08_지도학습_DecisionTree.ipynb의 사본","provenance":[{"file_id":"1yMNBbLEI1VJF3Zte4XsM_GJdhROVcnKb","timestamp":1618186427570}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"rI_ZpBsio17i"},"source":["# Decision Tree"]},{"cell_type":"markdown","metadata":{"id":"HMqhtpaUOYlt"},"source":["- 결정 트리(decision tree)는 분류와 회귀 문제에 널리 사용하는 모델 <br>\n","(분류와 회귀에 모두 사용)\n","\n","- 분할(Split)와 가지치기 (Pruning) 과정을 통해 생성 <br>\n","(Tree를 만들기 위해 예/아니오 질문을 반복하며 학습)\n","\n","- 다양한 앙상블(ensemble) 모델이 존재한다 <br>\n","     (RandomForest, GradientBoosting, XGBoost)"]},{"cell_type":"markdown","metadata":{"id":"wM5pj_JGRDpJ"},"source":["참고\n","\n","[트리(Tree)의 개념과 특징을 이해 - 블로그](https://gmlwjd9405.github.io/2018/08/12/data-structure-tree.html)\n","\n","[트리(그래프) - 나무위키](https://namu.wiki/w/%ED%8A%B8%EB%A6%AC(%EA%B7%B8%EB%9E%98%ED%94%84))\n","\n","[이진 트리 - 위키백과](https://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84_%ED%8A%B8%EB%A6%AC)"]},{"cell_type":"markdown","metadata":{"id":"jMEwtNE1KtSe"},"source":["#### 트리(tree) 자료구조\n","\n","- 노드로 이루어진 자료 구조\n","\n","- 계층 모델\n","\n","- 그래프의 한 종류\n","  - '최소 연결 트리' 라고도 불림\n","  - 사이클(cycle)이 없는 하나의 연결 그래프(Connected Graph)\n","  - 또는 DAG(Directed Acyclic Graph, 방향성이 있는 비순환 그래프)의 한 종류\n","\n","- 예) 파일디렉토리"]},{"cell_type":"markdown","metadata":{"id":"u0euBDd7LdYF"},"source":["트리(tree) 자료구조에서의 용어\n","\n","<center>\n"," <img src=\"https://gmlwjd9405.github.io/images/data-structure-tree/tree-terms.png\" alt=\"트리(Tree)용어\" width=\"60%\" />\n","\n","</center>\n","\n","- 노드(node) : 트리는 노드들의 집합으로 트리를 구성, 보통 (value) 값과 부모 자식의 정보를 가진다.\n","- 루트 노드(root node): 부모가 없는 노드, 트리는 하나의 루트 노드만을 가진다.\n","- 단말 노드(leaf node): 자식이 없는 노드, '리프',‘말단 노드’ 또는 ‘잎 노드’라고도 부른다.\n","- 내부(internal) 노드: 단말 노드가 아닌 노드\n","- 간선(edge): 노드를 연결하는 선 ('엣지', link, branch 라고도 부름)\n","- 형제(sibling): 같은 부모를 가지는 노드\n","- 노드의 크기(size): 자신을 포함한 모든 자손 노드의 개수\n","- 노드의 깊이(depth): 루트에서 어떤 노드에 도달하기 위해 거쳐야 하는 간선의 수\n","- 노드의 레벨(level): 트리의 특정 깊이를 가지는 노드의 집합 (잘 안씀)\n","- 노드의 차수(degree): 하위 트리 개수 / 간선 수 (degree) = 각 노드가 지닌 가지의 수\n","- 트리의 차수(degree of tree): 트리의 최대 차수\n","- 트리의 높이(height): 루트 노드에서 가장 깊숙히 있는 노드의 깊이"]},{"cell_type":"markdown","metadata":{"id":"SSP6Li-N4nPo"},"source":["#### 결정 트리(decision tree)\n","\n","- 의사결정트리는 학습 데이터로부터 조건식을 만들고 예측할 때는 트리의 루트 노드(root node) 부터 순서대로 조건 분기를 타면서 리프 노드(leaf node)에 도달하면 예측 결과를 내는 알고리즘으로\n","학습 결과로 IF-THEN 형태의 규칙을 생성 (Split)\n","\n","- 타깃 값이 한 개인 리프 노드를 순수 노드라고 한다. \n","\n","- 모든 노드가 순수 노드가 될 때 까지 학습하면 모델이 복잡해지고 훈련 데이터에 과대적합이 된다.\n","\n","- 새로운 데이터 포인트가 들어오면 해당하는 노드를 찾고, 분류라면 더 많은 클래스를 선택, 회귀라면 평균을 구한다.\n"]},{"cell_type":"markdown","metadata":{"id":"uSXR_9AFsYq4"},"source":["특징\n","\n","- 학습한 모델을 사람이 해석하기 쉽다 -> 시각화 가능\n","- 입력 데이터에 대한 정규화가 필요 없다\n","- 범주형 변수나 데이터의 누락값이 있어도 용인된다\n","- 특정 조건이 맞으면 과적합을 일으키는 경향이 있다 -> 트리가 깊어질 수록 데이터 수가 적어짐 ->\n","가지치기(pruning)로 깊이를 줄여서 방지\n","- 비선형 문제에는 우수하지만 선형 분리 문제는 잘 풀지 못한다\n","- 데이터 분포가 특정 클래스에 쏠려 있으면 잘 풀지 못한다\n","- 데이터의 작은 변화에도 결과가 크게 바뀌기 쉽다\n","- 예측 성능은 보통이다. (그러나 시각화가 되어서 분석이 좋음)\n","- 배치 학습만 학습할 수 있다. (vs 퍼셉트론과 같은 온라인 학습)\n","\n","\n","종류\n","\n","- 의사 결정 포레스트, 의사 결정 포레스트, 향상된 의사결정 트리, Random Forest, Rotation Forest 등\n"]},{"cell_type":"markdown","metadata":{"id":"G4oFLhkV4uLf"},"source":["결정트리(Decision Tree) 과대적합 제어\n","\n","- 노드 생성을 미리 중단하는 사전가지치기(pre-pruning)와 트리를 만든후에 크기가 작은 노드를 삭제하는 사후가지치기(pruning)가 있다. <br>\n","    (sklearn은 사전가지치기만 지원)\n","\n","가지치기(pruning)\n","- 하나의 가지 (branch)에 동일한 예측 값이 나오는 경우 -> 의사결정트리는 동일 조건에서 가장 간단한 구조여야 한다.\n","\n","사전가지치기(pre-pruning)\n","\n","- 트리의 최대 깊이나 리프노드의 최대 개수를 제어\n","\n","- 노드가 분할하기 위한 데이터 포인트의 최소 개수를 지정\n"]},{"cell_type":"markdown","metadata":{"id":"05F_-sHl5APm"},"source":["장단점\n","\n","- 만들어진 모델을 쉽게 시각화할 수 있어 이해하기 쉽다. <br>\n","    (white box model)\n","\n","- 각 특성이 개별 처리되기 때문에 데이터 스케일에 영향을 받지 않아 특성의 정규화나 표준화가 필요 없다.\n","\n","- 훈련데이터 범위 밖의 포인트는 예측 할 수 없다. <br>\n","    (ex : 시계열 데이터)\n","\n","- 가지치기를 사용함에도 불구하고 과대적합되는 경향이 있어 일반화 성능이 좋지 않다.\n"]},{"cell_type":"markdown","metadata":{"id":"5z385Tm_XEhG"},"source":["[DecisionTreeClassifier()](https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html)\n","\n","```\n","DecisionTreeClassifier(criterion, splitter, max_depth, min_samples_split, min_samples_leaf, min_weight_fraction_leaf, max_features, random_state, max_leaf_nodes, min_impurity_decrease, min_impurity_split, class_weight, presort)\n","```\n","- criterion : 분할 품질을 측정하는 기능 (default : gini)\n","- splitter : 각 노드에서 분할을 선택하는 데 사용되는 전략 (default : best)\n","- <font  color=yellow> max_depth : 트리의 최대 깊이 <br>\n","(값이 클수록 모델의 복잡도가 올라간다.) </font>\n","- min_samples_split : 자식 노드를 분할하는데 필요한 최소 샘플 수 (default : 2)\n","- <font  color=yellow> min_samples_leaf : 리프 노드에 있어야 할 최소 샘플 수 (default : 1) </font>\n","- min_weight_fraction_leaf : min_sample_leaf와 같지만 가중치가 부여된 샘플 수에서의 비율\n","- max_features : 각 노드에서 분할에 사용할 특징의 최대 수\n","- random_state : 난수 seed 설정\n","- <font  color=yellow> max_leaf_nodes : 리프 노드의 최대수 </font>\n","- min_impurity_decrease : 최소 불순도\n","- min_impurity_split : 나무 성장을 멈추기 위한 임계치\n","- class_weight : 클래스 가중치\n","- presort : 데이터 정렬 필요 여부\n"]},{"cell_type":"code","metadata":{"id":"mWgbC-lsiqET"},"source":["# 경고메시지 무시\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nD1CP9QrVmZj"},"source":["#### Decision Tree 실습 01 with 결정트리 시각화★\n","\n","붓꽃 데이터 결정트리 만들기"]},{"cell_type":"code","metadata":{"id":"0K0je6h0YWOL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618218674882,"user_tz":-540,"elapsed":1326,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"29744670-fd8d-44bf-889b-bf985663c222"},"source":["from sklearn.datasets import load_iris\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score        # 정확도 스코어 모듈\n","\n","# 데이터 로드\n","iris = load_iris()\n","X_train, X_test, y_train, y_test = train_test_split(iris.data,\n","                                                    iris.target,\n","                                                    test_size=0.2,\n","                                                    random_state=11)\n","\n","# 모델 학습\n","# max_depth를 주지 않으면 과대적합 가능성 높음\n","# 결정 트리는 규칙 생성 로직을 미리 제어하지 않으면 \n","# 완벽하게 클래스 값을 구별해내기 위해 트리 노드를 계속해서 만들어 가고, \n","# 이로 인해 매우 복잡한 규칙 트리가 만들어져 모델이 쉽게 과적합되는 문제점을 가지게 된다.\n","# 과대적합이 상당히 높은 머신러닝 알고리즘\n","# 결정트리 하이퍼 파라미터는 대부분 복잡한 트리가 생성되는 것을 막기 위한 용도\n","\n","model_tr1 = DecisionTreeClassifier(max_depth=3, random_state=42)\n","model_tr1.fit(X_train, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',\n","                       max_depth=3, max_features=None, max_leaf_nodes=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, presort='deprecated',\n","                       random_state=42, splitter='best')"]},"metadata":{"tags":[]},"execution_count":275}]},{"cell_type":"code","metadata":{"id":"ujMCETgZjVNV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618218674882,"user_tz":-540,"elapsed":1315,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"cdffa402-c5c1-4b0c-d2c2-9b00e8fe938b"},"source":["# 평가\n","\n","pred = model_tr1.predict(X_test)\n","model_tr1.score(X_train,y_train), accuracy_score(y_test, pred) #model_tr1.score(X_test, y_test) 와 똑같은 표현식.ㅋㅋ"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.975, 0.9333333333333333)"]},"metadata":{"tags":[]},"execution_count":276}]},{"cell_type":"markdown","metadata":{"id":"QtA7MWuvv4s5"},"source":["**Graphviz 설치**\n","\n","1. 아래 링크로 들어가서 graphviz-2.38-win32.msi 다운로드 후 설치\n","\n","> https://www2.graphviz.org/Packages/stable/windows/10/msbuild/Release/Win32/\n","\n","2. 시스템 환경변수 PATH 에 다음 경로 추가\n","\n","> C:\\Program Files (x86)\\Graphviz2.38\\bin"]},{"cell_type":"code","metadata":{"id":"fIcOR_y_v_0e"},"source":["# 파이썬 래퍼(Wrapper) 모듈을 별도로 설치\n","# !pip install graphviz"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kRG6Og9Pjx0b","colab":{"base_uri":"https://localhost:8080/","height":597},"executionInfo":{"status":"ok","timestamp":1618218683134,"user_tz":-540,"elapsed":683,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"4102b9bc-82e7-4abe-def0-6b473c6f6012"},"source":["# 결정트리 규칙을 시각화\n","from sklearn.tree import export_graphviz\n","import graphviz\n","\n","# export_graphviz() 를 호출하여 out_file 파라메터의 \"tree.dot\" 파일을 생성\n","export_graphviz(model_tr1, out_file='tree.dot',\n","                class_names=iris.target_names,        #분류 클래스\n","                feature_names = iris.feature_names,     #분류 기준 속성표\n","                impurity=True, filled=True)\n","# \"tree.dot\" 파일을 graphviz 가 읽어서 주피터 노트북에 시각화\n","with open('tree.dot') as f:\n","  dot_graph = f.read()\n","\n","display(graphviz.Source(dot_graph))\n","\n","\n","# gini = 불순도 계수 = 불순도가 높으면 높을수록 구분해야 될 레이블값이 섞여있는것임. gini가 0이면 한가지 종류만 있는것.\n","# 현재 depth를 3단계까지만 준 상태. 만약 더 주면, gini가 0이 될때까지 더 나눠줄것이다.\n","# 즉, depth로 가지치기를 하던지, 불순도가 몇 이하만 되면 충분! 하다고 생각해서 거기부터 자르던가. 해서 적당한 선에서 자르는 것이 필요. "],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<graphviz.files.Source at 0x7f0654d19550>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"547pt\" height=\"433pt\"\n viewBox=\"0.00 0.00 547.00 433.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 429)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-429 543,-429 543,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<polygon fill=\"#fffdfd\" stroke=\"#000000\" points=\"270.5,-425 106.5,-425 106.5,-342 270.5,-342 270.5,-425\"/>\n<text text-anchor=\"middle\" x=\"188.5\" y=\"-409.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 2.45</text>\n<text text-anchor=\"middle\" x=\"188.5\" y=\"-394.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.667</text>\n<text text-anchor=\"middle\" x=\"188.5\" y=\"-379.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 120</text>\n<text text-anchor=\"middle\" x=\"188.5\" y=\"-364.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [41, 40, 39]</text>\n<text text-anchor=\"middle\" x=\"188.5\" y=\"-349.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = setosa</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"169,-298.5 52,-298.5 52,-230.5 169,-230.5 169,-298.5\"/>\n<text text-anchor=\"middle\" x=\"110.5\" y=\"-283.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"110.5\" y=\"-268.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 41</text>\n<text text-anchor=\"middle\" x=\"110.5\" y=\"-253.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [41, 0, 0]</text>\n<text text-anchor=\"middle\" x=\"110.5\" y=\"-238.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = setosa</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M161.2194,-341.8796C153.8677,-330.6636 145.9036,-318.5131 138.5126,-307.2372\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"141.4014,-305.2598 132.9921,-298.8149 135.5469,-309.0972 141.4014,-305.2598\"/>\n<text text-anchor=\"middle\" x=\"127.8982\" y=\"-319.5905\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<polygon fill=\"#fafefc\" stroke=\"#000000\" points=\"348,-306 187,-306 187,-223 348,-223 348,-306\"/>\n<text text-anchor=\"middle\" x=\"267.5\" y=\"-290.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">petal width (cm) &lt;= 1.55</text>\n<text text-anchor=\"middle\" x=\"267.5\" y=\"-275.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"267.5\" y=\"-260.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 79</text>\n<text text-anchor=\"middle\" x=\"267.5\" y=\"-245.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 40, 39]</text>\n<text text-anchor=\"middle\" x=\"267.5\" y=\"-230.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 0&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>0&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M216.1304,-341.8796C221.93,-333.1434 228.1059,-323.8404 234.0908,-314.8253\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"237.1368,-316.5652 239.7517,-306.2981 231.3049,-312.6935 237.1368,-316.5652\"/>\n<text text-anchor=\"middle\" x=\"244.7022\" y=\"-327.103\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<polygon fill=\"#3ee684\" stroke=\"#000000\" points=\"259.5,-187 95.5,-187 95.5,-104 259.5,-104 259.5,-187\"/>\n<text text-anchor=\"middle\" x=\"177.5\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 5.25</text>\n<text text-anchor=\"middle\" x=\"177.5\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.051</text>\n<text text-anchor=\"middle\" x=\"177.5\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 38</text>\n<text text-anchor=\"middle\" x=\"177.5\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 37, 1]</text>\n<text text-anchor=\"middle\" x=\"177.5\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M236.0224,-222.8796C229.3471,-214.0534 222.2342,-204.6485 215.3504,-195.5466\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"217.9357,-193.1626 209.112,-187.2981 212.3526,-197.3852 217.9357,-193.1626\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<polygon fill=\"#8b49e7\" stroke=\"#000000\" points=\"439,-187 278,-187 278,-104 439,-104 439,-187\"/>\n<text text-anchor=\"middle\" x=\"358.5\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">petal width (cm) &lt;= 1.75</text>\n<text text-anchor=\"middle\" x=\"358.5\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.136</text>\n<text text-anchor=\"middle\" x=\"358.5\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 41</text>\n<text text-anchor=\"middle\" x=\"358.5\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3, 38]</text>\n<text text-anchor=\"middle\" x=\"358.5\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 2&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>2&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M299.3274,-222.8796C306.1457,-213.9633 313.4156,-204.4565 320.4421,-195.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"323.2425,-197.3678 326.5368,-187.2981 317.682,-193.1156 323.2425,-197.3678\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<polygon fill=\"#39e581\" stroke=\"#000000\" points=\"117,-68 0,-68 0,0 117,0 117,-68\"/>\n<text text-anchor=\"middle\" x=\"58.5\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"58.5\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n<text text-anchor=\"middle\" x=\"58.5\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 37, 0]</text>\n<text text-anchor=\"middle\" x=\"58.5\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M133.1888,-103.9815C123.1837,-94.607 112.5646,-84.6572 102.5696,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"104.7588,-72.547 95.0684,-68.2637 99.9726,-77.6551 104.7588,-72.547\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<polygon fill=\"#8139e5\" stroke=\"#000000\" points=\"245.5,-68 135.5,-68 135.5,0 245.5,0 245.5,-68\"/>\n<text text-anchor=\"middle\" x=\"190.5\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"190.5\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"190.5\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"190.5\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M182.3407,-103.9815C183.3158,-95.618 184.3443,-86.7965 185.3302,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"188.8234,-78.6017 186.5051,-68.2637 181.8705,-77.791 188.8234,-78.6017\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<polygon fill=\"#ffffff\" stroke=\"#000000\" points=\"404,-68 289,-68 289,0 404,0 404,-68\"/>\n<text text-anchor=\"middle\" x=\"346.5\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"346.5\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"346.5\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 2]</text>\n<text text-anchor=\"middle\" x=\"346.5\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M354.0316,-103.9815C353.1315,-95.618 352.1821,-86.7965 351.2721,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"354.7376,-77.8317 350.1876,-68.2637 347.7778,-78.5808 354.7376,-77.8317\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<polygon fill=\"#843ee6\" stroke=\"#000000\" points=\"539,-68 422,-68 422,0 539,0 539,-68\"/>\n<text text-anchor=\"middle\" x=\"480.5\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.053</text>\n<text text-anchor=\"middle\" x=\"480.5\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n<text text-anchor=\"middle\" x=\"480.5\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 36]</text>\n<text text-anchor=\"middle\" x=\"480.5\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 6&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>6&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M403.9283,-103.9815C414.2861,-94.5151 425.2859,-84.462 435.6206,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"437.9893,-77.5935 443.0097,-68.2637 433.2669,-72.4264 437.9893,-77.5935\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"kIRobWA1lPiC"},"source":["- 각 규칙에 따라 트리의 브랜치(branch) 노드와 말단 리프(leaf) 노드가 어떻게 구성되는지 시각화\n","- petal length(cm) <= 2.45와 같이 피처의 조건이 있는 것은 자식 노드를 만들기 위한 규칙 조건으로 이 조건이 없으면 리프 노드임\n","- gini는 다음의 value=[]로 주어진 데이터 분포에서의 지니 계수\n","- samples는 현 규칙에 해당하는 데이터 건수\n","- value=[]는 클래스 값 기반의 데이터 건수 <br>\n","(만일 Value=[41,40,39]라면 붓꽃 클래스 값의 순서대로 Setosa 41개, Vesicolor 40개, Virginica 39개 구성을 의미)\n","- 트리를 조사할 때 많은 수의 데이터가 흐르는 경로를 찾는 것이 중요"]},{"cell_type":"markdown","metadata":{"id":"OKdO_hbwV_-6"},"source":["트리 시각화 장점\n","- 알고리즘의 예측이 어떻게 이뤄지는지 이해가 가능\n","- 비전문가에게 머신러닝 알고리즘을 설명하기에 좋음"]},{"cell_type":"code","metadata":{"id":"SmZJxU3Wo4_p","colab":{"base_uri":"https://localhost:8080/","height":788},"executionInfo":{"status":"ok","timestamp":1618209657671,"user_tz":-540,"elapsed":2421,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"9dc24499-d5b1-431b-a089-a6788165be2e"},"source":["# 사이킷런 0.21 버전 이후 맷플롯립 기반 트리 그래프 시각화 함수 추가\n","# 파일로 저장안하고 바로 보여주는거임.\n","import matplotlib.pyplot as plt\n","from sklearn import tree\n","\n","plt.figure(figsize=(20,15))\n","tree.plot_tree(model_tr1, class_names=iris.target_names,\n","                feature_names = iris.feature_names,\n","                impurity=True, filled=True)\n","\n","# 폰트차이가 약간 있지만, plt로 쓰던가 파일 저장해서 불러와서 쓰던가 둘중 하나. 단, plt 쓰면 저장은 안됨."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(418.5, 713.475, 'petal length (cm) <= 2.45\\ngini = 0.667\\nsamples = 120\\nvalue = [41, 40, 39]\\nclass = setosa'),\n"," Text(279.0, 509.625, 'gini = 0.0\\nsamples = 41\\nvalue = [41, 0, 0]\\nclass = setosa'),\n"," Text(558.0, 509.625, 'petal width (cm) <= 1.55\\ngini = 0.5\\nsamples = 79\\nvalue = [0, 40, 39]\\nclass = versicolor'),\n"," Text(279.0, 305.775, 'petal length (cm) <= 5.25\\ngini = 0.051\\nsamples = 38\\nvalue = [0, 37, 1]\\nclass = versicolor'),\n"," Text(139.5, 101.92499999999995, 'gini = 0.0\\nsamples = 37\\nvalue = [0, 37, 0]\\nclass = versicolor'),\n"," Text(418.5, 101.92499999999995, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 0, 1]\\nclass = virginica'),\n"," Text(837.0, 305.775, 'petal width (cm) <= 1.75\\ngini = 0.136\\nsamples = 41\\nvalue = [0, 3, 38]\\nclass = virginica'),\n"," Text(697.5, 101.92499999999995, 'gini = 0.5\\nsamples = 4\\nvalue = [0, 2, 2]\\nclass = versicolor'),\n"," Text(976.5, 101.92499999999995, 'gini = 0.053\\nsamples = 37\\nvalue = [0, 1, 36]\\nclass = virginica')]"]},"metadata":{"tags":[]},"execution_count":187},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x1080 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ZmNvNizJoJy1","colab":{"base_uri":"https://localhost:8080/","height":950},"executionInfo":{"status":"ok","timestamp":1618209658156,"user_tz":-540,"elapsed":2895,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"be7714ef-b046-479e-f1e2-0f7e66752196"},"source":["# min_samples_split를 통해 모델을 조절해보자.\n","# 자식 규칙 노드를 분할해 만들기 위한 최소한의 샘플 데이터 개수\n","# 모델학습\n","\n","model_tr2 = DecisionTreeClassifier( min_samples_split=2, random_state=42)    \n","model_tr2.fit(X_train, y_train)\n","\n","# 평가\n","print(\"훈련정확도:\", model_tr2.score(X_train, y_train) )\n","print(\"평가정확도:\", model_tr2.score(X_test, y_test) )\n","\n","# 결정트리 규칙 시각화\n","export_graphviz(model_tr2, out_file='tree.dot', \n","                class_names=iris.target_names, \n","                feature_names=iris.feature_names,\n","                impurity=True, filled=True, rounded=True)\n","\n","with open(\"tree.dot\") as f:\n","  dot_graph = f.read()\n","\n","display(graphviz.Source(dot_graph))\n","\n","#훈련정확도 1 ?????? 과대적합이네 ㅋㅋㅋㅋ \n","#학습그래프와 테스트그래프의 차이?\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련정확도: 1.0\n","평가정확도: 0.9333333333333333\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/plain":["<graphviz.files.Source at 0x7f0650335fd0>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"818pt\" height=\"671pt\"\n viewBox=\"0.00 0.00 817.50 671.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 667)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-667 813.5,-667 813.5,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#fffdfd\" stroke=\"#000000\" d=\"M286,-663C286,-663 134,-663 134,-663 128,-663 122,-657 122,-651 122,-651 122,-592 122,-592 122,-586 128,-580 134,-580 134,-580 286,-580 286,-580 292,-580 298,-586 298,-592 298,-592 298,-651 298,-651 298,-657 292,-663 286,-663\"/>\n<text text-anchor=\"middle\" x=\"210\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 2.45</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.667</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 120</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [41, 40, 39]</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = setosa</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M177.5,-536.5C177.5,-536.5 78.5,-536.5 78.5,-536.5 72.5,-536.5 66.5,-530.5 66.5,-524.5 66.5,-524.5 66.5,-480.5 66.5,-480.5 66.5,-474.5 72.5,-468.5 78.5,-468.5 78.5,-468.5 177.5,-468.5 177.5,-468.5 183.5,-468.5 189.5,-474.5 189.5,-480.5 189.5,-480.5 189.5,-524.5 189.5,-524.5 189.5,-530.5 183.5,-536.5 177.5,-536.5\"/>\n<text text-anchor=\"middle\" x=\"128\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"128\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 41</text>\n<text text-anchor=\"middle\" x=\"128\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [41, 0, 0]</text>\n<text text-anchor=\"middle\" x=\"128\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = setosa</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M181.3204,-579.8796C173.5917,-568.6636 165.2191,-556.5131 157.4492,-545.2372\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"160.2018,-543.0634 151.6456,-536.8149 154.4377,-547.0353 160.2018,-543.0634\"/>\n<text text-anchor=\"middle\" x=\"147.1196\" y=\"-557.7018\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#fafefc\" stroke=\"#000000\" d=\"M366,-544C366,-544 220,-544 220,-544 214,-544 208,-538 208,-532 208,-532 208,-473 208,-473 208,-467 214,-461 220,-461 220,-461 366,-461 366,-461 372,-461 378,-467 378,-473 378,-473 378,-532 378,-532 378,-538 372,-544 366,-544\"/>\n<text text-anchor=\"middle\" x=\"293\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal width (cm) &lt;= 1.55</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 79</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 40, 39]</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 0&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>0&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M239.0294,-579.8796C245.1855,-571.0534 251.7451,-561.6485 258.0936,-552.5466\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"260.9967,-554.5024 263.8467,-544.2981 255.2552,-550.4978 260.9967,-554.5024\"/>\n<text text-anchor=\"middle\" x=\"268.2331\" y=\"-565.2103\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#3ee684\" stroke=\"#000000\" d=\"M274,-425C274,-425 122,-425 122,-425 116,-425 110,-419 110,-413 110,-413 110,-354 110,-354 110,-348 116,-342 122,-342 122,-342 274,-342 274,-342 280,-342 286,-348 286,-354 286,-354 286,-413 286,-413 286,-419 280,-425 274,-425\"/>\n<text text-anchor=\"middle\" x=\"198\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 5.25</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.051</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 38</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 37, 1]</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M259.7736,-460.8796C252.6556,-451.9633 245.0661,-442.4565 237.7308,-433.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"240.3425,-430.9295 231.3682,-425.2981 234.8719,-435.2968 240.3425,-430.9295\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#8b49e7\" stroke=\"#000000\" d=\"M462,-425C462,-425 316,-425 316,-425 310,-425 304,-419 304,-413 304,-413 304,-354 304,-354 304,-348 310,-342 316,-342 316,-342 462,-342 462,-342 468,-342 474,-348 474,-354 474,-354 474,-413 474,-413 474,-419 468,-425 462,-425\"/>\n<text text-anchor=\"middle\" x=\"389\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal width (cm) &lt;= 1.75</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.136</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 41</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3, 38]</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 2&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>2&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M326.5761,-460.8796C333.7691,-451.9633 341.4384,-442.4565 348.851,-433.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"351.7258,-435.2788 355.2805,-425.2981 346.2776,-430.8836 351.7258,-435.2788\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#39e581\" stroke=\"#000000\" d=\"M116,-298.5C116,-298.5 12,-298.5 12,-298.5 6,-298.5 0,-292.5 0,-286.5 0,-286.5 0,-242.5 0,-242.5 0,-236.5 6,-230.5 12,-230.5 12,-230.5 116,-230.5 116,-230.5 122,-230.5 128,-236.5 128,-242.5 128,-242.5 128,-286.5 128,-286.5 128,-292.5 122,-298.5 116,-298.5\"/>\n<text text-anchor=\"middle\" x=\"64\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"64\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n<text text-anchor=\"middle\" x=\"64\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 37, 0]</text>\n<text text-anchor=\"middle\" x=\"64\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M151.1333,-341.8796C137.8844,-330.1138 123.4776,-317.3197 110.2644,-305.5855\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"112.4416,-302.8381 102.6403,-298.8149 107.7935,-308.0722 112.4416,-302.8381\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M253.5,-298.5C253.5,-298.5 158.5,-298.5 158.5,-298.5 152.5,-298.5 146.5,-292.5 146.5,-286.5 146.5,-286.5 146.5,-242.5 146.5,-242.5 146.5,-236.5 152.5,-230.5 158.5,-230.5 158.5,-230.5 253.5,-230.5 253.5,-230.5 259.5,-230.5 265.5,-236.5 265.5,-242.5 265.5,-242.5 265.5,-286.5 265.5,-286.5 265.5,-292.5 259.5,-298.5 253.5,-298.5\"/>\n<text text-anchor=\"middle\" x=\"206\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"206\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"206\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"206\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M200.798,-341.8796C201.5151,-331.2134 202.2889,-319.7021 203.015,-308.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"206.5144,-309.0272 203.6931,-298.8149 199.5301,-308.5576 206.5144,-309.0272\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<path fill=\"#ffffff\" stroke=\"#000000\" d=\"M453,-306C453,-306 311,-306 311,-306 305,-306 299,-300 299,-294 299,-294 299,-235 299,-235 299,-229 305,-223 311,-223 311,-223 453,-223 453,-223 459,-223 465,-229 465,-235 465,-235 465,-294 465,-294 465,-300 459,-306 453,-306\"/>\n<text text-anchor=\"middle\" x=\"382\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">sepal width (cm) &lt;= 2.6</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 2]</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M386.5517,-341.8796C386.0696,-333.6838 385.5582,-324.9891 385.0589,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"388.54,-316.0753 384.4587,-306.2981 381.5521,-316.4864 388.54,-316.0753\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<path fill=\"#843ee6\" stroke=\"#000000\" d=\"M654,-306C654,-306 502,-306 502,-306 496,-306 490,-300 490,-294 490,-294 490,-235 490,-235 490,-229 496,-223 502,-223 502,-223 654,-223 654,-223 660,-223 666,-229 666,-235 666,-235 666,-294 666,-294 666,-300 660,-306 654,-306\"/>\n<text text-anchor=\"middle\" x=\"578\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 4.85</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.053</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 36]</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 6&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>6&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M455.103,-341.8796C470.6413,-332.0962 487.3088,-321.6019 503.1987,-311.5971\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"505.3368,-314.3869 511.9343,-306.0969 501.6071,-308.4633 505.3368,-314.3869\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M263.5,-179.5C263.5,-179.5 168.5,-179.5 168.5,-179.5 162.5,-179.5 156.5,-173.5 156.5,-167.5 156.5,-167.5 156.5,-123.5 156.5,-123.5 156.5,-117.5 162.5,-111.5 168.5,-111.5 168.5,-111.5 263.5,-111.5 263.5,-111.5 269.5,-111.5 275.5,-117.5 275.5,-123.5 275.5,-123.5 275.5,-167.5 275.5,-167.5 275.5,-173.5 269.5,-179.5 263.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"216\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"216\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"216\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"216\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 7&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>7&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M323.9413,-222.8796C307.142,-210.8368 288.8401,-197.7167 272.159,-185.7586\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"273.7668,-182.6047 263.6002,-179.623 269.6884,-188.2939 273.7668,-182.6047\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<path fill=\"#9cf2c0\" stroke=\"#000000\" d=\"M458,-187C458,-187 306,-187 306,-187 300,-187 294,-181 294,-175 294,-175 294,-116 294,-116 294,-110 300,-104 306,-104 306,-104 458,-104 458,-104 464,-104 470,-110 470,-116 470,-116 470,-175 470,-175 470,-181 464,-187 458,-187\"/>\n<text text-anchor=\"middle\" x=\"382\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 5.45</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 1]</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 7&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>7&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M382,-222.8796C382,-214.6838 382,-205.9891 382,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"385.5001,-197.298 382,-187.2981 378.5001,-197.2981 385.5001,-197.298\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<path fill=\"#39e581\" stroke=\"#000000\" d=\"M305,-68C305,-68 201,-68 201,-68 195,-68 189,-62 189,-56 189,-56 189,-12 189,-12 189,-6 195,0 201,0 201,0 305,0 305,0 311,0 317,-6 317,-12 317,-12 317,-56 317,-56 317,-62 311,-68 305,-68\"/>\n<text text-anchor=\"middle\" x=\"253\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"253\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"253\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 0]</text>\n<text text-anchor=\"middle\" x=\"253\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M333.9652,-103.9815C323.013,-94.5151 311.3821,-84.462 300.4544,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"302.4957,-72.155 292.6414,-68.2637 297.9182,-77.4509 302.4957,-72.155\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M442.5,-68C442.5,-68 347.5,-68 347.5,-68 341.5,-68 335.5,-62 335.5,-56 335.5,-56 335.5,-12 335.5,-12 335.5,-6 341.5,0 347.5,0 347.5,0 442.5,0 442.5,0 448.5,0 454.5,-6 454.5,-12 454.5,-12 454.5,-56 454.5,-56 454.5,-62 448.5,-68 442.5,-68\"/>\n<text text-anchor=\"middle\" x=\"395\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"395\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"395\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"395\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 9&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>9&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M386.8407,-103.9815C387.8158,-95.618 388.8443,-86.7965 389.8302,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"393.3234,-78.6017 391.0051,-68.2637 386.3705,-77.791 393.3234,-78.6017\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<path fill=\"#c09cf2\" stroke=\"#000000\" d=\"M656,-187C656,-187 500,-187 500,-187 494,-187 488,-181 488,-175 488,-175 488,-116 488,-116 488,-110 494,-104 500,-104 500,-104 656,-104 656,-104 662,-104 668,-110 668,-116 668,-116 668,-175 668,-175 668,-181 662,-187 656,-187\"/>\n<text text-anchor=\"middle\" x=\"578\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">sepal length (cm) &lt;= 5.95</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 2]</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 12&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>12&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M578,-222.8796C578,-214.6838 578,-205.9891 578,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"581.5001,-197.298 578,-187.2981 574.5001,-197.2981 581.5001,-197.298\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M797.5,-179.5C797.5,-179.5 698.5,-179.5 698.5,-179.5 692.5,-179.5 686.5,-173.5 686.5,-167.5 686.5,-167.5 686.5,-123.5 686.5,-123.5 686.5,-117.5 692.5,-111.5 698.5,-111.5 698.5,-111.5 797.5,-111.5 797.5,-111.5 803.5,-111.5 809.5,-117.5 809.5,-123.5 809.5,-123.5 809.5,-167.5 809.5,-167.5 809.5,-173.5 803.5,-179.5 797.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"748\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"748\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 34</text>\n<text text-anchor=\"middle\" x=\"748\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 34]</text>\n<text text-anchor=\"middle\" x=\"748\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 12&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>12&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M637.4578,-222.8796C654.8196,-210.7263 673.7488,-197.4759 690.9575,-185.4297\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"693.0676,-188.225 699.2528,-179.623 689.0533,-182.4904 693.0676,-188.225\"/>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<path fill=\"#39e581\" stroke=\"#000000\" d=\"M616,-68C616,-68 512,-68 512,-68 506,-68 500,-62 500,-56 500,-56 500,-12 500,-12 500,-6 506,0 512,0 512,0 616,0 616,0 622,0 628,-6 628,-12 628,-12 628,-56 628,-56 628,-62 622,-68 616,-68\"/>\n<text text-anchor=\"middle\" x=\"564\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"564\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"564\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 0]</text>\n<text text-anchor=\"middle\" x=\"564\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 13&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>13&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M572.7869,-103.9815C571.7368,-95.618 570.6292,-86.7965 569.5675,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"573.0208,-77.7497 568.3022,-68.2637 566.0753,-78.6218 573.0208,-77.7497\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M753.5,-68C753.5,-68 658.5,-68 658.5,-68 652.5,-68 646.5,-62 646.5,-56 646.5,-56 646.5,-12 646.5,-12 646.5,-6 652.5,0 658.5,0 658.5,0 753.5,0 753.5,0 759.5,0 765.5,-6 765.5,-12 765.5,-12 765.5,-56 765.5,-56 765.5,-62 759.5,-68 753.5,-68\"/>\n<text text-anchor=\"middle\" x=\"706\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"706\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"706\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 2]</text>\n<text text-anchor=\"middle\" x=\"706\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 13&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>13&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M625.6625,-103.9815C636.5297,-94.5151 648.0705,-84.462 658.9135,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"661.4245,-77.4712 666.6659,-68.2637 656.8266,-72.1929 661.4245,-77.4712\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"PkMotFBgqRzS","colab":{"base_uri":"https://localhost:8080/","height":971},"executionInfo":{"status":"ok","timestamp":1618209658156,"user_tz":-540,"elapsed":2882,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"440a677d-bcc7-449e-a1fc-2d17b2d9cfc2"},"source":["# min_samples_leaf\n","# 리프 노드가 될 수 있는 샘플 데이터 건수의 최솟값\n","# 모델학습\n","\n","model_tr2 = DecisionTreeClassifier( min_samples_split=2, random_state=42)    \n","model_tr2.fit(X_train, y_train)\n","\n","# 평가\n","print(\"훈련정확도:\", model_tr2.score(X_train, y_train) )\n","print(\"평가정확도:\", model_tr2.score(X_test, y_test) )\n","\n","# 결정트리 규칙 시각화\n","export_graphviz(model_tr2, out_file='tree.dot', \n","                class_names=iris.target_names, \n","                feature_names=iris.feature_names,\n","                impurity=True, filled=True, rounded=True)\n","\n","with open(\"tree.dot\") as f:\n","  dot_graph = f.read()\n","\n","display(graphviz.Source(dot_graph))\n","\n","\n","#결국 파라미터를 통해 모델의 복잡도 // 가지치기등을 조절할 수 있는거구나~~\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련정확도: 1.0\n","평가정확도: 0.9333333333333333\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/plain":["<graphviz.files.Source at 0x7f06538f5910>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"818pt\" height=\"671pt\"\n viewBox=\"0.00 0.00 817.50 671.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 667)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-667 813.5,-667 813.5,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#fffdfd\" stroke=\"#000000\" d=\"M286,-663C286,-663 134,-663 134,-663 128,-663 122,-657 122,-651 122,-651 122,-592 122,-592 122,-586 128,-580 134,-580 134,-580 286,-580 286,-580 292,-580 298,-586 298,-592 298,-592 298,-651 298,-651 298,-657 292,-663 286,-663\"/>\n<text text-anchor=\"middle\" x=\"210\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 2.45</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.667</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 120</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [41, 40, 39]</text>\n<text text-anchor=\"middle\" x=\"210\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = setosa</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M177.5,-536.5C177.5,-536.5 78.5,-536.5 78.5,-536.5 72.5,-536.5 66.5,-530.5 66.5,-524.5 66.5,-524.5 66.5,-480.5 66.5,-480.5 66.5,-474.5 72.5,-468.5 78.5,-468.5 78.5,-468.5 177.5,-468.5 177.5,-468.5 183.5,-468.5 189.5,-474.5 189.5,-480.5 189.5,-480.5 189.5,-524.5 189.5,-524.5 189.5,-530.5 183.5,-536.5 177.5,-536.5\"/>\n<text text-anchor=\"middle\" x=\"128\" y=\"-521.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"128\" y=\"-506.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 41</text>\n<text text-anchor=\"middle\" x=\"128\" y=\"-491.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [41, 0, 0]</text>\n<text text-anchor=\"middle\" x=\"128\" y=\"-476.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = setosa</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M181.3204,-579.8796C173.5917,-568.6636 165.2191,-556.5131 157.4492,-545.2372\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"160.2018,-543.0634 151.6456,-536.8149 154.4377,-547.0353 160.2018,-543.0634\"/>\n<text text-anchor=\"middle\" x=\"147.1196\" y=\"-557.7018\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#fafefc\" stroke=\"#000000\" d=\"M366,-544C366,-544 220,-544 220,-544 214,-544 208,-538 208,-532 208,-532 208,-473 208,-473 208,-467 214,-461 220,-461 220,-461 366,-461 366,-461 372,-461 378,-467 378,-473 378,-473 378,-532 378,-532 378,-538 372,-544 366,-544\"/>\n<text text-anchor=\"middle\" x=\"293\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal width (cm) &lt;= 1.55</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 79</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 40, 39]</text>\n<text text-anchor=\"middle\" x=\"293\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 0&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>0&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M239.0294,-579.8796C245.1855,-571.0534 251.7451,-561.6485 258.0936,-552.5466\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"260.9967,-554.5024 263.8467,-544.2981 255.2552,-550.4978 260.9967,-554.5024\"/>\n<text text-anchor=\"middle\" x=\"268.2331\" y=\"-565.2103\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#3ee684\" stroke=\"#000000\" d=\"M274,-425C274,-425 122,-425 122,-425 116,-425 110,-419 110,-413 110,-413 110,-354 110,-354 110,-348 116,-342 122,-342 122,-342 274,-342 274,-342 280,-342 286,-348 286,-354 286,-354 286,-413 286,-413 286,-419 280,-425 274,-425\"/>\n<text text-anchor=\"middle\" x=\"198\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 5.25</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.051</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 38</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 37, 1]</text>\n<text text-anchor=\"middle\" x=\"198\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M259.7736,-460.8796C252.6556,-451.9633 245.0661,-442.4565 237.7308,-433.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"240.3425,-430.9295 231.3682,-425.2981 234.8719,-435.2968 240.3425,-430.9295\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#8b49e7\" stroke=\"#000000\" d=\"M462,-425C462,-425 316,-425 316,-425 310,-425 304,-419 304,-413 304,-413 304,-354 304,-354 304,-348 310,-342 316,-342 316,-342 462,-342 462,-342 468,-342 474,-348 474,-354 474,-354 474,-413 474,-413 474,-419 468,-425 462,-425\"/>\n<text text-anchor=\"middle\" x=\"389\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal width (cm) &lt;= 1.75</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.136</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 41</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 3, 38]</text>\n<text text-anchor=\"middle\" x=\"389\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 2&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>2&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M326.5761,-460.8796C333.7691,-451.9633 341.4384,-442.4565 348.851,-433.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"351.7258,-435.2788 355.2805,-425.2981 346.2776,-430.8836 351.7258,-435.2788\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#39e581\" stroke=\"#000000\" d=\"M116,-298.5C116,-298.5 12,-298.5 12,-298.5 6,-298.5 0,-292.5 0,-286.5 0,-286.5 0,-242.5 0,-242.5 0,-236.5 6,-230.5 12,-230.5 12,-230.5 116,-230.5 116,-230.5 122,-230.5 128,-236.5 128,-242.5 128,-242.5 128,-286.5 128,-286.5 128,-292.5 122,-298.5 116,-298.5\"/>\n<text text-anchor=\"middle\" x=\"64\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"64\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n<text text-anchor=\"middle\" x=\"64\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 37, 0]</text>\n<text text-anchor=\"middle\" x=\"64\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M151.1333,-341.8796C137.8844,-330.1138 123.4776,-317.3197 110.2644,-305.5855\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"112.4416,-302.8381 102.6403,-298.8149 107.7935,-308.0722 112.4416,-302.8381\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M253.5,-298.5C253.5,-298.5 158.5,-298.5 158.5,-298.5 152.5,-298.5 146.5,-292.5 146.5,-286.5 146.5,-286.5 146.5,-242.5 146.5,-242.5 146.5,-236.5 152.5,-230.5 158.5,-230.5 158.5,-230.5 253.5,-230.5 253.5,-230.5 259.5,-230.5 265.5,-236.5 265.5,-242.5 265.5,-242.5 265.5,-286.5 265.5,-286.5 265.5,-292.5 259.5,-298.5 253.5,-298.5\"/>\n<text text-anchor=\"middle\" x=\"206\" y=\"-283.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"206\" y=\"-268.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"206\" y=\"-253.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"206\" y=\"-238.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M200.798,-341.8796C201.5151,-331.2134 202.2889,-319.7021 203.015,-308.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"206.5144,-309.0272 203.6931,-298.8149 199.5301,-308.5576 206.5144,-309.0272\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<path fill=\"#ffffff\" stroke=\"#000000\" d=\"M453,-306C453,-306 311,-306 311,-306 305,-306 299,-300 299,-294 299,-294 299,-235 299,-235 299,-229 305,-223 311,-223 311,-223 453,-223 453,-223 459,-223 465,-229 465,-235 465,-235 465,-294 465,-294 465,-300 459,-306 453,-306\"/>\n<text text-anchor=\"middle\" x=\"382\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">sepal width (cm) &lt;= 2.6</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 2]</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M386.5517,-341.8796C386.0696,-333.6838 385.5582,-324.9891 385.0589,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"388.54,-316.0753 384.4587,-306.2981 381.5521,-316.4864 388.54,-316.0753\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<path fill=\"#843ee6\" stroke=\"#000000\" d=\"M654,-306C654,-306 502,-306 502,-306 496,-306 490,-300 490,-294 490,-294 490,-235 490,-235 490,-229 496,-223 502,-223 502,-223 654,-223 654,-223 660,-223 666,-229 666,-235 666,-235 666,-294 666,-294 666,-300 660,-306 654,-306\"/>\n<text text-anchor=\"middle\" x=\"578\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 4.85</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.053</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 37</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 36]</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 6&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>6&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M455.103,-341.8796C470.6413,-332.0962 487.3088,-321.6019 503.1987,-311.5971\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"505.3368,-314.3869 511.9343,-306.0969 501.6071,-308.4633 505.3368,-314.3869\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M263.5,-179.5C263.5,-179.5 168.5,-179.5 168.5,-179.5 162.5,-179.5 156.5,-173.5 156.5,-167.5 156.5,-167.5 156.5,-123.5 156.5,-123.5 156.5,-117.5 162.5,-111.5 168.5,-111.5 168.5,-111.5 263.5,-111.5 263.5,-111.5 269.5,-111.5 275.5,-117.5 275.5,-123.5 275.5,-123.5 275.5,-167.5 275.5,-167.5 275.5,-173.5 269.5,-179.5 263.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"216\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"216\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"216\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"216\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 7&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>7&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M323.9413,-222.8796C307.142,-210.8368 288.8401,-197.7167 272.159,-185.7586\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"273.7668,-182.6047 263.6002,-179.623 269.6884,-188.2939 273.7668,-182.6047\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<path fill=\"#9cf2c0\" stroke=\"#000000\" d=\"M458,-187C458,-187 306,-187 306,-187 300,-187 294,-181 294,-175 294,-175 294,-116 294,-116 294,-110 300,-104 306,-104 306,-104 458,-104 458,-104 464,-104 470,-110 470,-116 470,-116 470,-175 470,-175 470,-181 464,-187 458,-187\"/>\n<text text-anchor=\"middle\" x=\"382\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">petal length (cm) &lt;= 5.45</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 1]</text>\n<text text-anchor=\"middle\" x=\"382\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 7&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>7&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M382,-222.8796C382,-214.6838 382,-205.9891 382,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"385.5001,-197.298 382,-187.2981 378.5001,-197.2981 385.5001,-197.298\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<path fill=\"#39e581\" stroke=\"#000000\" d=\"M305,-68C305,-68 201,-68 201,-68 195,-68 189,-62 189,-56 189,-56 189,-12 189,-12 189,-6 195,0 201,0 201,0 305,0 305,0 311,0 317,-6 317,-12 317,-12 317,-56 317,-56 317,-62 311,-68 305,-68\"/>\n<text text-anchor=\"middle\" x=\"253\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"253\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"253\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 2, 0]</text>\n<text text-anchor=\"middle\" x=\"253\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M333.9652,-103.9815C323.013,-94.5151 311.3821,-84.462 300.4544,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"302.4957,-72.155 292.6414,-68.2637 297.9182,-77.4509 302.4957,-72.155\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M442.5,-68C442.5,-68 347.5,-68 347.5,-68 341.5,-68 335.5,-62 335.5,-56 335.5,-56 335.5,-12 335.5,-12 335.5,-6 341.5,0 347.5,0 347.5,0 442.5,0 442.5,0 448.5,0 454.5,-6 454.5,-12 454.5,-12 454.5,-56 454.5,-56 454.5,-62 448.5,-68 442.5,-68\"/>\n<text text-anchor=\"middle\" x=\"395\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"395\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"395\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 1]</text>\n<text text-anchor=\"middle\" x=\"395\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 9&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>9&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M386.8407,-103.9815C387.8158,-95.618 388.8443,-86.7965 389.8302,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"393.3234,-78.6017 391.0051,-68.2637 386.3705,-77.791 393.3234,-78.6017\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<path fill=\"#c09cf2\" stroke=\"#000000\" d=\"M656,-187C656,-187 500,-187 500,-187 494,-187 488,-181 488,-175 488,-175 488,-116 488,-116 488,-110 494,-104 500,-104 500,-104 656,-104 656,-104 662,-104 668,-110 668,-116 668,-116 668,-175 668,-175 668,-181 662,-187 656,-187\"/>\n<text text-anchor=\"middle\" x=\"578\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">sepal length (cm) &lt;= 5.95</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 3</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 2]</text>\n<text text-anchor=\"middle\" x=\"578\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 12&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>12&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M578,-222.8796C578,-214.6838 578,-205.9891 578,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"581.5001,-197.298 578,-187.2981 574.5001,-197.2981 581.5001,-197.298\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M797.5,-179.5C797.5,-179.5 698.5,-179.5 698.5,-179.5 692.5,-179.5 686.5,-173.5 686.5,-167.5 686.5,-167.5 686.5,-123.5 686.5,-123.5 686.5,-117.5 692.5,-111.5 698.5,-111.5 698.5,-111.5 797.5,-111.5 797.5,-111.5 803.5,-111.5 809.5,-117.5 809.5,-123.5 809.5,-123.5 809.5,-167.5 809.5,-167.5 809.5,-173.5 803.5,-179.5 797.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"748\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"748\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 34</text>\n<text text-anchor=\"middle\" x=\"748\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 34]</text>\n<text text-anchor=\"middle\" x=\"748\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 12&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>12&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M637.4578,-222.8796C654.8196,-210.7263 673.7488,-197.4759 690.9575,-185.4297\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"693.0676,-188.225 699.2528,-179.623 689.0533,-182.4904 693.0676,-188.225\"/>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<path fill=\"#39e581\" stroke=\"#000000\" d=\"M616,-68C616,-68 512,-68 512,-68 506,-68 500,-62 500,-56 500,-56 500,-12 500,-12 500,-6 506,0 512,0 512,0 616,0 616,0 622,0 628,-6 628,-12 628,-12 628,-56 628,-56 628,-62 622,-68 616,-68\"/>\n<text text-anchor=\"middle\" x=\"564\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"564\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"564\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1, 0]</text>\n<text text-anchor=\"middle\" x=\"564\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = versicolor</text>\n</g>\n<!-- 13&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>13&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M572.7869,-103.9815C571.7368,-95.618 570.6292,-86.7965 569.5675,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"573.0208,-77.7497 568.3022,-68.2637 566.0753,-78.6218 573.0208,-77.7497\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<path fill=\"#8139e5\" stroke=\"#000000\" d=\"M753.5,-68C753.5,-68 658.5,-68 658.5,-68 652.5,-68 646.5,-62 646.5,-56 646.5,-56 646.5,-12 646.5,-12 646.5,-6 652.5,0 658.5,0 658.5,0 753.5,0 753.5,0 759.5,0 765.5,-6 765.5,-12 765.5,-12 765.5,-56 765.5,-56 765.5,-62 759.5,-68 753.5,-68\"/>\n<text text-anchor=\"middle\" x=\"706\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"706\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"706\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 0, 2]</text>\n<text text-anchor=\"middle\" x=\"706\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = virginica</text>\n</g>\n<!-- 13&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>13&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M625.6625,-103.9815C636.5297,-94.5151 648.0705,-84.462 658.9135,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"661.4245,-77.4712 666.6659,-68.2637 656.8266,-72.1929 661.4245,-77.4712\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"EJSzedIm4TVK"},"source":["##### 트리 특성 중요도\n","\n","- 특성 중요도(feature importance) : 트리를 만드는 결정에 각 특성이 얼마나 중요한지를 평가\n","\n","- 이 값은 0과 1 사이의 숫자로, 각 특성에 대해 0은 전혀 사용되지 않았다는 뜻이고 1은 완벽하게 타깃 클래스를 예측했다는 뜻\n","- 특성 중요도의 전체 합은 1"]},{"cell_type":"markdown","metadata":{"id":"WokVlV4NvWDu"},"source":["feature_importances_\n","\n","- 중요한 몇 개의 특성(feature)이 명확한 트리를 만드는 데 크게 기여 </br>\n","(모델을 좀 더 간결하고 이상치(Outlier)에 강한 모델을 만들 수 있기 때문)\n","- 결정트리가 학습을 통해 규칙을 정하는 데 있으 피처의 중요한 역할 지표를 feature_importances_ 로 제공"]},{"cell_type":"code","metadata":{"id":"P5sASE9AwPZm","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1618209658157,"user_tz":-540,"elapsed":2872,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"f0763b02-1ab3-4e7a-8048-6901285f855b"},"source":["import seaborn as sns\n","import numpy as np\n","%matplotlib inline\n","\n","# feature importance 추출 \n","model_tr2.feature_importances_          # s 붙는다!!\n","# feature별 importance 매핑\n","# 직접 해보자.\n","\n","# feature importance를 column 별로 시각화 하기 . 어떤 특성이 영향을 더 많이 끼치는지 시각화가 된다!\n","sns.barplot(x=model_tr2.feature_importances_,y=iris.feature_names)\n","# 보니까 sepal length와 sepal width 들이 중요도가 높네. "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f064fb7bf10>"]},"metadata":{"tags":[]},"execution_count":190},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"DmaiDDYolydv"},"source":["#### Decision Tree 실습 02\n","\n","two_moon 데이터 결정트리 만들기"]},{"cell_type":"code","metadata":{"id":"kxwqmvtvnzcz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209660766,"user_tz":-540,"elapsed":5469,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"f5fd5b4e-c6c5-4b13-8d5a-c75b98e9fed3"},"source":["!pip install mglearn"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: mglearn in /usr/local/lib/python3.7/dist-packages (0.1.9)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from mglearn) (0.22.2.post1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from mglearn) (1.19.5)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from mglearn) (3.2.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from mglearn) (1.1.5)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from mglearn) (7.1.2)\n","Requirement already satisfied: cycler in /usr/local/lib/python3.7/dist-packages (from mglearn) (0.10.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from mglearn) (1.0.1)\n","Requirement already satisfied: imageio in /usr/local/lib/python3.7/dist-packages (from mglearn) (2.4.1)\n","Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->mglearn) (1.4.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mglearn) (1.3.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mglearn) (2.8.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mglearn) (2.4.7)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->mglearn) (2018.9)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from cycler->mglearn) (1.15.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gw3vvXiUOObL","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1618209660766,"user_tz":-540,"elapsed":5456,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"f8514dd3-0da1-4d34-c453-9cedf3ca4a33"},"source":["import mglearn\n","from sklearn.datasets import make_moons\n","from sklearn.model_selection import train_test_split\n","import matplotlib.pyplot as plt\n","\n","# 데이터 로드\n","X, y = make_moons(n_samples=100, noise=0.2)\n","\n","# 훈련/테스트 데이터 준비\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=13)\n","# 데이터 시각화\n","\n","plt.scatter(X[:, 0], X[:,1], c=y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f064fe63190>"]},"metadata":{"tags":[]},"execution_count":192},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"MRmNv8byqBNO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209660767,"user_tz":-540,"elapsed":5445,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"6634b978-fd35-4f20-fec5-f40234670aca"},"source":["# 모델 생성과 학습\n","from sklearn.tree import DecisionTreeClassifier\n","\n","model_tr3 = DecisionTreeClassifier(max_depth=5,random_state=42)\n","\n","model_tr3.fit(X_train,y_train)\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',\n","                       max_depth=5, max_features=None, max_leaf_nodes=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, presort='deprecated',\n","                       random_state=42, splitter='best')"]},"metadata":{"tags":[]},"execution_count":193}]},{"cell_type":"code","metadata":{"id":"Im1piGA9uTWB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209660768,"user_tz":-540,"elapsed":5436,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"eb873a14-fdd4-45df-83b2-b5e9eb47fcb5"},"source":["# 평가\n","from sklearn.metrics import accuracy_score\n","\n","pred_3 = model_tr3.predict(X_test)\n","\n","accuracy_score(y_test, pred_3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.88"]},"metadata":{"tags":[]},"execution_count":194}]},{"cell_type":"code","metadata":{"id":"cWOj3OpDvY5D","colab":{"base_uri":"https://localhost:8080/","height":914},"executionInfo":{"status":"ok","timestamp":1618209660768,"user_tz":-540,"elapsed":5426,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"2dedf660-64d7-49af-c916-55d2459d1f27"},"source":["# 결정트리 규칙을 시각화\n","from sklearn.tree import export_graphviz\n","import graphviz\n","\n","# export_graphviz() 를 호출하여 out_file 파라메터의 \"tree.dot\" 파일을 생성\n","export_graphviz(model_tr3, out_file='tree.dot',\n","               class_names= ['c0','c1'],\n","                impurity=True, filled=True)\n","# \"tree.dot\" 파일을 graphviz 가 읽어서 주피터 노트북에 시각화\n","with open('tree.dot') as f:\n","  dot_graph = f.read()\n","\n","display(graphviz.Source(dot_graph))\n","\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<graphviz.files.Source at 0x7f0650335550>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"460pt\" height=\"671pt\"\n viewBox=\"0.00 0.00 460.00 671.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 667)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-667 456,-667 456,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<polygon fill=\"#fafcfe\" stroke=\"#000000\" points=\"280.5,-663 170.5,-663 170.5,-580 280.5,-580 280.5,-663\"/>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-647.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[1] &lt;= 0.037</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-632.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-617.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 75</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-602.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [37, 38]</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-587.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c1</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<polygon fill=\"#40a0e6\" stroke=\"#000000\" points=\"215.5,-544 109.5,-544 109.5,-461 215.5,-461 215.5,-544\"/>\n<text text-anchor=\"middle\" x=\"162.5\" y=\"-528.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[0] &lt;= &#45;0.744</text>\n<text text-anchor=\"middle\" x=\"162.5\" y=\"-513.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.067</text>\n<text text-anchor=\"middle\" x=\"162.5\" y=\"-498.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 29</text>\n<text text-anchor=\"middle\" x=\"162.5\" y=\"-483.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 28]</text>\n<text text-anchor=\"middle\" x=\"162.5\" y=\"-468.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c1</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M203.4657,-579.8796C198.936,-571.3236 194.1185,-562.2238 189.4382,-553.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"192.4006,-551.4983 184.6284,-544.2981 186.2141,-554.7736 192.4006,-551.4983\"/>\n<text text-anchor=\"middle\" x=\"177.2762\" y=\"-564.4925\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<polygon fill=\"#eca470\" stroke=\"#000000\" points=\"343.5,-544 233.5,-544 233.5,-461 343.5,-461 343.5,-544\"/>\n<text text-anchor=\"middle\" x=\"288.5\" y=\"-528.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[0] &lt;= 1.377</text>\n<text text-anchor=\"middle\" x=\"288.5\" y=\"-513.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.34</text>\n<text text-anchor=\"middle\" x=\"288.5\" y=\"-498.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 46</text>\n<text text-anchor=\"middle\" x=\"288.5\" y=\"-483.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [36, 10]</text>\n<text text-anchor=\"middle\" x=\"288.5\" y=\"-468.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 0&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>0&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M247.5343,-579.8796C252.064,-571.3236 256.8815,-562.2238 261.5618,-553.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"264.7859,-554.7736 266.3716,-544.2981 258.5994,-551.4983 264.7859,-554.7736\"/>\n<text text-anchor=\"middle\" x=\"273.7238\" y=\"-564.4925\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"95,-417.5 0,-417.5 0,-349.5 95,-349.5 95,-417.5\"/>\n<text text-anchor=\"middle\" x=\"47.5\" y=\"-402.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"47.5\" y=\"-387.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"47.5\" y=\"-372.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n<text text-anchor=\"middle\" x=\"47.5\" y=\"-357.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M122.2786,-460.8796C111.1208,-449.3337 99.0061,-436.7976 87.8414,-425.2446\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"90.1275,-422.5736 80.6615,-417.8149 85.0939,-427.4381 90.1275,-422.5736\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"215.5,-417.5 113.5,-417.5 113.5,-349.5 215.5,-349.5 215.5,-417.5\"/>\n<text text-anchor=\"middle\" x=\"164.5\" y=\"-402.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"164.5\" y=\"-387.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 28</text>\n<text text-anchor=\"middle\" x=\"164.5\" y=\"-372.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 28]</text>\n<text text-anchor=\"middle\" x=\"164.5\" y=\"-357.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c1</text>\n</g>\n<!-- 1&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>1&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M163.1995,-460.8796C163.3788,-450.2134 163.5722,-438.7021 163.7538,-427.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"167.2546,-427.8724 163.9233,-417.8149 160.2556,-427.7547 167.2546,-427.8724\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<polygon fill=\"#e88f4f\" stroke=\"#000000\" points=\"338.5,-425 236.5,-425 236.5,-342 338.5,-342 338.5,-425\"/>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-409.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[1] &lt;= 0.489</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-394.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.18</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-379.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 40</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-364.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [36, 4]</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-349.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 4&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>4&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M288.1502,-460.8796C288.0814,-452.6838 288.0083,-443.9891 287.937,-435.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"291.4352,-435.2683 287.8512,-425.2981 284.4355,-435.3272 291.4352,-435.2683\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"452,-417.5 357,-417.5 357,-349.5 452,-349.5 452,-417.5\"/>\n<text text-anchor=\"middle\" x=\"404.5\" y=\"-402.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"404.5\" y=\"-387.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"middle\" x=\"404.5\" y=\"-372.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 6]</text>\n<text text-anchor=\"middle\" x=\"404.5\" y=\"-357.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c1</text>\n</g>\n<!-- 4&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>4&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M329.0712,-460.8796C340.326,-449.3337 352.5461,-436.7976 363.8078,-425.2446\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"366.5762,-427.4188 371.0501,-417.8149 361.5636,-422.5326 366.5762,-427.4188\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<polygon fill=\"#eeab7b\" stroke=\"#000000\" points=\"278.5,-306 176.5,-306 176.5,-223 278.5,-223 278.5,-306\"/>\n<text text-anchor=\"middle\" x=\"227.5\" y=\"-290.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[0] &lt;= 0.426</text>\n<text text-anchor=\"middle\" x=\"227.5\" y=\"-275.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.375</text>\n<text text-anchor=\"middle\" x=\"227.5\" y=\"-260.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"middle\" x=\"227.5\" y=\"-245.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [12, 4]</text>\n<text text-anchor=\"middle\" x=\"227.5\" y=\"-230.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 5&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>5&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M266.5149,-341.8796C262.201,-333.3236 257.6128,-324.2238 253.1554,-315.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"256.2021,-313.6515 248.5747,-306.2981 249.9516,-316.8031 256.2021,-313.6515\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"398.5,-298.5 296.5,-298.5 296.5,-230.5 398.5,-230.5 398.5,-298.5\"/>\n<text text-anchor=\"middle\" x=\"347.5\" y=\"-283.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"347.5\" y=\"-268.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 24</text>\n<text text-anchor=\"middle\" x=\"347.5\" y=\"-253.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [24, 0]</text>\n<text text-anchor=\"middle\" x=\"347.5\" y=\"-238.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 5&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>5&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M308.4851,-341.8796C314.0293,-330.8835 320.0264,-318.9893 325.6169,-307.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"328.8214,-309.3199 330.1984,-298.8149 322.5709,-306.1684 328.8214,-309.3199\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<polygon fill=\"#ffffff\" stroke=\"#000000\" points=\"221.5,-187 115.5,-187 115.5,-104 221.5,-104 221.5,-187\"/>\n<text text-anchor=\"middle\" x=\"168.5\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[0] &lt;= &#45;0.642</text>\n<text text-anchor=\"middle\" x=\"168.5\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"168.5\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n<text text-anchor=\"middle\" x=\"168.5\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 4]</text>\n<text text-anchor=\"middle\" x=\"168.5\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M206.8647,-222.8796C202.6226,-214.3236 198.111,-205.2238 193.7279,-196.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"196.8012,-194.7026 189.2234,-187.2981 190.5297,-197.8121 196.8012,-194.7026\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"335,-179.5 240,-179.5 240,-111.5 335,-111.5 335,-179.5\"/>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-164.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-149.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-134.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 0]</text>\n<text text-anchor=\"middle\" x=\"287.5\" y=\"-119.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 6&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>6&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M248.4851,-222.8796C254.0293,-211.8835 260.0264,-199.9893 265.6169,-188.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"268.8214,-190.3199 270.1984,-179.8149 262.5709,-187.1684 268.8214,-190.3199\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"160,-68 65,-68 65,0 160,0 160,-68\"/>\n<text text-anchor=\"middle\" x=\"112.5\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"112.5\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"112.5\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 0]</text>\n<text text-anchor=\"middle\" x=\"112.5\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c0</text>\n</g>\n<!-- 7&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>7&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M147.6477,-103.9815C143.2625,-95.2504 138.6267,-86.0202 134.211,-77.2281\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"137.3246,-75.6291 129.7087,-68.2637 131.0692,-78.7708 137.3246,-75.6291\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"273,-68 178,-68 178,0 273,0 273,-68\"/>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 4]</text>\n<text text-anchor=\"middle\" x=\"225.5\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = c1</text>\n</g>\n<!-- 7&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>7&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M189.7247,-103.9815C194.1881,-95.2504 198.9067,-86.0202 203.4013,-77.2281\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"206.5486,-78.7608 207.984,-68.2637 200.3158,-75.5745 206.5486,-78.7608\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Rln_FZ-D3bzX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209660769,"user_tz":-540,"elapsed":5416,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"995aeebe-0547-4552-9325-72f76fc125d4"},"source":["# 트리 특성별 중요도\n","\n","model_tr3.feature_importances_   \n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.43696324, 0.56303676])"]},"metadata":{"tags":[]},"execution_count":196}]},{"cell_type":"code","metadata":{"id":"2r-8NbOA5Vh6"},"source":["# 특성 중요도 시각화\n","import numpy as np\n","\n","# sns.barplot( x= m)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MUZ7PBO9FiI0"},"source":["#### 분류 결과 시각화"]},{"cell_type":"code","metadata":{"id":"mPZXunq98fl6"},"source":["import numpy as np\n","\n","# Classifier의 Decision Boundary를 시각화 하는 함수\n","def plot_decision_boundary(model, X, y):\n","    padding=0.15\n","    res=0.01\n","    \n","    # 데이터 세트의 x, y의 최대 값과 최소값\n","    x_min, x_max = X[:,0].min(), X[:,0].max()\n","    y_min, y_max = X[:,1].min(), X[:,1].max()\n","    \n","    # x와 y의 범위\n","    x_range = x_max - x_min\n","    y_range = y_max - y_min\n","    \n","    # 범위에 패딩 추가\n","    x_min -= x_range * padding\n","    y_min -= y_range * padding\n","    x_max += x_range * padding\n","    y_max += y_range * padding\n","\n","    # 위의 포인트 범위로 메쉬그리드를 생성\n","    xx,yy = np.meshgrid( np.arange(x_min,x_max,res), np.arange(y_min,y_max,res) )\n","    \n","    # meshgrid 형태인 모든 좌표값으로 예측 수행.\n","    # 모델을 사용하여 그리드 라벨의 각 지점에서 클래스를 예측하여 2D 배열을 벡터로 변환\n","    # c_ concatenates 예측을 수행 할 하나의 긴 벡터를 만듭니다.\n","    # 마지막으로 예측 벡터는 원래 데이터 형태로 재구성됩니다.\n","    Z = model.predict(np.c_[xx.ravel(), yy.ravel()])   \n","    Z = Z.reshape(xx.shape)\n","    \n","    # contourf() 를 이용하여 그리드에 class boundary를 시각화\n","    plt.figure(figsize=(8,6))\n","    cs = plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral, alpha=0.8)\n","    \n","    # 원래 데이터와 레이블을 시각화\n","    plt.scatter(X[:,0], X[:,1], s=35, c=y, cmap=plt.cm.Spectral)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"y075WX0o5_76","colab":{"base_uri":"https://localhost:8080/","height":391},"executionInfo":{"status":"ok","timestamp":1618209661333,"user_tz":-540,"elapsed":5960,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"6776042f-1e12-4f4b-d334-fd00d247b2b1"},"source":["# 분류 결과 시각화\n","import numpy as np\n","plt.figure(figsize=(24,16))\n","plot_decision_boundary(model_tr3,X_train,y_train)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1728x1152 with 0 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"p78zLYjttxA7"},"source":["- 결정경계 : 영역을 반복해서 나눠가는 과정에서 정해지기 때문에 직선 형태를 취하지 않음 -> 선형\n","분리가 불가능한 문제에 유리\n","\n","- 불순도 (impurity)를 기준으로 가능한 같은 클래스끼리 모이도록 조건 분기 학습 -> 엔트로피\n","(Entropy), 지니 계수 (Gini coefficient)"]},{"cell_type":"markdown","metadata":{"id":"wE7176REurbi"},"source":["#### 의사결정 트리 과정\n","\n","- 불순도로 Gini 지수를 사용한 경우\n","\n"," - 지니 불순도\n","\n"," > ${ G }_{ i }= 1-\\sum\\limits _{ k=1 }^{ n }{ { p }_{ i,k }^{ 2 }  }  $\n"," \n"," > [10, 6] 의 GI :$ G(A)=1-{ (\\frac { 10 }{ 16 } ) }^{ 2 } - { (\\frac { 6 }{ 16 } ) }^{ 2 }\\approx  0.47 $\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"Ao6H_obBwtwp"},"source":["\n"," - 의사결정나무는 구분 뒤 각 영역의 순도가 증가/불확실성이 최대한 감소하도록 학습\n","\n"," > \\\\( GI=\\sum\\limits _{ i=1 }^{ d }{ { (R }_{ i }(1-\\sum\\limits _{ k=1 }^{ m }{ { p }_{ ik }^{ 2 })) }  }  \\\\)\n","\n"," - \\\\( { p }_{ k } \\\\)\n",": 분리된 집단에서 k집단이 속한 비율,\n"," - \\\\( { R }_{ i } \\\\)\n",": 전체집단에서 분리된 집단의 비율\n","\n","\n","○의 GI (적색선으로 분리한 후) : \\\\( G(A)=0.5 \\times (1-{ (\\frac { 7 }{ 8 } ) }^{ 2 }-{ (\\frac { 1 }{ 8 } ) }^{ 2 } )  + 0.5 \\times (1-{ (\\frac { 5 }{ 8 } ) }^{ 2 }-{ (\\frac { 3 }{ 8 } ) }^{ 2 } ) \\approx 0.34 \\\\)"]},{"cell_type":"markdown","metadata":{"id":"Pwk1UJDHEe2p"},"source":["#### 결정트리 과적합(Overfitting)\n"]},{"cell_type":"code","metadata":{"id":"Q_uxLDxjGRfB","colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"status":"ok","timestamp":1618209681488,"user_tz":-540,"elapsed":781,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"b62d147d-de28-4661-b676-87c91897a82a"},"source":["from sklearn.datasets import make_classification\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# 2차원 시각화를 위해서 feature는 2개, 결정값 클래스는 3가지 유형의 classification 샘플 데이터 생성. \n","X, y = make_classification(n_features=2, n_classes=3, random_state=0, \n","                           n_redundant=0, n_clusters_per_class=1)\n","# plot 형태로 2개의 feature로 2차원 좌표 시각화\n","# 각 클래스값은 다른 색깔로 표시됨. \n","plt.scatter(X[:, 0], X[:, 1], c=y, s=45, cmap='rainbow', edgecolors='k')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f0650358dd0>"]},"metadata":{"tags":[]},"execution_count":201},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"BCHc78IkJTPs","colab":{"base_uri":"https://localhost:8080/","height":374},"executionInfo":{"status":"ok","timestamp":1618209682359,"user_tz":-540,"elapsed":1644,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"04a1f2dc-3596-4450-f48c-901405447b6d"},"source":["# 결정기준 경계를 시각화\n","# 결정트리 생성에 별다른 제약이 없도록 하이퍼 파라미터를 디폴트로 생성\n","from sklearn.tree import DecisionTreeClassifier\n","\n","# 특정한 트리 생성 제약없는 결정 트리의 Decsion Boundary 시각화.\n","model = DecisionTreeClassifier().fit(X, y)          # 기본 옵션은 생각보다 되게 엄격하다.\n","\n","plot_decision_boundary(model, X, y)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"fRSa1QDUQgkw"},"source":["- 일부 이상치(Outlier) 데이터까지 분류하기 위해 분할이 자주 일어나서 결정 기준 경계가 매우 많아졌음\n","- 리프 노드 안에 데이터가 모두 균일하거나 하나만 존재해야 하는 엄격한 분할 기준으로 인해 결정 기준 경계가 많아지고 복잡해짐\n","- 이렇게 복잡한 모델은 학습 데이터 세트의 특성과 약간만 다른 형태의 데이터 세트를 예측하면 예측 정확도가 떨어지게 됨\n"]},{"cell_type":"code","metadata":{"id":"SHcBzsWiJlAH","colab":{"base_uri":"https://localhost:8080/","height":374},"executionInfo":{"status":"ok","timestamp":1618209682801,"user_tz":-540,"elapsed":2079,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"1ff9a2f2-7ce4-462f-b65a-df7c77818ae2"},"source":["# min_samples_leaf=6 으로 트리 생성 조건을 제약한 Decision Boundary 시각화\n","# 6개 이하의 데이터는 리프 노드를 생성할 수 있도록 리프 노드 생성 규칙을 완화\n","# sample이 6개 이하가 되면 분류가 덜 되었더라도 거기서 세분화를 멈춘다!!!!!\n","\n","model = DecisionTreeClassifier(min_samples_leaf=6).fit(X, y)\n","plot_decision_boundary(model, X, y)\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"zC3q2uGFRg-J"},"source":["- 이상치에 크게 반응하지 않으면서 좀더 일반화된 분류 규칙에 따라 분류됨\n","- 테스트 데이터 세트는 학습 데이터 세트와는 다른 데이터 세트인데, 학습 데이터에만 지나치게 최적화된 분류 기준은 오히려 테스트 데이터 세트에서 정확도를 떨어뜨릴 수 있음"]},{"cell_type":"markdown","metadata":{"id":"s7onSizD2D3e"},"source":["#### Decision Tree 실습 03 - 유방암 데이터\n","\n","유방암 데이터에 결정트리 적용 및 사전 가지치기"]},{"cell_type":"code","metadata":{"id":"jJyMK88_2TOd"},"source":["from sklearn.tree import DecisionTreeClassifier\n","from sklearn.datasets import load_breast_cancer\n","\n","cancer = load_breast_cancer()\n","\n","# stratify : 지정한 Data의 비율을 유지한다. \n","# 예를 들어, Label Set인 Y가 25%의 0과 75%의 1로 이루어진 Binary Set일 때, \n","# stratify=Y로 설정하면 나누어진 데이터셋들도 0과 1을 각각 25%, 75%로 유지한채 분할된다.\n","X_train, X_test, y_train, y_test = train_test_split(cancer.data, \n","                                                    cancer.target, \n","                                                    stratify=cancer.target, \n","                                                    random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"K09lXnQLDznQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209682803,"user_tz":-540,"elapsed":2069,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"902dc3b0-c87c-43a7-e244-a04fcb5234c9"},"source":["# 모델학습\n","model_tr4 = DecisionTreeClassifier()\n","\n","model_tr4.fit(X_train,y_train)\n","\n","# 모든 리프 노드가 순수노드이면 훈련 세트 정확도는 100%\n","\n","\n","# 정확도\n","model_tr4.score(X_train,y_train), model_tr4.score(X_test,y_test)  #나름 정확\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.0, 0.916083916083916)"]},"metadata":{"tags":[]},"execution_count":205}]},{"cell_type":"markdown","metadata":{"id":"Dl7bNA58VbsP"},"source":["- 트리의 깊이를 제한하면 과대적합이 줄어듦\n","- 훈련 세트의 정확도를 떨어뜨리지만 테스트 세트의 성능은 개선"]},{"cell_type":"code","metadata":{"id":"j2spl5D6D1sr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209682804,"user_tz":-540,"elapsed":2065,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"b33db992-667e-415f-e540-a9df82d97302"},"source":["# 사전가지치기\n","# 훈련 데이터에 완전히 학습되기 전에 트리의 성장을 막음\n","# 1) max_depth=4 : 연속된 질문을 최대 (4)개로 제한\n","\n","\n","model_tr4 = DecisionTreeClassifier(max_depth=4)\n","\n","model_tr4.fit(X_train,y_train)\n","\n","\n","# 정확도\n","model_tr4.score(X_train,y_train), model_tr4.score(X_test,y_test)\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.9859154929577465, 0.916083916083916)"]},"metadata":{"tags":[]},"execution_count":206}]},{"cell_type":"code","metadata":{"id":"yYuY6dPR3IwW","colab":{"base_uri":"https://localhost:8080/","height":776},"executionInfo":{"status":"ok","timestamp":1618209682805,"user_tz":-540,"elapsed":2061,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"0283ce8a-f9e6-479a-dcb0-4b510fc61ff3"},"source":["# 결정트리 시각화\n","from sklearn.tree import export_graphviz\n","import graphviz\n","\n","# export_graphviz() 를 호출하여 out_file 파라메터의 \"tree.dot\" 파일을 생성\n","export_graphviz(model_tr4, out_file='tree.dot',\n","               class_names= ['O','X'],\n","                impurity=True, filled=True)\n","# \"tree.dot\" 파일을 graphviz 가 읽어서 주피터 노트북에 시각화\n","with open('tree.dot') as f:\n","  dot_graph = f.read()\n","\n","display(graphviz.Source(dot_graph))"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<graphviz.files.Source at 0x7f065036ad50>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"1456pt\" height=\"552pt\"\n viewBox=\"0.00 0.00 1456.00 552.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 548)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-548 1452,-548 1452,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<polygon fill=\"#afd7f4\" stroke=\"#000000\" points=\"924.5,-544 799.5,-544 799.5,-461 924.5,-461 924.5,-544\"/>\n<text text-anchor=\"middle\" x=\"862\" y=\"-528.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[22] &lt;= 112.8</text>\n<text text-anchor=\"middle\" x=\"862\" y=\"-513.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.468</text>\n<text text-anchor=\"middle\" x=\"862\" y=\"-498.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 426</text>\n<text text-anchor=\"middle\" x=\"862\" y=\"-483.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [159, 267]</text>\n<text text-anchor=\"middle\" x=\"862\" y=\"-468.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<polygon fill=\"#4ca6e8\" stroke=\"#000000\" points=\"742.5,-425 625.5,-425 625.5,-342 742.5,-342 742.5,-425\"/>\n<text text-anchor=\"middle\" x=\"684\" y=\"-409.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[27] &lt;= 0.146</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-394.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.161</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-379.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 284</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-364.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [25, 259]</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-349.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M799.7442,-460.8796C784.0952,-450.4176 767.2301,-439.1426 751.3448,-428.5227\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"752.893,-425.3476 742.6345,-422.6995 749.0026,-431.1669 752.893,-425.3476\"/>\n<text text-anchor=\"middle\" x=\"747.5056\" y=\"-443.5203\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<polygon fill=\"#e78945\" stroke=\"#000000\" points=\"1082,-425 972,-425 972,-342 1082,-342 1082,-425\"/>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-409.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[7] &lt;= 0.043</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-394.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.106</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-379.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 142</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-364.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [134, 8]</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-349.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 0&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>0&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M919.709,-460.8796C933.8477,-450.6825 949.0574,-439.7131 963.4531,-429.3308\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"965.7575,-431.9842 971.8208,-423.2959 961.6628,-426.3067 965.7575,-431.9842\"/>\n<text text-anchor=\"middle\" x=\"967.8236\" y=\"-444.2743\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<polygon fill=\"#3fa0e6\" stroke=\"#000000\" points=\"408,-306 298,-306 298,-223 408,-223 408,-306\"/>\n<text text-anchor=\"middle\" x=\"353\" y=\"-290.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[13] &lt;= 42.95</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-275.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.06</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-260.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 260</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-245.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 252]</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-230.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M625.2052,-362.3623C566.9249,-341.4095 477.869,-309.3925 417.6321,-287.7363\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"418.8155,-284.4425 408.2211,-284.3529 416.4473,-291.0297 418.8155,-284.4425\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<polygon fill=\"#f0b58b\" stroke=\"#000000\" points=\"738.5,-306 629.5,-306 629.5,-223 738.5,-223 738.5,-306\"/>\n<text text-anchor=\"middle\" x=\"684\" y=\"-290.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[21] &lt;= 23.74</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-275.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.413</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-260.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 24</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-245.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [17, 7]</text>\n<text text-anchor=\"middle\" x=\"684\" y=\"-230.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 1&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>1&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M684,-341.8796C684,-333.6838 684,-324.9891 684,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"687.5001,-316.298 684,-306.2981 680.5001,-316.2981 687.5001,-316.298\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<polygon fill=\"#3c9fe5\" stroke=\"#000000\" points=\"231,-187 121,-187 121,-104 231,-104 231,-187\"/>\n<text text-anchor=\"middle\" x=\"176\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[27] &lt;= 0.136</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.031</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 251</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 247]</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M297.9663,-227.5C279.4907,-215.0785 258.7329,-201.1227 239.6521,-188.2944\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"241.5559,-185.3568 231.3042,-182.6819 237.6502,-191.166 241.5559,-185.3568\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<polygon fill=\"#d7ebfa\" stroke=\"#000000\" points=\"407.5,-187 298.5,-187 298.5,-104 407.5,-104 407.5,-187\"/>\n<text text-anchor=\"middle\" x=\"353\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[15] &lt;= 0.015</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.494</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 5]</text>\n<text text-anchor=\"middle\" x=\"353\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 2&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>2&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M353,-222.8796C353,-214.6838 353,-205.9891 353,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"356.5001,-197.298 353,-187.2981 349.5001,-197.2981 356.5001,-197.298\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<polygon fill=\"#3b9ee5\" stroke=\"#000000\" points=\"110,-68 0,-68 0,0 110,0 110,-68\"/>\n<text text-anchor=\"middle\" x=\"55\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.016</text>\n<text text-anchor=\"middle\" x=\"55\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 245</text>\n<text text-anchor=\"middle\" x=\"55\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 243]</text>\n<text text-anchor=\"middle\" x=\"55\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M130.9441,-103.9815C120.7709,-94.607 109.9733,-84.6572 99.8102,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"101.9087,-72.4663 92.183,-68.2637 97.1651,-77.6141 101.9087,-72.4663\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<polygon fill=\"#9ccef2\" stroke=\"#000000\" points=\"223.5,-68 128.5,-68 128.5,0 223.5,0 223.5,-68\"/>\n<text text-anchor=\"middle\" x=\"176\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 4]</text>\n<text text-anchor=\"middle\" x=\"176\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M176,-103.9815C176,-95.618 176,-86.7965 176,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"179.5001,-78.2636 176,-68.2637 172.5001,-78.2637 179.5001,-78.2636\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<polygon fill=\"#eca06a\" stroke=\"#000000\" points=\"336.5,-68 241.5,-68 241.5,0 336.5,0 336.5,-68\"/>\n<text text-anchor=\"middle\" x=\"289\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.32</text>\n<text text-anchor=\"middle\" x=\"289\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"middle\" x=\"289\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 1]</text>\n<text text-anchor=\"middle\" x=\"289\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M329.1688,-103.9815C324.1044,-95.1585 318.7475,-85.8258 313.6532,-76.9506\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"316.6807,-75.1942 308.667,-68.2637 310.6097,-78.6789 316.6807,-75.1942\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"449.5,-68 354.5,-68 354.5,0 449.5,0 449.5,-68\"/>\n<text text-anchor=\"middle\" x=\"402\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 4</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 4]</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 6&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>6&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M371.2458,-103.9815C375.0424,-95.3423 379.0538,-86.2144 382.8808,-77.5059\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"386.1233,-78.8268 386.9424,-68.2637 379.7149,-76.0105 386.1233,-78.8268\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<polygon fill=\"#5aade9\" stroke=\"#000000\" points=\"673.5,-187 572.5,-187 572.5,-104 673.5,-104 673.5,-187\"/>\n<text text-anchor=\"middle\" x=\"623\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[24] &lt;= 0.17</text>\n<text text-anchor=\"middle\" x=\"623\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.245</text>\n<text text-anchor=\"middle\" x=\"623\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n<text text-anchor=\"middle\" x=\"623\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 6]</text>\n<text text-anchor=\"middle\" x=\"623\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M662.6652,-222.8796C658.2793,-214.3236 653.6147,-205.2238 649.083,-196.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"652.1022,-194.6004 644.4259,-187.2981 645.873,-197.7936 652.1022,-194.6004\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<polygon fill=\"#e78945\" stroke=\"#000000\" points=\"800,-187 692,-187 692,-104 800,-104 800,-187\"/>\n<text text-anchor=\"middle\" x=\"746\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[0] &lt;= 11.025</text>\n<text text-anchor=\"middle\" x=\"746\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.111</text>\n<text text-anchor=\"middle\" x=\"746\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 17</text>\n<text text-anchor=\"middle\" x=\"746\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [16, 1]</text>\n<text text-anchor=\"middle\" x=\"746\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 9&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>9&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M705.6846,-222.8796C710.1423,-214.3236 714.8834,-205.2238 719.4894,-196.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"722.7062,-197.7838 724.2229,-187.2981 716.4983,-194.5494 722.7062,-197.7838\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"562.5,-68 467.5,-68 467.5,0 562.5,0 562.5,-68\"/>\n<text text-anchor=\"middle\" x=\"515\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"515\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"middle\" x=\"515\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 6]</text>\n<text text-anchor=\"middle\" x=\"515\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 10&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>10&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M582.7848,-103.9815C573.7936,-94.6989 564.256,-84.8522 555.2629,-75.5677\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"557.6596,-73.0115 548.1881,-68.2637 552.6316,-77.8817 557.6596,-73.0115\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"675.5,-68 580.5,-68 580.5,0 675.5,0 675.5,-68\"/>\n<text text-anchor=\"middle\" x=\"628\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"628\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"628\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n<text text-anchor=\"middle\" x=\"628\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 10&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>10&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M624.8618,-103.9815C625.2369,-95.618 625.6324,-86.7965 626.0116,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"629.5119,-78.4105 626.4635,-68.2637 622.519,-78.0968 629.5119,-78.4105\"/>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"788.5,-68 693.5,-68 693.5,0 788.5,0 788.5,-68\"/>\n<text text-anchor=\"middle\" x=\"741\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"741\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"741\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n<text text-anchor=\"middle\" x=\"741\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 13&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>13&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M744.1382,-103.9815C743.7631,-95.618 743.3676,-86.7965 742.9884,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"746.481,-78.0968 742.5365,-68.2637 739.4881,-78.4105 746.481,-78.0968\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"909,-68 807,-68 807,0 909,0 909,-68\"/>\n<text text-anchor=\"middle\" x=\"858\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"858\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"middle\" x=\"858\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [16, 0]</text>\n<text text-anchor=\"middle\" x=\"858\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 13&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>13&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M787.7047,-103.9815C797.0289,-94.6989 806.9197,-84.8522 816.2459,-75.5677\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"818.9651,-77.7993 823.5827,-68.2637 814.0264,-72.8385 818.9651,-77.7993\"/>\n</g>\n<!-- 17 -->\n<g id=\"node18\" class=\"node\">\n<title>17</title>\n<polygon fill=\"#ffffff\" stroke=\"#000000\" points=\"1081.5,-306 972.5,-306 972.5,-223 1081.5,-223 1081.5,-306\"/>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-290.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[1] &lt;= 20.165</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-275.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-260.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-245.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 6]</text>\n<text text-anchor=\"middle\" x=\"1027\" y=\"-230.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 16&#45;&gt;17 -->\n<g id=\"edge17\" class=\"edge\">\n<title>16&#45;&gt;17</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1027,-341.8796C1027,-333.6838 1027,-324.9891 1027,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1030.5001,-316.298 1027,-306.2981 1023.5001,-316.2981 1030.5001,-316.298\"/>\n</g>\n<!-- 22 -->\n<g id=\"node23\" class=\"node\">\n<title>22</title>\n<polygon fill=\"#e5833c\" stroke=\"#000000\" points=\"1263,-306 1153,-306 1153,-223 1263,-223 1263,-306\"/>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-290.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[26] &lt;= 0.182</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-275.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.03</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-260.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 130</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-245.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [128, 2]</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-230.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 16&#45;&gt;22 -->\n<g id=\"edge22\" class=\"edge\">\n<title>16&#45;&gt;22</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1082.2895,-347.1495C1101.8474,-334.2909 1124.0046,-319.7235 1144.2105,-306.4389\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1146.3044,-309.251 1152.7375,-300.8328 1142.4588,-303.4019 1146.3044,-309.251\"/>\n</g>\n<!-- 18 -->\n<g id=\"node19\" class=\"node\">\n<title>18</title>\n<polygon fill=\"#5aade9\" stroke=\"#000000\" points=\"1029.5,-187 920.5,-187 920.5,-104 1029.5,-104 1029.5,-187\"/>\n<text text-anchor=\"middle\" x=\"975\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[17] &lt;= 0.006</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.245</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 6]</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 17&#45;&gt;18 -->\n<g id=\"edge18\" class=\"edge\">\n<title>17&#45;&gt;18</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1008.8129,-222.8796C1005.1135,-214.4136 1001.1815,-205.4153 997.3567,-196.6626\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1000.4761,-195.0599 993.2647,-187.2981 994.0617,-197.8629 1000.4761,-195.0599\"/>\n</g>\n<!-- 21 -->\n<g id=\"node22\" class=\"node\">\n<title>21</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"1142.5,-179.5 1047.5,-179.5 1047.5,-111.5 1142.5,-111.5 1142.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"1095\" y=\"-164.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1095\" y=\"-149.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"middle\" x=\"1095\" y=\"-134.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [5, 0]</text>\n<text text-anchor=\"middle\" x=\"1095\" y=\"-119.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 17&#45;&gt;21 -->\n<g id=\"edge21\" class=\"edge\">\n<title>17&#45;&gt;21</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1050.7831,-222.8796C1057.1294,-211.7735 1063.9993,-199.7513 1070.3891,-188.5691\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1073.4689,-190.2339 1075.3915,-179.8149 1067.3912,-186.7609 1073.4689,-190.2339\"/>\n</g>\n<!-- 19 -->\n<g id=\"node20\" class=\"node\">\n<title>19</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"1022.5,-68 927.5,-68 927.5,0 1022.5,0 1022.5,-68\"/>\n<text text-anchor=\"middle\" x=\"975\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 0]</text>\n<text text-anchor=\"middle\" x=\"975\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 18&#45;&gt;19 -->\n<g id=\"edge19\" class=\"edge\">\n<title>18&#45;&gt;19</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M975,-103.9815C975,-95.618 975,-86.7965 975,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"978.5001,-78.2636 975,-68.2637 971.5001,-78.2637 978.5001,-78.2636\"/>\n</g>\n<!-- 20 -->\n<g id=\"node21\" class=\"node\">\n<title>20</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"1135.5,-68 1040.5,-68 1040.5,0 1135.5,0 1135.5,-68\"/>\n<text text-anchor=\"middle\" x=\"1088\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1088\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"middle\" x=\"1088\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 6]</text>\n<text text-anchor=\"middle\" x=\"1088\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 18&#45;&gt;20 -->\n<g id=\"edge20\" class=\"edge\">\n<title>18&#45;&gt;20</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1017.077,-103.9815C1026.5776,-94.607 1036.6613,-84.6572 1046.1524,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1048.6155,-77.7787 1053.2754,-68.2637 1043.6989,-72.796 1048.6155,-77.7787\"/>\n</g>\n<!-- 23 -->\n<g id=\"node24\" class=\"node\">\n<title>23</title>\n<polygon fill=\"#399de5\" stroke=\"#000000\" points=\"1255.5,-179.5 1160.5,-179.5 1160.5,-111.5 1255.5,-111.5 1255.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-164.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-149.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 1</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-134.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 1]</text>\n<text text-anchor=\"middle\" x=\"1208\" y=\"-119.3\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = X</text>\n</g>\n<!-- 22&#45;&gt;23 -->\n<g id=\"edge23\" class=\"edge\">\n<title>22&#45;&gt;23</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1208,-222.8796C1208,-212.2134 1208,-200.7021 1208,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1211.5001,-189.8149 1208,-179.8149 1204.5001,-189.815 1211.5001,-189.8149\"/>\n</g>\n<!-- 24 -->\n<g id=\"node25\" class=\"node\">\n<title>24</title>\n<polygon fill=\"#e5823b\" stroke=\"#000000\" points=\"1390,-187 1274,-187 1274,-104 1390,-104 1390,-187\"/>\n<text text-anchor=\"middle\" x=\"1332\" y=\"-171.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">X[23] &lt;= 810.25</text>\n<text text-anchor=\"middle\" x=\"1332\" y=\"-156.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.015</text>\n<text text-anchor=\"middle\" x=\"1332\" y=\"-141.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 129</text>\n<text text-anchor=\"middle\" x=\"1332\" y=\"-126.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [128, 1]</text>\n<text text-anchor=\"middle\" x=\"1332\" y=\"-111.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 22&#45;&gt;24 -->\n<g id=\"edge24\" class=\"edge\">\n<title>22&#45;&gt;24</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1251.3692,-222.8796C1260.9416,-213.6931 1271.1672,-203.8798 1281.0103,-194.4336\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1283.6541,-196.7475 1288.4457,-187.2981 1278.8072,-191.6969 1283.6541,-196.7475\"/>\n</g>\n<!-- 25 -->\n<g id=\"node26\" class=\"node\">\n<title>25</title>\n<polygon fill=\"#ffffff\" stroke=\"#000000\" points=\"1319.5,-68 1224.5,-68 1224.5,0 1319.5,0 1319.5,-68\"/>\n<text text-anchor=\"middle\" x=\"1272\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"1272\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 2</text>\n<text text-anchor=\"middle\" x=\"1272\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 1]</text>\n<text text-anchor=\"middle\" x=\"1272\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 24&#45;&gt;25 -->\n<g id=\"edge25\" class=\"edge\">\n<title>24&#45;&gt;25</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1309.6582,-103.9815C1304.9598,-95.2504 1299.9929,-86.0202 1295.2617,-77.2281\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1298.2586,-75.4111 1290.4379,-68.2637 1292.0944,-78.7282 1298.2586,-75.4111\"/>\n</g>\n<!-- 26 -->\n<g id=\"node27\" class=\"node\">\n<title>26</title>\n<polygon fill=\"#e58139\" stroke=\"#000000\" points=\"1448,-68 1338,-68 1338,0 1448,0 1448,-68\"/>\n<text text-anchor=\"middle\" x=\"1393\" y=\"-52.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1393\" y=\"-37.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">samples = 127</text>\n<text text-anchor=\"middle\" x=\"1393\" y=\"-22.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">value = [127, 0]</text>\n<text text-anchor=\"middle\" x=\"1393\" y=\"-7.8\" font-family=\"Times,serif\" font-size=\"14.00\" fill=\"#000000\">class = O</text>\n</g>\n<!-- 24&#45;&gt;26 -->\n<g id=\"edge26\" class=\"edge\">\n<title>24&#45;&gt;26</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1354.7141,-103.9815C1359.4908,-95.2504 1364.5405,-86.0202 1369.3506,-77.2281\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1372.5258,-78.7165 1374.2549,-68.2637 1366.3847,-75.3568 1372.5258,-78.7165\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"fdbHAfoI3qEN"},"source":["- 트리를 시각화하면 알고리즘의 예측이 어떻게 이뤄지는지 잘 이해할 수 있으며 비전문가에게 머신러닝 알고리즘을 설명하기에 좋음\n","- 깊이가 4만 되어도 트리는 매우 복잡해지고 트리가 더 깊어지면(10 정도의 깊이는 보통입니다) 한눈에 보기가 힘들어짐\n","\n","- 트리를 조사할 때는 많은 수의 데이터가 흐르는 경로를 찾아보면 좋음\n","\n","- 시각화에서 각 노드에 적힌 samples는 각 노드에 있는 샘플의 수를 나타내며 value는 클래스당 샘플의 수를 제공\n","\n","- 루트 노드의 오른쪽 가지를 따라가면(worst radius > 16.795) 악성 샘플이 134개, 양성 샘플이 8개인 노드를 만듬\n","\n","- 이 방향의 트리 나머지는 이 8개의 양성 샘플을 더 세부적으로 분리\n","\n","- 첫 노드에서 오른쪽으로 분리된 142개 샘플 중 거의 대부분(132개)이 가장 오른쪽 노드로 감\n","\n","- 루트 노드에서 왼쪽으로 간 데이터, 즉 worst radius <= 16.795인 데이터는 악성 샘플이 25개이고 양성 샘플이 259개\n","- 대부분의 양성 샘플은 왼쪽에서 두 번째 노드에 할당되고 나머지 리프 노드 대부분은 매우 적은 양의 샘플만 가지고 있음\n"]},{"cell_type":"code","metadata":{"id":"eTwPW5MO4ZYt","colab":{"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1618209683293,"user_tz":-540,"elapsed":2541,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"efa37787-fbef-45f2-8a17-ffa1787801b0"},"source":["# 특성 중요도 시각화\n","# feature importance를 column 별로 시각화 하기 \n","\n","model_tr4.feature_importances_\n","\n","sns.barplot(x=model_tr4.feature_importances_, y = cancer.feature_names)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f064fabced0>"]},"metadata":{"tags":[]},"execution_count":208},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"2a7ZvEkD4ry9"},"source":["- 첫 번째 노드에서 사용한 특성(“worst radius”)이 가장 중요한 특성으로 나타남\n","\n","- 첫 번째 노드에서 두 클래스를 꽤 잘 나누고 있다는 우리의 관찰을 뒷받침해줌\n","\n","- 그러나 어떤 특성의 feature_importance_ 값이 낮다고 해서 이 특성이 유용하지 않다는 뜻은 아님\n","\n","- 단지 트리가 그 특성을 선택하지 않았을 뿐이며 다른 특성이 동일한 정보를 지니고 있어서일 수 있음"]},{"cell_type":"markdown","metadata":{"id":"g5_EsCnQ-zCg"},"source":["#### Decision Tree 실습 04\n","\n","타이타닉 데이터 사용"]},{"cell_type":"code","metadata":{"id":"fyjfJecq_hUT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618241109606,"user_tz":-540,"elapsed":7333,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"d9941b5f-7935-4dca-dd59-101a4eae719e"},"source":["# 구글드라이브 연동\n","from google.colab import drive\n","drive.mount('/gdrive', force_remount=True)\n","\n","# 구글 드라이브 파일 확인\n","!ls '/gdrive/My Drive/temp/'\n","\n","# 반복되는 드라이브 경로 변수화\n","drive_path = '/gdrive/My Drive/temp/'"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Mounted at /gdrive\n"," 매수종목1.txt\t\t   exmaple.docx\t\t   seoul.html\n"," 매수종목2.txt\t\t   height_weight.txt\t   stock-data.csv\n"," adult.data\t\t   HelloWorld.xlsx\t  'stock price.xlsx'\n"," auto-mpg.csv\t\t   little-char.png\t  'stock valuation.xlsx'\n"," bmi_500.csv\t\t   population_number.csv   test.db.db\n"," citibike.csv\t\t   ram_price.csv\t   test.txt\n","'투표 결과.csv'\t\t   ratings_small.txt\t   titanic.xls\n"," 매수종목.csv\t\t   ratings_test.txt\t   Traffic_Accident_2017.csv\n"," database\t\t   ratings_train.txt\t   train.csv\n"," data_mine.csv\t\t   sample1.pdf\t\t   user_id_mean.csv\n"," data_population.csv\t   sample2.pdf\t\t   wine.csv\n"," data_studentlist_en.csv   sample_merge.pdf\t   주가데이터.xlsx\n"," demo.docx\t\t   sample.xlsx\t\t   남북한발전전력량.xlsx\n"," example.docx\t\t   score.csv\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xYKjJ97ka4od"},"source":["##### 데이터 준비"]},{"cell_type":"code","metadata":{"id":"Z3oJYANc-9Oy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618241629676,"user_tz":-540,"elapsed":2284,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"de4ba24f-0117-470d-bc4a-719448fb0332"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","\n","df = pd.read_excel(drive_path + 'titanic.xls')\n","df.info()\n","\n","#인포를 보니까 수치 데이터들이 쓰기 훨씬 좋다."],"execution_count":4,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1309 entries, 0 to 1308\n","Data columns (total 14 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   pclass     1309 non-null   int64  \n"," 1   survived   1309 non-null   int64  \n"," 2   name       1309 non-null   object \n"," 3   sex        1309 non-null   object \n"," 4   age        1046 non-null   float64\n"," 5   sibsp      1309 non-null   int64  \n"," 6   parch      1309 non-null   int64  \n"," 7   ticket     1309 non-null   object \n"," 8   fare       1308 non-null   float64\n"," 9   cabin      295 non-null    object \n"," 10  embarked   1307 non-null   object \n"," 11  boat       486 non-null    object \n"," 12  body       121 non-null    float64\n"," 13  home.dest  745 non-null    object \n","dtypes: float64(3), int64(4), object(7)\n","memory usage: 143.3+ KB\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"OPHMk6cqaaKe"},"source":["##### 데이터 분석 (시각화, EDA - 탐색적 데이터분석)\n","\n","- 데이터를 세부적으로 살펴보는 것 <br> \n","  (결측치, 이상치, 데이터분포, 라벨의 분포, 범주형 데이터의 종류 등 확인)\n","- 데이터를 시각화\n","- 데이터를 어떻게 수정할 것인지 결정"]},{"cell_type":"code","metadata":{"id":"OIM6Bewjav8M","colab":{"base_uri":"https://localhost:8080/","height":414},"executionInfo":{"status":"ok","timestamp":1618241631840,"user_tz":-540,"elapsed":1236,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"62bee380-62e2-4502-eb6a-c9940f9be232"},"source":["# 결측치 확인\n","\n","df.head()\n"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>ticket</th>\n","      <th>fare</th>\n","      <th>cabin</th>\n","      <th>embarked</th>\n","      <th>boat</th>\n","      <th>body</th>\n","      <th>home.dest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Allen, Miss. Elisabeth Walton</td>\n","      <td>female</td>\n","      <td>29.0000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>24160</td>\n","      <td>211.3375</td>\n","      <td>B5</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>St Louis, MO</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Allison, Master. Hudson Trevor</td>\n","      <td>male</td>\n","      <td>0.9167</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>11</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Miss. Helen Loraine</td>\n","      <td>female</td>\n","      <td>2.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Mr. Hudson Joshua Creighton</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>135.0</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Mrs. Hudson J C (Bessie Waldo Daniels)</td>\n","      <td>female</td>\n","      <td>25.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   pclass  survived  ...   body                        home.dest\n","0       1         1  ...    NaN                     St Louis, MO\n","1       1         1  ...    NaN  Montreal, PQ / Chesterville, ON\n","2       1         0  ...    NaN  Montreal, PQ / Chesterville, ON\n","3       1         0  ...  135.0  Montreal, PQ / Chesterville, ON\n","4       1         0  ...    NaN  Montreal, PQ / Chesterville, ON\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"WzfMokWWAvIA"},"source":["- pclass : 객실 등급\n","- survived : 생존 유무\n","- sex : 성별\n","- age : 나이\n","- sibsp : 형제 혹은 부부의 수\n","- parch : 부모, 혹은 자녀의 수\n","- fare : 지불한 운임\n","- boat : 탈출한 보트가 있다면 boat 번호\n","- embarked : 탑승장소 S=Southhampton, C=Cherbourg, Q=Queenstown"]},{"cell_type":"code","metadata":{"id":"ips7JL4TA4k_","colab":{"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1618241634475,"user_tz":-540,"elapsed":709,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"884cd69f-fd13-4545-fd17-c0b0eb9f25eb"},"source":["# 이상치 확인 # 데이터가 편중되어있다던가, 쏠려있다던가. 그런것을 확인해봐야겠지\n","\n","\n","df.describe() # 수치 데이터에 대한 정보를 나타내보는 창.\n"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>body</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1309.000000</td>\n","      <td>1309.000000</td>\n","      <td>1046.000000</td>\n","      <td>1309.000000</td>\n","      <td>1309.000000</td>\n","      <td>1308.000000</td>\n","      <td>121.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.294882</td>\n","      <td>0.381971</td>\n","      <td>29.881135</td>\n","      <td>0.498854</td>\n","      <td>0.385027</td>\n","      <td>33.295479</td>\n","      <td>160.809917</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.837836</td>\n","      <td>0.486055</td>\n","      <td>14.413500</td>\n","      <td>1.041658</td>\n","      <td>0.865560</td>\n","      <td>51.758668</td>\n","      <td>97.696922</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.166700</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","      <td>72.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","      <td>155.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.275000</td>\n","      <td>256.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>9.000000</td>\n","      <td>512.329200</td>\n","      <td>328.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            pclass     survived  ...         fare        body\n","count  1309.000000  1309.000000  ...  1308.000000  121.000000\n","mean      2.294882     0.381971  ...    33.295479  160.809917\n","std       0.837836     0.486055  ...    51.758668   97.696922\n","min       1.000000     0.000000  ...     0.000000    1.000000\n","25%       2.000000     0.000000  ...     7.895800   72.000000\n","50%       3.000000     0.000000  ...    14.454200  155.000000\n","75%       3.000000     1.000000  ...    31.275000  256.000000\n","max       3.000000     1.000000  ...   512.329200  328.000000\n","\n","[8 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"YuLP_qamBNWp","colab":{"base_uri":"https://localhost:8080/","height":352},"executionInfo":{"status":"ok","timestamp":1618242268539,"user_tz":-540,"elapsed":765,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"e2970d9b-bcb6-4c9a-d59e-36f0f369d3b4"},"source":["# 생존자 수 확인\n","import seaborn as sns\n","\n","# countplot: 범주형 변수의 빈도수를 시각화\n","\n","df[\"survived\"].value_counts()\n","\n","# 혹은\n","\n","sns.countplot('survived',data=df)"],"execution_count":41,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd5b35765d0>"]},"metadata":{"tags":[]},"execution_count":41},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"IFbg4QnpBoO4","colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"status":"ok","timestamp":1618242366697,"user_tz":-540,"elapsed":878,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"de30c344-be70-418c-f673-2b3c4c753cd0"},"source":["# \"# 나이순으로 숫자 보기\n","\n","# df['age'].hist(bins=20)\n","\n","plt.hist(df['age'] ,bins=20)\n","\n","plt.show()\n"],"execution_count":46,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"X_GsRqXgB5Fh","colab":{"base_uri":"https://localhost:8080/","height":166},"executionInfo":{"status":"ok","timestamp":1618242565042,"user_tz":-540,"elapsed":938,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"3d525b88-75a3-49b2-84e5-7c7aeaabb545"},"source":["# 선실 등급별 상황\n","# groupby 복습\n","df.groupby('pclass').mean()"],"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>body</th>\n","    </tr>\n","    <tr>\n","      <th>pclass</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.619195</td>\n","      <td>39.159918</td>\n","      <td>0.436533</td>\n","      <td>0.365325</td>\n","      <td>87.508992</td>\n","      <td>162.828571</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.429603</td>\n","      <td>29.506705</td>\n","      <td>0.393502</td>\n","      <td>0.368231</td>\n","      <td>21.179196</td>\n","      <td>167.387097</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.255289</td>\n","      <td>24.816367</td>\n","      <td>0.568406</td>\n","      <td>0.400564</td>\n","      <td>13.302889</td>\n","      <td>155.818182</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        survived        age     sibsp     parch       fare        body\n","pclass                                                                \n","1       0.619195  39.159918  0.436533  0.365325  87.508992  162.828571\n","2       0.429603  29.506705  0.393502  0.368231  21.179196  167.387097\n","3       0.255289  24.816367  0.568406  0.400564  13.302889  155.818182"]},"metadata":{"tags":[]},"execution_count":54}]},{"cell_type":"markdown","metadata":{"id":"5pJcLHKobDcW"},"source":["**heatmap**\n","\n","- Target Feature와 나머지 독립변수들의 상관계수를 직관적으로 확인\n","- 데이터.corr() : heatmap에 사용할 데이터의 상관계수"]},{"cell_type":"code","metadata":{"id":"eDg8SPhqCdiw"},"source":["# # 특성의 상관관계 분석\n","# plt.figure(figsize=(10,10))\n","# sns.heatmap(df.corr(), cmap=plt.cm.viridis, annot=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"llPfhvoBCwF5","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1618209686273,"user_tz":-540,"elapsed":5472,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"11857046-0703-4ba2-9aac-1bb8c7485461"},"source":["# 사망자를 객실 등급(pclass)별, 연령대별, 성별 비교\n","plt.figure(figsize=(20,4))\n","\n","plt.subplot(131)\n","sns.barplot('pclass','survived',data=df)\n","\n","ages = df[\"age\"]\n","bins = [0, 10, 25, 35, 60, 99]\n","labels = [\"미성년자\", \"청년\", \"중년\", \"장년\", \"노년\"]\n","cat = pd.cut(ages,bins,labels=labels)\n","df[\"연령대\"]= cat\n","plt.subplot(132)\n","sns.barplot(cat,'survived',data=df)\n","\n","\n","plt.subplot(133)\n","sns.barplot('sex','survived',data=df)\n","\n","\n","\n","# seaborn은 barplot() 함수를 사용할 때 각 막대에 기본적으로 오차막대(error bar)가 함께 나타나도록 되어 있다.\n","# 오차막대를 그리는 범위는 기본적으로 \n","# “이 데이터를 기반으로 유사한 상황의 95 %가 이 범위 내에서 결과를 얻을 것”을 의미한다.\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f064ef5b490>"]},"metadata":{"tags":[]},"execution_count":217},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x288 with 3 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"lFQ3Bt14DHWh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209686274,"user_tz":-540,"elapsed":5469,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"bab1b0e5-50cb-40da-c7bd-53658a83c37f"},"source":["# 연령대별 생존여부 분포 비교\n","\n","\n","df[\"연령대\"].value_counts()\n","# 커널밀도추정 KDE ; 데이터의 분포를 확인\n","\n","\n","\n","\n","\n","\n","## 데이터가 수집 되면 보통 탐색적 방식으로, 데이터를 천천히 분석한다!!!! (모델 넣기 전에)\n","## 상관관계가 있는 칼럼 뽑아내기, 없는 칼럼 삭제시키기 등등"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["청년      357\n","장년      289\n","중년      281\n","미성년자     86\n","노년       33\n","Name: 연령대, dtype: int64"]},"metadata":{"tags":[]},"execution_count":218}]},{"cell_type":"code","metadata":{"id":"hTfHvb7kDVLA"},"source":["# 성별 생존자수 비교\n","# 남성 중 생존자 사망자 // #여성 중 생존자 사망자\n","\n","# 해 봐라\n","# plt.scatter(df['sex'][ df['survived']==1].value_counts())\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HTmXUZT7DkDb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618209686276,"user_tz":-540,"elapsed":5456,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"0ee0303e-f758-467a-dcc3-da780f0de4d8"},"source":["# 구조 보트에 탑승하고도 사망한 비율\n","\n","# 1. 결측치 처리 - 보트를 타지 않는 칸은 NAN으로 처리되어 있으니, 날리자.\n","# 2. 결측치 날린 데이터 (df_new) 에서,\n","\n","df[\"boat\"].notnull()\n","\n","df[ df[\"boat\"].notnull()][\"survived\"].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    477\n","0      9\n","Name: survived, dtype: int64"]},"metadata":{"tags":[]},"execution_count":220}]},{"cell_type":"markdown","metadata":{"id":"i0mYeVLzD-MY"},"source":["##### 데이터 전처리"]},{"cell_type":"code","metadata":{"id":"TYXRwXXGIju8","colab":{"base_uri":"https://localhost:8080/","height":406},"executionInfo":{"status":"ok","timestamp":1618209686276,"user_tz":-540,"elapsed":5451,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"4696d862-7628-4804-d7cd-b0e35f3526d5"},"source":["titanic_data = pd.read_excel(drive_path + 'titanic.xls')\n","titanic_data.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>ticket</th>\n","      <th>fare</th>\n","      <th>cabin</th>\n","      <th>embarked</th>\n","      <th>boat</th>\n","      <th>body</th>\n","      <th>home.dest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Allen, Miss. Elisabeth Walton</td>\n","      <td>female</td>\n","      <td>29.0000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>24160</td>\n","      <td>211.3375</td>\n","      <td>B5</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>St Louis, MO</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Allison, Master. Hudson Trevor</td>\n","      <td>male</td>\n","      <td>0.9167</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>11</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Miss. Helen Loraine</td>\n","      <td>female</td>\n","      <td>2.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Mr. Hudson Joshua Creighton</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>135.0</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Mrs. Hudson J C (Bessie Waldo Daniels)</td>\n","      <td>female</td>\n","      <td>25.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   pclass  survived  ...   body                        home.dest\n","0       1         1  ...    NaN                     St Louis, MO\n","1       1         1  ...    NaN  Montreal, PQ / Chesterville, ON\n","2       1         0  ...    NaN  Montreal, PQ / Chesterville, ON\n","3       1         0  ...  135.0  Montreal, PQ / Chesterville, ON\n","4       1         0  ...    NaN  Montreal, PQ / Chesterville, ON\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":221}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":842},"id":"ddgLBTWStcST","executionInfo":{"status":"ok","timestamp":1618209686278,"user_tz":-540,"elapsed":5448,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"89b56875-8d62-49d5-ba1b-152ca5a92473"},"source":["# 1) embarked : 탑승장소별 컬럼 추가\n","# 원 핫 인코딩!!!!!!!!\n","# S=Southhampton, C=Cherbourg, Q=Queenstown\n","df[\"Embarked_C\"] = df[\"embarked\"]==\"C\"\n","df[\"Embarked_Q\"] = df[\"embarked\"]==\"Q\"\n","df[\"Embarked_S\"] = df[\"embarked\"]==\"S\"\n","df\n","#과제"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>ticket</th>\n","      <th>fare</th>\n","      <th>cabin</th>\n","      <th>embarked</th>\n","      <th>boat</th>\n","      <th>body</th>\n","      <th>home.dest</th>\n","      <th>연령대</th>\n","      <th>Embarked_C</th>\n","      <th>Embarked_Q</th>\n","      <th>Embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Allen, Miss. Elisabeth Walton</td>\n","      <td>female</td>\n","      <td>29.0000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>24160</td>\n","      <td>211.3375</td>\n","      <td>B5</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>St Louis, MO</td>\n","      <td>중년</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Allison, Master. Hudson Trevor</td>\n","      <td>male</td>\n","      <td>0.9167</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>11</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","      <td>미성년자</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Miss. Helen Loraine</td>\n","      <td>female</td>\n","      <td>2.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","      <td>미성년자</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Mr. Hudson Joshua Creighton</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>135.0</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","      <td>중년</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Allison, Mrs. Hudson J C (Bessie Waldo Daniels)</td>\n","      <td>female</td>\n","      <td>25.0000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>113781</td>\n","      <td>151.5500</td>\n","      <td>C22 C26</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Montreal, PQ / Chesterville, ON</td>\n","      <td>청년</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Zabour, Miss. Hileni</td>\n","      <td>female</td>\n","      <td>14.5000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2665</td>\n","      <td>14.4542</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>NaN</td>\n","      <td>328.0</td>\n","      <td>NaN</td>\n","      <td>청년</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Zabour, Miss. Thamine</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2665</td>\n","      <td>14.4542</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Zakarian, Mr. Mapriededer</td>\n","      <td>male</td>\n","      <td>26.5000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2656</td>\n","      <td>7.2250</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>NaN</td>\n","      <td>304.0</td>\n","      <td>NaN</td>\n","      <td>중년</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Zakarian, Mr. Ortin</td>\n","      <td>male</td>\n","      <td>27.0000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2670</td>\n","      <td>7.2250</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>중년</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>Zimmerman, Mr. Leo</td>\n","      <td>male</td>\n","      <td>29.0000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315082</td>\n","      <td>7.8750</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>중년</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows × 18 columns</p>\n","</div>"],"text/plain":["      pclass  survived  ... Embarked_Q Embarked_S\n","0          1         1  ...      False       True\n","1          1         1  ...      False       True\n","2          1         0  ...      False       True\n","3          1         0  ...      False       True\n","4          1         0  ...      False       True\n","...      ...       ...  ...        ...        ...\n","1304       3         0  ...      False      False\n","1305       3         0  ...      False      False\n","1306       3         0  ...      False      False\n","1307       3         0  ...      False      False\n","1308       3         0  ...      False       True\n","\n","[1309 rows x 18 columns]"]},"metadata":{"tags":[]},"execution_count":222}]},{"cell_type":"code","metadata":{"id":"YKbmuxm9D_4a"},"source":["\n","# 데이터에서 여성을 1로 남성을 0으로 설정\n","# df[\"sex\"] = df[\"sex\"].replace(['male','female'],[0,1])\n","# 혹은 \n","df.loc[df['sex'] == 'male', 'sex'] = 0\n","df.loc[df['sex'] == 'female', 'sex'] = 1\n","\n","\n","# fare : 지불한 운임에 대한 데이터 전처리.\n","# 결측치 채움. 운임 평균으로 채울까?\n","\n","df.loc[pd.isnull(df['fare']), 'fare'] = df['fare'].mean()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"w55uPOyFJtab","colab":{"base_uri":"https://localhost:8080/","height":408},"executionInfo":{"status":"ok","timestamp":1618209686279,"user_tz":-540,"elapsed":5440,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"c6985641-23b6-4c1a-e206-5990db9b0ca4"},"source":["# Feature 선택. 타이타닉 분석 모델을 만들 떄, 어느 칼럼을 갖다 쓸 것인가??\n","# X = 객실 클래스, 성별, 요금, 선착장 3개, 총 6요소\n","\n","X = df[['pclass', 'sex', 'fare', 'Embarked_C', 'Embarked_S', 'Embarked_Q']]\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>fare</th>\n","      <th>Embarked_C</th>\n","      <th>Embarked_S</th>\n","      <th>Embarked_Q</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>211.3375</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>151.5500</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>151.5500</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>151.5500</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>151.5500</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>14.4542</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>14.4542</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>7.8750</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows × 6 columns</p>\n","</div>"],"text/plain":["      pclass sex      fare  Embarked_C  Embarked_S  Embarked_Q\n","0          1   1  211.3375       False        True       False\n","1          1   0  151.5500       False        True       False\n","2          1   1  151.5500       False        True       False\n","3          1   0  151.5500       False        True       False\n","4          1   1  151.5500       False        True       False\n","...      ...  ..       ...         ...         ...         ...\n","1304       3   1   14.4542        True       False       False\n","1305       3   1   14.4542        True       False       False\n","1306       3   0    7.2250        True       False       False\n","1307       3   0    7.2250        True       False       False\n","1308       3   0    7.8750       False        True       False\n","\n","[1309 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":224}]},{"cell_type":"code","metadata":{"id":"XujT0DO6KPOb"},"source":["# 정답셋 준비\n","y = df[\"survived\"]\n","label_name = \"survived\"\n","\n","\n","#이제, 모델 최종 분석 준비 끝!!"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f-jE0w6IzQCn","executionInfo":{"status":"ok","timestamp":1618209686280,"user_tz":-540,"elapsed":5430,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"1c438fe8-aaf2-469a-f01d-4b40ba720974"},"source":["y.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1309,)"]},"metadata":{"tags":[]},"execution_count":226}]},{"cell_type":"markdown","metadata":{"id":"nhHVKBDBEwtS"},"source":["#### Decision Tree 실습 05 - 타이타닉\n","\n","결정트리로 타이타닉 생존자 예측"]},{"cell_type":"code","metadata":{"id":"Xj6R6y9j7hfD","colab":{"base_uri":"https://localhost:8080/","height":212},"executionInfo":{"status":"error","timestamp":1618241065705,"user_tz":-540,"elapsed":2229,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"e9042cc1-f37d-41a2-d680-605cfaa104aa"},"source":["# 데이터 분리\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=41)"],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-26650bdd7c99>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel_selection\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m41\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'X' is not defined"]}]},{"cell_type":"code","metadata":{"id":"aw_nxJbA7kuo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618210526847,"user_tz":-540,"elapsed":1014,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"f43f08b0-5bf8-439a-db27-dba925b7f2c6"},"source":["# 결정트리 적용\n","from sklearn.tree import DecisionTreeClassifier\n","\n","model_tr5 =  DecisionTreeClassifier(min_samples_leaf=5, max_depth=5)\n","\n","model_tr5.fit(X_train,y_train)\n","\n","model_tr5.feature_importances_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.21355991, 0.60096392, 0.16459946, 0.01043032, 0.0104464 ,\n","       0.        ])"]},"metadata":{"tags":[]},"execution_count":251}]},{"cell_type":"code","metadata":{"id":"J8wOaQyu7sP6","colab":{"base_uri":"https://localhost:8080/","height":934},"executionInfo":{"status":"ok","timestamp":1618210526848,"user_tz":-540,"elapsed":850,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"c7c150d1-fc9e-4f3f-8165-818fc8aecd41"},"source":["# 트리 구조 시각화하기\n","# 결정트리 시각화\n","from sklearn.tree import export_graphviz\n","import graphviz\n","\n","export_graphviz(model_tr5, out_file='tree.dot', \n","                class_names=['0','1'], \n","                feature_names=['pclass', 'sex', 'fare', 'Embarked_C', 'Embarked_S', 'Embarked_Q'],\n","                impurity=True, filled=True, rounded=True)\n","\n","with open(\"tree.dot\") as f:\n","  dot_graph = f.read()\n","\n","display(graphviz.Source(dot_graph))"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<graphviz.files.Source at 0x7f06524372d0>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"3100pt\" height=\"671pt\"\n viewBox=\"0.00 0.00 3100.00 671.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 667)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-667 3096,-667 3096,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#f6d5bc\" stroke=\"#000000\" d=\"M1604.5,-663C1604.5,-663 1496.5,-663 1496.5,-663 1490.5,-663 1484.5,-657 1484.5,-651 1484.5,-651 1484.5,-592 1484.5,-592 1484.5,-586 1490.5,-580 1496.5,-580 1496.5,-580 1604.5,-580 1604.5,-580 1610.5,-580 1616.5,-586 1616.5,-592 1616.5,-592 1616.5,-651 1616.5,-651 1616.5,-657 1610.5,-663 1604.5,-663\"/>\n<text text-anchor=\"middle\" x=\"1550.5\" y=\"-647.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">sex &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"1550.5\" y=\"-632.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.479</text>\n<text text-anchor=\"middle\" x=\"1550.5\" y=\"-617.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 981</text>\n<text text-anchor=\"middle\" x=\"1550.5\" y=\"-602.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [590, 391]</text>\n<text text-anchor=\"middle\" x=\"1550.5\" y=\"-587.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#eca36e\" stroke=\"#000000\" d=\"M1175.5,-544C1175.5,-544 1067.5,-544 1067.5,-544 1061.5,-544 1055.5,-538 1055.5,-532 1055.5,-532 1055.5,-473 1055.5,-473 1055.5,-467 1061.5,-461 1067.5,-461 1067.5,-461 1175.5,-461 1175.5,-461 1181.5,-461 1187.5,-467 1187.5,-473 1187.5,-473 1187.5,-532 1187.5,-532 1187.5,-538 1181.5,-544 1175.5,-544\"/>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">pclass &lt;= 1.5</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.334</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 624</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [492, 132]</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1484.4089,-603.167C1406.941,-581.6783 1278.8175,-546.1382 1197.3619,-523.5433\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1198.2379,-520.1542 1187.6662,-520.8538 1196.3668,-526.8995 1198.2379,-520.1542\"/>\n<text text-anchor=\"middle\" x=\"1199.9755\" y=\"-538.9134\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 28 -->\n<g id=\"node29\" class=\"node\">\n<title>28</title>\n<path fill=\"#84c2ef\" stroke=\"#000000\" d=\"M2029.5,-544C2029.5,-544 1929.5,-544 1929.5,-544 1923.5,-544 1917.5,-538 1917.5,-532 1917.5,-532 1917.5,-473 1917.5,-473 1917.5,-467 1923.5,-461 1929.5,-461 1929.5,-461 2029.5,-461 2029.5,-461 2035.5,-461 2041.5,-467 2041.5,-473 2041.5,-473 2041.5,-532 2041.5,-532 2041.5,-538 2035.5,-544 2029.5,-544\"/>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">pclass &lt;= 2.5</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.398</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 357</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [98, 259]</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 0&#45;&gt;28 -->\n<g id=\"edge28\" class=\"edge\">\n<title>0&#45;&gt;28</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1616.5911,-603.167C1695.3012,-581.3337 1826.3044,-544.9948 1907.5201,-522.4665\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1908.4702,-525.8351 1917.1708,-519.7895 1906.5991,-519.0898 1908.4702,-525.8351\"/>\n<text text-anchor=\"middle\" x=\"1904.8615\" y=\"-537.8491\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#f4c8a9\" stroke=\"#000000\" d=\"M408.5,-425C408.5,-425 316.5,-425 316.5,-425 310.5,-425 304.5,-419 304.5,-413 304.5,-413 304.5,-354 304.5,-354 304.5,-348 310.5,-342 316.5,-342 316.5,-342 408.5,-342 408.5,-342 414.5,-342 420.5,-348 420.5,-354 420.5,-354 420.5,-413 420.5,-413 420.5,-419 414.5,-425 408.5,-425\"/>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 26.144</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.461</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 144</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [92, 52]</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1055.4715,-492.1477C912.5619,-469.7416 575.8072,-416.9434 430.8365,-394.2142\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"431.1568,-390.7217 420.7353,-392.6304 430.0725,-397.6372 431.1568,-390.7217\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<path fill=\"#ea9a61\" stroke=\"#000000\" d=\"M1171.5,-425C1171.5,-425 1071.5,-425 1071.5,-425 1065.5,-425 1059.5,-419 1059.5,-413 1059.5,-413 1059.5,-354 1059.5,-354 1059.5,-348 1065.5,-342 1071.5,-342 1071.5,-342 1171.5,-342 1171.5,-342 1177.5,-342 1183.5,-348 1183.5,-354 1183.5,-354 1183.5,-413 1183.5,-413 1183.5,-419 1177.5,-425 1171.5,-425\"/>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 15.173</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.278</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 480</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [400, 80]</text>\n<text text-anchor=\"middle\" x=\"1121.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 1&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>1&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1121.5,-460.8796C1121.5,-452.6838 1121.5,-443.9891 1121.5,-435.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1125.0001,-435.298 1121.5,-425.2981 1118.0001,-435.2981 1125.0001,-435.298\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#ea985d\" stroke=\"#000000\" d=\"M209.5,-306C209.5,-306 123.5,-306 123.5,-306 117.5,-306 111.5,-300 111.5,-294 111.5,-294 111.5,-235 111.5,-235 111.5,-229 117.5,-223 123.5,-223 123.5,-223 209.5,-223 209.5,-223 215.5,-223 221.5,-229 221.5,-235 221.5,-235 221.5,-294 221.5,-294 221.5,-300 215.5,-306 209.5,-306\"/>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 25.756</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.26</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 2]</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M304.4891,-348.2791C281.1648,-334.1179 254.1927,-317.742 230.3158,-303.2453\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"232.0359,-300.1951 221.6716,-297.997 228.403,-306.1786 232.0359,-300.1951\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#f5cfb3\" stroke=\"#000000\" d=\"M408.5,-306C408.5,-306 316.5,-306 316.5,-306 310.5,-306 304.5,-300 304.5,-294 304.5,-294 304.5,-235 304.5,-235 304.5,-229 310.5,-223 316.5,-223 316.5,-223 408.5,-223 408.5,-223 414.5,-223 420.5,-229 420.5,-235 420.5,-235 420.5,-294 420.5,-294 420.5,-300 414.5,-306 408.5,-306\"/>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 31.41</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.472</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 131</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [81, 50]</text>\n<text text-anchor=\"middle\" x=\"362.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 2&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>2&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M362.5,-341.8796C362.5,-333.6838 362.5,-324.9891 362.5,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"366.0001,-316.298 362.5,-306.2981 359.0001,-316.2981 366.0001,-316.298\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#e99355\" stroke=\"#000000\" d=\"M87,-179.5C87,-179.5 12,-179.5 12,-179.5 6,-179.5 0,-173.5 0,-167.5 0,-167.5 0,-123.5 0,-123.5 0,-117.5 6,-111.5 12,-111.5 12,-111.5 87,-111.5 87,-111.5 93,-111.5 99,-117.5 99,-123.5 99,-123.5 99,-167.5 99,-167.5 99,-173.5 93,-179.5 87,-179.5\"/>\n<text text-anchor=\"middle\" x=\"49.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.219</text>\n<text text-anchor=\"middle\" x=\"49.5\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 8</text>\n<text text-anchor=\"middle\" x=\"49.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [7, 1]</text>\n<text text-anchor=\"middle\" x=\"49.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M125.5791,-222.8796C114.2272,-211.3337 101.9018,-198.7976 90.543,-187.2446\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"92.7449,-184.4919 83.2382,-179.8149 87.7534,-189.3995 92.7449,-184.4919\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#eca06a\" stroke=\"#000000\" d=\"M204,-179.5C204,-179.5 129,-179.5 129,-179.5 123,-179.5 117,-173.5 117,-167.5 117,-167.5 117,-123.5 117,-123.5 117,-117.5 123,-111.5 129,-111.5 129,-111.5 204,-111.5 204,-111.5 210,-111.5 216,-117.5 216,-123.5 216,-123.5 216,-167.5 216,-167.5 216,-173.5 210,-179.5 204,-179.5\"/>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.32</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 1]</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M166.5,-222.8796C166.5,-212.2134 166.5,-200.7021 166.5,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"170.0001,-189.8149 166.5,-179.8149 163.0001,-189.815 170.0001,-189.8149\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<path fill=\"#fdf4ee\" stroke=\"#000000\" d=\"M338.5,-187C338.5,-187 246.5,-187 246.5,-187 240.5,-187 234.5,-181 234.5,-175 234.5,-175 234.5,-116 234.5,-116 234.5,-110 240.5,-104 246.5,-104 246.5,-104 338.5,-104 338.5,-104 344.5,-104 350.5,-110 350.5,-116 350.5,-116 350.5,-175 350.5,-175 350.5,-181 344.5,-187 338.5,-187\"/>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 29.85</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.499</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 44</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 21]</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M338.0174,-222.8796C332.9315,-214.2335 327.5189,-205.0322 322.2672,-196.1042\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"325.1741,-194.1428 317.0871,-187.2981 319.1406,-197.692 325.1741,-194.1428\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<path fill=\"#f2c09c\" stroke=\"#000000\" d=\"M472.5,-187C472.5,-187 380.5,-187 380.5,-187 374.5,-187 368.5,-181 368.5,-175 368.5,-175 368.5,-116 368.5,-116 368.5,-110 374.5,-104 380.5,-104 380.5,-104 472.5,-104 472.5,-104 478.5,-104 484.5,-110 484.5,-116 484.5,-116 484.5,-175 484.5,-175 484.5,-181 478.5,-187 472.5,-187\"/>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 51.931</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 87</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [58, 29]</text>\n<text text-anchor=\"middle\" x=\"426.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 6&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>6&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M384.8841,-222.8796C389.4856,-214.3236 394.3796,-205.2238 399.1342,-196.3833\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"402.3662,-197.763 404.0204,-187.2981 396.2012,-194.4473 402.3662,-197.763\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<path fill=\"#f8e0ce\" stroke=\"#000000\" d=\"M212.5,-68C212.5,-68 120.5,-68 120.5,-68 114.5,-68 108.5,-62 108.5,-56 108.5,-56 108.5,-12 108.5,-12 108.5,-6 114.5,0 120.5,0 120.5,0 212.5,0 212.5,0 218.5,0 224.5,-6 224.5,-12 224.5,-12 224.5,-56 224.5,-56 224.5,-62 218.5,-68 212.5,-68\"/>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.49</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 35</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [20, 15]</text>\n<text text-anchor=\"middle\" x=\"166.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 7&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>7&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M245.5823,-103.9815C234.8848,-94.5151 223.5244,-84.462 212.8508,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"215.0278,-72.2696 205.2195,-68.2637 210.3889,-77.5118 215.0278,-72.2696\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<path fill=\"#9ccef2\" stroke=\"#000000\" d=\"M330,-68C330,-68 255,-68 255,-68 249,-68 243,-62 243,-56 243,-56 243,-12 243,-12 243,-6 249,0 255,0 255,0 330,0 330,0 336,0 342,-6 342,-12 342,-12 342,-56 342,-56 342,-62 336,-68 330,-68\"/>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 6]</text>\n<text text-anchor=\"middle\" x=\"292.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 7&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>7&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M292.5,-103.9815C292.5,-95.618 292.5,-86.7965 292.5,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"296.0001,-78.2636 292.5,-68.2637 289.0001,-78.2637 296.0001,-78.2636\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<path fill=\"#e99558\" stroke=\"#000000\" d=\"M455,-68C455,-68 372,-68 372,-68 366,-68 360,-62 360,-56 360,-56 360,-12 360,-12 360,-6 366,0 372,0 372,0 455,0 455,0 461,0 467,-6 467,-12 467,-12 467,-56 467,-56 467,-62 461,-68 455,-68\"/>\n<text text-anchor=\"middle\" x=\"413.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.236</text>\n<text text-anchor=\"middle\" x=\"413.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 22</text>\n<text text-anchor=\"middle\" x=\"413.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [19, 3]</text>\n<text text-anchor=\"middle\" x=\"413.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 10&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>10&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M421.6593,-103.9815C420.6842,-95.618 419.6557,-86.7965 418.6698,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"422.1295,-77.791 417.4949,-68.2637 415.1766,-78.6017 422.1295,-77.791\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<path fill=\"#f6d5bd\" stroke=\"#000000\" d=\"M589.5,-68C589.5,-68 497.5,-68 497.5,-68 491.5,-68 485.5,-62 485.5,-56 485.5,-56 485.5,-12 485.5,-12 485.5,-6 491.5,0 497.5,0 497.5,0 589.5,0 589.5,0 595.5,0 601.5,-6 601.5,-12 601.5,-12 601.5,-56 601.5,-56 601.5,-62 595.5,-68 589.5,-68\"/>\n<text text-anchor=\"middle\" x=\"543.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.48</text>\n<text text-anchor=\"middle\" x=\"543.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 65</text>\n<text text-anchor=\"middle\" x=\"543.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [39, 26]</text>\n<text text-anchor=\"middle\" x=\"543.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 10&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>10&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M470.0665,-103.9815C479.9034,-94.607 490.344,-84.6572 500.1711,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"502.7216,-77.6963 507.5462,-68.2637 497.8924,-72.6289 502.7216,-77.6963\"/>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<path fill=\"#e9965b\" stroke=\"#000000\" d=\"M1079.5,-306C1079.5,-306 979.5,-306 979.5,-306 973.5,-306 967.5,-300 967.5,-294 967.5,-294 967.5,-235 967.5,-235 967.5,-229 973.5,-223 979.5,-223 979.5,-223 1079.5,-223 1079.5,-223 1085.5,-223 1091.5,-229 1091.5,-235 1091.5,-235 1091.5,-294 1091.5,-294 1091.5,-300 1085.5,-306 1079.5,-306\"/>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 13.879</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.248</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 351</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [300, 51]</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 13&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>13&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1089.3229,-341.8796C1082.4296,-332.9633 1075.0798,-323.4565 1067.9761,-314.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1070.6999,-312.0687 1061.8145,-306.2981 1065.1619,-316.3502 1070.6999,-312.0687\"/>\n</g>\n<!-- 21 -->\n<g id=\"node22\" class=\"node\">\n<title>21</title>\n<path fill=\"#eda672\" stroke=\"#000000\" d=\"M1263.5,-306C1263.5,-306 1163.5,-306 1163.5,-306 1157.5,-306 1151.5,-300 1151.5,-294 1151.5,-294 1151.5,-235 1151.5,-235 1151.5,-229 1157.5,-223 1163.5,-223 1163.5,-223 1263.5,-223 1263.5,-223 1269.5,-223 1275.5,-229 1275.5,-235 1275.5,-235 1275.5,-294 1275.5,-294 1275.5,-300 1269.5,-306 1263.5,-306\"/>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 19.377</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.349</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 129</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [100, 29]</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 13&#45;&gt;21 -->\n<g id=\"edge21\" class=\"edge\">\n<title>13&#45;&gt;21</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1153.6771,-341.8796C1160.5704,-332.9633 1167.9202,-323.4565 1175.0239,-314.268\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1177.8381,-316.3502 1181.1855,-306.2981 1172.3001,-312.0687 1177.8381,-316.3502\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<path fill=\"#ea975c\" stroke=\"#000000\" d=\"M857.5,-187C857.5,-187 757.5,-187 757.5,-187 751.5,-187 745.5,-181 745.5,-175 745.5,-175 745.5,-116 745.5,-116 745.5,-110 751.5,-104 757.5,-104 757.5,-104 857.5,-104 857.5,-104 863.5,-104 869.5,-110 869.5,-116 869.5,-116 869.5,-175 869.5,-175 869.5,-181 863.5,-187 857.5,-187\"/>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 7.523</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.256</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 331</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [281, 50]</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 14&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>14&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M967.3654,-231.1936C939.8179,-216.4272 907.2537,-198.9716 878.7278,-183.6807\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"880.0868,-180.438 869.6196,-178.7983 876.7796,-186.6076 880.0868,-180.438\"/>\n</g>\n<!-- 18 -->\n<g id=\"node19\" class=\"node\">\n<title>18</title>\n<path fill=\"#e68843\" stroke=\"#000000\" d=\"M1071,-187C1071,-187 988,-187 988,-187 982,-187 976,-181 976,-175 976,-175 976,-116 976,-116 976,-110 982,-104 988,-104 988,-104 1071,-104 1071,-104 1077,-104 1083,-110 1083,-116 1083,-116 1083,-175 1083,-175 1083,-181 1077,-187 1071,-187\"/>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">pclass &lt;= 2.5</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.095</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 20</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [19, 1]</text>\n<text text-anchor=\"middle\" x=\"1029.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 14&#45;&gt;18 -->\n<g id=\"edge18\" class=\"edge\">\n<title>14&#45;&gt;18</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1029.5,-222.8796C1029.5,-214.6838 1029.5,-205.9891 1029.5,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1033.0001,-197.298 1029.5,-187.2981 1026.0001,-197.2981 1033.0001,-197.298\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<path fill=\"#e88f4f\" stroke=\"#000000\" d=\"M715,-68C715,-68 632,-68 632,-68 626,-68 620,-62 620,-56 620,-56 620,-12 620,-12 620,-6 626,0 632,0 632,0 715,0 715,0 721,0 727,-6 727,-12 727,-12 727,-56 727,-56 727,-62 721,-68 715,-68\"/>\n<text text-anchor=\"middle\" x=\"673.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.18</text>\n<text text-anchor=\"middle\" x=\"673.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 70</text>\n<text text-anchor=\"middle\" x=\"673.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [63, 7]</text>\n<text text-anchor=\"middle\" x=\"673.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 15&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>15&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M757.6033,-103.9815C746.1162,-94.4232 733.9103,-84.2668 722.4633,-74.7419\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"724.6035,-71.9695 714.6779,-68.2637 720.1261,-77.3503 724.6035,-71.9695\"/>\n</g>\n<!-- 17 -->\n<g id=\"node18\" class=\"node\">\n<title>17</title>\n<path fill=\"#ea9a60\" stroke=\"#000000\" d=\"M857.5,-68C857.5,-68 757.5,-68 757.5,-68 751.5,-68 745.5,-62 745.5,-56 745.5,-56 745.5,-12 745.5,-12 745.5,-6 751.5,0 757.5,0 757.5,0 857.5,0 857.5,0 863.5,0 869.5,-6 869.5,-12 869.5,-12 869.5,-56 869.5,-56 869.5,-62 863.5,-68 857.5,-68\"/>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.275</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 261</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [218, 43]</text>\n<text text-anchor=\"middle\" x=\"807.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 15&#45;&gt;17 -->\n<g id=\"edge17\" class=\"edge\">\n<title>15&#45;&gt;17</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M807.5,-103.9815C807.5,-95.618 807.5,-86.7965 807.5,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"811.0001,-78.2636 807.5,-68.2637 804.0001,-78.2637 811.0001,-78.2636\"/>\n</g>\n<!-- 19 -->\n<g id=\"node20\" class=\"node\">\n<title>19</title>\n<path fill=\"#e9965a\" stroke=\"#000000\" d=\"M975,-68C975,-68 900,-68 900,-68 894,-68 888,-62 888,-56 888,-56 888,-12 888,-12 888,-6 894,0 900,0 900,0 975,0 975,0 981,0 987,-6 987,-12 987,-12 987,-56 987,-56 987,-62 981,-68 975,-68\"/>\n<text text-anchor=\"middle\" x=\"937.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.245</text>\n<text text-anchor=\"middle\" x=\"937.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n<text text-anchor=\"middle\" x=\"937.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [6, 1]</text>\n<text text-anchor=\"middle\" x=\"937.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 18&#45;&gt;19 -->\n<g id=\"edge19\" class=\"edge\">\n<title>18&#45;&gt;19</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M995.2426,-103.9815C987.7351,-94.8828 979.7804,-85.242 972.2536,-76.1199\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"974.8354,-73.7495 965.7714,-68.2637 969.4361,-78.2045 974.8354,-73.7495\"/>\n</g>\n<!-- 20 -->\n<g id=\"node21\" class=\"node\">\n<title>20</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1100,-68C1100,-68 1017,-68 1017,-68 1011,-68 1005,-62 1005,-56 1005,-56 1005,-12 1005,-12 1005,-6 1011,0 1017,0 1017,0 1100,0 1100,0 1106,0 1112,-6 1112,-12 1112,-12 1112,-56 1112,-56 1112,-62 1106,-68 1100,-68\"/>\n<text text-anchor=\"middle\" x=\"1058.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1058.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n<text text-anchor=\"middle\" x=\"1058.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [13, 0]</text>\n<text text-anchor=\"middle\" x=\"1058.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 18&#45;&gt;20 -->\n<g id=\"edge20\" class=\"edge\">\n<title>18&#45;&gt;20</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1040.2985,-103.9815C1042.4977,-95.5261 1044.8186,-86.6026 1047.0399,-78.0623\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1050.4585,-78.8227 1049.5884,-68.2637 1043.6838,-77.0607 1050.4585,-78.8227\"/>\n</g>\n<!-- 22 -->\n<g id=\"node23\" class=\"node\">\n<title>22</title>\n<path fill=\"#f5d0b5\" stroke=\"#000000\" d=\"M1274.5,-187C1274.5,-187 1152.5,-187 1152.5,-187 1146.5,-187 1140.5,-181 1140.5,-175 1140.5,-175 1140.5,-116 1140.5,-116 1140.5,-110 1146.5,-104 1152.5,-104 1152.5,-104 1274.5,-104 1274.5,-104 1280.5,-104 1286.5,-110 1286.5,-116 1286.5,-116 1286.5,-175 1286.5,-175 1286.5,-181 1280.5,-187 1274.5,-187\"/>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Embarked_C &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.473</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 26</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [16, 10]</text>\n<text text-anchor=\"middle\" x=\"1213.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 21&#45;&gt;22 -->\n<g id=\"edge22\" class=\"edge\">\n<title>21&#45;&gt;22</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1213.5,-222.8796C1213.5,-214.6838 1213.5,-205.9891 1213.5,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1217.0001,-197.298 1213.5,-187.2981 1210.0001,-197.2981 1217.0001,-197.298\"/>\n</g>\n<!-- 25 -->\n<g id=\"node26\" class=\"node\">\n<title>25</title>\n<path fill=\"#eb9e66\" stroke=\"#000000\" d=\"M1476.5,-187C1476.5,-187 1384.5,-187 1384.5,-187 1378.5,-187 1372.5,-181 1372.5,-175 1372.5,-175 1372.5,-116 1372.5,-116 1372.5,-110 1378.5,-104 1384.5,-104 1384.5,-104 1476.5,-104 1476.5,-104 1482.5,-104 1488.5,-110 1488.5,-116 1488.5,-116 1488.5,-175 1488.5,-175 1488.5,-181 1482.5,-187 1476.5,-187\"/>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 60.748</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.301</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 103</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [84, 19]</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 21&#45;&gt;25 -->\n<g id=\"edge25\" class=\"edge\">\n<title>21&#45;&gt;25</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1275.6835,-230.3994C1303.1449,-215.3399 1335.4795,-197.608 1363.4767,-182.2547\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1365.3174,-185.2371 1372.4026,-177.3599 1361.9515,-179.0994 1365.3174,-185.2371\"/>\n</g>\n<!-- 23 -->\n<g id=\"node24\" class=\"node\">\n<title>23</title>\n<path fill=\"#eeae80\" stroke=\"#000000\" d=\"M1225,-68C1225,-68 1142,-68 1142,-68 1136,-68 1130,-62 1130,-56 1130,-56 1130,-12 1130,-12 1130,-6 1136,0 1142,0 1142,0 1225,0 1225,0 1231,0 1237,-6 1237,-12 1237,-12 1237,-56 1237,-56 1237,-62 1231,-68 1225,-68\"/>\n<text text-anchor=\"middle\" x=\"1183.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.388</text>\n<text text-anchor=\"middle\" x=\"1183.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 19</text>\n<text text-anchor=\"middle\" x=\"1183.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 5]</text>\n<text text-anchor=\"middle\" x=\"1183.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 22&#45;&gt;23 -->\n<g id=\"edge23\" class=\"edge\">\n<title>22&#45;&gt;23</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1202.3291,-103.9815C1200.0541,-95.5261 1197.6532,-86.6026 1195.3553,-78.0623\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1198.697,-77.0109 1192.7189,-68.2637 1191.9374,-78.8296 1198.697,-77.0109\"/>\n</g>\n<!-- 24 -->\n<g id=\"node25\" class=\"node\">\n<title>24</title>\n<path fill=\"#88c4ef\" stroke=\"#000000\" d=\"M1342,-68C1342,-68 1267,-68 1267,-68 1261,-68 1255,-62 1255,-56 1255,-56 1255,-12 1255,-12 1255,-6 1261,0 1267,0 1267,0 1342,0 1342,0 1348,0 1354,-6 1354,-12 1354,-12 1354,-56 1354,-56 1354,-62 1348,-68 1342,-68\"/>\n<text text-anchor=\"middle\" x=\"1304.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.408</text>\n<text text-anchor=\"middle\" x=\"1304.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 7</text>\n<text text-anchor=\"middle\" x=\"1304.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 5]</text>\n<text text-anchor=\"middle\" x=\"1304.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 22&#45;&gt;24 -->\n<g id=\"edge24\" class=\"edge\">\n<title>22&#45;&gt;24</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1247.385,-103.9815C1254.8109,-94.8828 1262.6792,-85.242 1270.1241,-76.1199\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1272.9245,-78.224 1276.5359,-68.2637 1267.5014,-73.798 1272.9245,-78.224\"/>\n</g>\n<!-- 26 -->\n<g id=\"node27\" class=\"node\">\n<title>26</title>\n<path fill=\"#eca26d\" stroke=\"#000000\" d=\"M1476.5,-68C1476.5,-68 1384.5,-68 1384.5,-68 1378.5,-68 1372.5,-62 1372.5,-56 1372.5,-56 1372.5,-12 1372.5,-12 1372.5,-6 1378.5,0 1384.5,0 1384.5,0 1476.5,0 1476.5,0 1482.5,0 1488.5,-6 1488.5,-12 1488.5,-12 1488.5,-56 1488.5,-56 1488.5,-62 1482.5,-68 1476.5,-68\"/>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.33</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 91</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [72, 19]</text>\n<text text-anchor=\"middle\" x=\"1430.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 25&#45;&gt;26 -->\n<g id=\"edge26\" class=\"edge\">\n<title>25&#45;&gt;26</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1430.5,-103.9815C1430.5,-95.618 1430.5,-86.7965 1430.5,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1434.0001,-78.2636 1430.5,-68.2637 1427.0001,-78.2637 1434.0001,-78.2636\"/>\n</g>\n<!-- 27 -->\n<g id=\"node28\" class=\"node\">\n<title>27</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M1602,-68C1602,-68 1519,-68 1519,-68 1513,-68 1507,-62 1507,-56 1507,-56 1507,-12 1507,-12 1507,-6 1513,0 1519,0 1519,0 1602,0 1602,0 1608,0 1614,-6 1614,-12 1614,-12 1614,-56 1614,-56 1614,-62 1608,-68 1602,-68\"/>\n<text text-anchor=\"middle\" x=\"1560.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1560.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 12</text>\n<text text-anchor=\"middle\" x=\"1560.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [12, 0]</text>\n<text text-anchor=\"middle\" x=\"1560.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 25&#45;&gt;27 -->\n<g id=\"edge27\" class=\"edge\">\n<title>25&#45;&gt;27</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1478.9072,-103.9815C1489.9442,-94.5151 1501.6653,-84.462 1512.6777,-75.0168\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1515.2394,-77.4307 1520.5513,-68.2637 1510.6822,-72.1173 1515.2394,-77.4307\"/>\n</g>\n<!-- 29 -->\n<g id=\"node30\" class=\"node\">\n<title>29</title>\n<path fill=\"#49a5e7\" stroke=\"#000000\" d=\"M2029.5,-425C2029.5,-425 1929.5,-425 1929.5,-425 1923.5,-425 1917.5,-419 1917.5,-413 1917.5,-413 1917.5,-354 1917.5,-354 1917.5,-348 1923.5,-342 1929.5,-342 1929.5,-342 2029.5,-342 2029.5,-342 2035.5,-342 2041.5,-348 2041.5,-354 2041.5,-354 2041.5,-413 2041.5,-413 2041.5,-419 2035.5,-425 2029.5,-425\"/>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 26.125</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.141</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 196</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [15, 181]</text>\n<text text-anchor=\"middle\" x=\"1979.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 28&#45;&gt;29 -->\n<g id=\"edge29\" class=\"edge\">\n<title>28&#45;&gt;29</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1979.5,-460.8796C1979.5,-452.6838 1979.5,-443.9891 1979.5,-435.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1983.0001,-435.298 1979.5,-425.2981 1976.0001,-435.2981 1983.0001,-435.298\"/>\n</g>\n<!-- 42 -->\n<g id=\"node43\" class=\"node\">\n<title>42</title>\n<path fill=\"#fdf7f3\" stroke=\"#000000\" d=\"M2656.5,-425C2656.5,-425 2564.5,-425 2564.5,-425 2558.5,-425 2552.5,-419 2552.5,-413 2552.5,-413 2552.5,-354 2552.5,-354 2552.5,-348 2558.5,-342 2564.5,-342 2564.5,-342 2656.5,-342 2656.5,-342 2662.5,-342 2668.5,-348 2668.5,-354 2668.5,-354 2668.5,-413 2668.5,-413 2668.5,-419 2662.5,-425 2656.5,-425\"/>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 23.35</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 161</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [83, 78]</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 28&#45;&gt;42 -->\n<g id=\"edge42\" class=\"edge\">\n<title>28&#45;&gt;42</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2041.7296,-490.7641C2160.5805,-468.3501 2418.9961,-419.6156 2542.3343,-396.3553\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2543.2318,-399.7479 2552.4099,-394.4552 2541.9345,-392.8691 2543.2318,-399.7479\"/>\n</g>\n<!-- 30 -->\n<g id=\"node31\" class=\"node\">\n<title>30</title>\n<path fill=\"#6cb6ec\" stroke=\"#000000\" d=\"M1957.5,-306C1957.5,-306 1865.5,-306 1865.5,-306 1859.5,-306 1853.5,-300 1853.5,-294 1853.5,-294 1853.5,-235 1853.5,-235 1853.5,-229 1859.5,-223 1865.5,-223 1865.5,-223 1957.5,-223 1957.5,-223 1963.5,-223 1969.5,-229 1969.5,-235 1969.5,-235 1969.5,-294 1969.5,-294 1969.5,-300 1963.5,-306 1957.5,-306\"/>\n<text text-anchor=\"middle\" x=\"1911.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 25.965</text>\n<text text-anchor=\"middle\" x=\"1911.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.324</text>\n<text text-anchor=\"middle\" x=\"1911.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 59</text>\n<text text-anchor=\"middle\" x=\"1911.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [12, 47]</text>\n<text text-anchor=\"middle\" x=\"1911.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 29&#45;&gt;30 -->\n<g id=\"edge30\" class=\"edge\">\n<title>29&#45;&gt;30</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1955.7169,-341.8796C1950.7763,-333.2335 1945.5184,-324.0322 1940.4167,-315.1042\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1943.3849,-313.244 1935.3846,-306.2981 1937.3072,-316.717 1943.3849,-313.244\"/>\n</g>\n<!-- 35 -->\n<g id=\"node36\" class=\"node\">\n<title>35</title>\n<path fill=\"#3d9fe6\" stroke=\"#000000\" d=\"M2095,-306C2095,-306 2000,-306 2000,-306 1994,-306 1988,-300 1988,-294 1988,-294 1988,-235 1988,-235 1988,-229 1994,-223 2000,-223 2000,-223 2095,-223 2095,-223 2101,-223 2107,-229 2107,-235 2107,-235 2107,-294 2107,-294 2107,-300 2101,-306 2095,-306\"/>\n<text text-anchor=\"middle\" x=\"2047.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 149.035</text>\n<text text-anchor=\"middle\" x=\"2047.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.043</text>\n<text text-anchor=\"middle\" x=\"2047.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 137</text>\n<text text-anchor=\"middle\" x=\"2047.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [3, 134]</text>\n<text text-anchor=\"middle\" x=\"2047.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 29&#45;&gt;35 -->\n<g id=\"edge35\" class=\"edge\">\n<title>29&#45;&gt;35</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2003.2831,-341.8796C2008.2237,-333.2335 2013.4816,-324.0322 2018.5833,-315.1042\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2021.6928,-316.717 2023.6154,-306.2981 2015.6151,-313.244 2021.6928,-316.717\"/>\n</g>\n<!-- 31 -->\n<g id=\"node32\" class=\"node\">\n<title>31</title>\n<path fill=\"#63b2ea\" stroke=\"#000000\" d=\"M1831,-187C1831,-187 1748,-187 1748,-187 1742,-187 1736,-181 1736,-175 1736,-175 1736,-116 1736,-116 1736,-110 1742,-104 1748,-104 1748,-104 1831,-104 1831,-104 1837,-104 1843,-110 1843,-116 1843,-116 1843,-175 1843,-175 1843,-181 1837,-187 1831,-187\"/>\n<text text-anchor=\"middle\" x=\"1789.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 22.0</text>\n<text text-anchor=\"middle\" x=\"1789.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.287</text>\n<text text-anchor=\"middle\" x=\"1789.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 46</text>\n<text text-anchor=\"middle\" x=\"1789.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 38]</text>\n<text text-anchor=\"middle\" x=\"1789.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 30&#45;&gt;31 -->\n<g id=\"edge31\" class=\"edge\">\n<title>30&#45;&gt;31</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1868.8303,-222.8796C1859.4123,-213.6931 1849.3516,-203.8798 1839.6672,-194.4336\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1841.9543,-191.7751 1832.3518,-187.2981 1837.0665,-196.7861 1841.9543,-191.7751\"/>\n</g>\n<!-- 34 -->\n<g id=\"node35\" class=\"node\">\n<title>34</title>\n<path fill=\"#91c9f1\" stroke=\"#000000\" d=\"M1953.5,-179.5C1953.5,-179.5 1873.5,-179.5 1873.5,-179.5 1867.5,-179.5 1861.5,-173.5 1861.5,-167.5 1861.5,-167.5 1861.5,-123.5 1861.5,-123.5 1861.5,-117.5 1867.5,-111.5 1873.5,-111.5 1873.5,-111.5 1953.5,-111.5 1953.5,-111.5 1959.5,-111.5 1965.5,-117.5 1965.5,-123.5 1965.5,-123.5 1965.5,-167.5 1965.5,-167.5 1965.5,-173.5 1959.5,-179.5 1953.5,-179.5\"/>\n<text text-anchor=\"middle\" x=\"1913.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.426</text>\n<text text-anchor=\"middle\" x=\"1913.5\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 13</text>\n<text text-anchor=\"middle\" x=\"1913.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 9]</text>\n<text text-anchor=\"middle\" x=\"1913.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 30&#45;&gt;34 -->\n<g id=\"edge34\" class=\"edge\">\n<title>30&#45;&gt;34</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1912.1995,-222.8796C1912.3788,-212.2134 1912.5722,-200.7021 1912.7538,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1916.2546,-189.8724 1912.9233,-179.8149 1909.2556,-189.7547 1916.2546,-189.8724\"/>\n</g>\n<!-- 32 -->\n<g id=\"node33\" class=\"node\">\n<title>32</title>\n<path fill=\"#6ab6ec\" stroke=\"#000000\" d=\"M1727,-68C1727,-68 1644,-68 1644,-68 1638,-68 1632,-62 1632,-56 1632,-56 1632,-12 1632,-12 1632,-6 1638,0 1644,0 1644,0 1727,0 1727,0 1733,0 1739,-6 1739,-12 1739,-12 1739,-56 1739,-56 1739,-62 1733,-68 1727,-68\"/>\n<text text-anchor=\"middle\" x=\"1685.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.32</text>\n<text text-anchor=\"middle\" x=\"1685.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 40</text>\n<text text-anchor=\"middle\" x=\"1685.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [8, 32]</text>\n<text text-anchor=\"middle\" x=\"1685.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 31&#45;&gt;32 -->\n<g id=\"edge32\" class=\"edge\">\n<title>31&#45;&gt;32</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1750.7742,-103.9815C1742.2018,-94.7908 1733.1135,-85.0472 1724.529,-75.8436\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1726.8393,-73.1891 1717.4589,-68.2637 1721.7204,-77.9637 1726.8393,-73.1891\"/>\n</g>\n<!-- 33 -->\n<g id=\"node34\" class=\"node\">\n<title>33</title>\n<path fill=\"#399de5\" stroke=\"#000000\" d=\"M1844,-68C1844,-68 1769,-68 1769,-68 1763,-68 1757,-62 1757,-56 1757,-56 1757,-12 1757,-12 1757,-6 1763,0 1769,0 1769,0 1844,0 1844,0 1850,0 1856,-6 1856,-12 1856,-12 1856,-56 1856,-56 1856,-62 1850,-68 1844,-68\"/>\n<text text-anchor=\"middle\" x=\"1806.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"1806.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"middle\" x=\"1806.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 6]</text>\n<text text-anchor=\"middle\" x=\"1806.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 31&#45;&gt;33 -->\n<g id=\"edge33\" class=\"edge\">\n<title>31&#45;&gt;33</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M1795.8302,-103.9815C1797.1053,-95.618 1798.4503,-86.7965 1799.7395,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1803.2286,-78.677 1801.2759,-68.2637 1796.3086,-77.6219 1803.2286,-78.677\"/>\n</g>\n<!-- 36 -->\n<g id=\"node37\" class=\"node\">\n<title>36</title>\n<path fill=\"#3b9ee5\" stroke=\"#000000\" d=\"M2091.5,-187C2091.5,-187 1999.5,-187 1999.5,-187 1993.5,-187 1987.5,-181 1987.5,-175 1987.5,-175 1987.5,-116 1987.5,-116 1987.5,-110 1993.5,-104 1999.5,-104 1999.5,-104 2091.5,-104 2091.5,-104 2097.5,-104 2103.5,-110 2103.5,-116 2103.5,-116 2103.5,-175 2103.5,-175 2103.5,-181 2097.5,-187 2091.5,-187\"/>\n<text text-anchor=\"middle\" x=\"2045.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 28.856</text>\n<text text-anchor=\"middle\" x=\"2045.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.018</text>\n<text text-anchor=\"middle\" x=\"2045.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 112</text>\n<text text-anchor=\"middle\" x=\"2045.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 111]</text>\n<text text-anchor=\"middle\" x=\"2045.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 35&#45;&gt;36 -->\n<g id=\"edge36\" class=\"edge\">\n<title>35&#45;&gt;36</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2046.8005,-222.8796C2046.6628,-214.6838 2046.5166,-205.9891 2046.374,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2049.8701,-197.2378 2046.2025,-187.2981 2042.8711,-197.3555 2049.8701,-197.2378\"/>\n</g>\n<!-- 39 -->\n<g id=\"node40\" class=\"node\">\n<title>39</title>\n<path fill=\"#4aa6e7\" stroke=\"#000000\" d=\"M2229,-187C2229,-187 2134,-187 2134,-187 2128,-187 2122,-181 2122,-175 2122,-175 2122,-116 2122,-116 2122,-110 2128,-104 2134,-104 2134,-104 2229,-104 2229,-104 2235,-104 2241,-110 2241,-116 2241,-116 2241,-175 2241,-175 2241,-181 2235,-187 2229,-187\"/>\n<text text-anchor=\"middle\" x=\"2181.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 159.165</text>\n<text text-anchor=\"middle\" x=\"2181.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.147</text>\n<text text-anchor=\"middle\" x=\"2181.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 25</text>\n<text text-anchor=\"middle\" x=\"2181.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 23]</text>\n<text text-anchor=\"middle\" x=\"2181.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 35&#45;&gt;39 -->\n<g id=\"edge39\" class=\"edge\">\n<title>35&#45;&gt;39</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2094.3667,-222.8796C2104.8125,-213.6031 2115.9781,-203.6874 2126.711,-194.1559\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2129.2801,-196.5553 2134.4333,-187.2981 2124.632,-191.3213 2129.2801,-196.5553\"/>\n</g>\n<!-- 37 -->\n<g id=\"node38\" class=\"node\">\n<title>37</title>\n<path fill=\"#46a4e7\" stroke=\"#000000\" d=\"M1969,-68C1969,-68 1886,-68 1886,-68 1880,-68 1874,-62 1874,-56 1874,-56 1874,-12 1874,-12 1874,-6 1880,0 1886,0 1886,0 1969,0 1969,0 1975,0 1981,-6 1981,-12 1981,-12 1981,-56 1981,-56 1981,-62 1975,-68 1969,-68\"/>\n<text text-anchor=\"middle\" x=\"1927.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.117</text>\n<text text-anchor=\"middle\" x=\"1927.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"middle\" x=\"1927.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [1, 15]</text>\n<text text-anchor=\"middle\" x=\"1927.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 36&#45;&gt;37 -->\n<g id=\"edge37\" class=\"edge\">\n<title>36&#45;&gt;37</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2001.5612,-103.9815C1991.6402,-94.607 1981.1103,-84.6572 1971.1992,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"1973.4334,-72.5878 1963.7611,-68.2637 1968.6257,-77.6757 1973.4334,-72.5878\"/>\n</g>\n<!-- 38 -->\n<g id=\"node39\" class=\"node\">\n<title>38</title>\n<path fill=\"#399de5\" stroke=\"#000000\" d=\"M2094,-68C2094,-68 2011,-68 2011,-68 2005,-68 1999,-62 1999,-56 1999,-56 1999,-12 1999,-12 1999,-6 2005,0 2011,0 2011,0 2094,0 2094,0 2100,0 2106,-6 2106,-12 2106,-12 2106,-56 2106,-56 2106,-62 2100,-68 2094,-68\"/>\n<text text-anchor=\"middle\" x=\"2052.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"2052.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 96</text>\n<text text-anchor=\"middle\" x=\"2052.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 96]</text>\n<text text-anchor=\"middle\" x=\"2052.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 36&#45;&gt;38 -->\n<g id=\"edge38\" class=\"edge\">\n<title>36&#45;&gt;38</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2048.1065,-103.9815C2048.6316,-95.618 2049.1854,-86.7965 2049.7163,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2053.2154,-78.4634 2050.3489,-68.2637 2046.2291,-78.0247 2053.2154,-78.4634\"/>\n</g>\n<!-- 40 -->\n<g id=\"node41\" class=\"node\">\n<title>40</title>\n<path fill=\"#9ccef2\" stroke=\"#000000\" d=\"M2211,-68C2211,-68 2136,-68 2136,-68 2130,-68 2124,-62 2124,-56 2124,-56 2124,-12 2124,-12 2124,-6 2130,0 2136,0 2136,0 2211,0 2211,0 2217,0 2223,-6 2223,-12 2223,-12 2223,-56 2223,-56 2223,-62 2217,-68 2211,-68\"/>\n<text text-anchor=\"middle\" x=\"2173.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.444</text>\n<text text-anchor=\"middle\" x=\"2173.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 6</text>\n<text text-anchor=\"middle\" x=\"2173.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 4]</text>\n<text text-anchor=\"middle\" x=\"2173.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 39&#45;&gt;40 -->\n<g id=\"edge40\" class=\"edge\">\n<title>39&#45;&gt;40</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2178.5211,-103.9815C2177.921,-95.618 2177.2881,-86.7965 2176.6814,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2180.1651,-77.9875 2175.9584,-68.2637 2173.1831,-78.4885 2180.1651,-77.9875\"/>\n</g>\n<!-- 41 -->\n<g id=\"node42\" class=\"node\">\n<title>41</title>\n<path fill=\"#399de5\" stroke=\"#000000\" d=\"M2336,-68C2336,-68 2253,-68 2253,-68 2247,-68 2241,-62 2241,-56 2241,-56 2241,-12 2241,-12 2241,-6 2247,0 2253,0 2253,0 2336,0 2336,0 2342,0 2348,-6 2348,-12 2348,-12 2348,-56 2348,-56 2348,-62 2342,-68 2336,-68\"/>\n<text text-anchor=\"middle\" x=\"2294.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"2294.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 19</text>\n<text text-anchor=\"middle\" x=\"2294.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [0, 19]</text>\n<text text-anchor=\"middle\" x=\"2294.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 39&#45;&gt;41 -->\n<g id=\"edge41\" class=\"edge\">\n<title>39&#45;&gt;41</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2223.577,-103.9815C2233.0776,-94.607 2243.1613,-84.6572 2252.6524,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2255.1155,-77.7787 2259.7754,-68.2637 2250.1989,-72.796 2255.1155,-77.7787\"/>\n</g>\n<!-- 43 -->\n<g id=\"node44\" class=\"node\">\n<title>43</title>\n<path fill=\"#d5eafa\" stroke=\"#000000\" d=\"M2656.5,-306C2656.5,-306 2564.5,-306 2564.5,-306 2558.5,-306 2552.5,-300 2552.5,-294 2552.5,-294 2552.5,-235 2552.5,-235 2552.5,-229 2558.5,-223 2564.5,-223 2564.5,-223 2656.5,-223 2656.5,-223 2662.5,-223 2668.5,-229 2668.5,-235 2668.5,-235 2668.5,-294 2668.5,-294 2668.5,-300 2662.5,-306 2656.5,-306\"/>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 14.873</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.493</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 136</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [60, 76]</text>\n<text text-anchor=\"middle\" x=\"2610.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 42&#45;&gt;43 -->\n<g id=\"edge43\" class=\"edge\">\n<title>42&#45;&gt;43</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2610.5,-341.8796C2610.5,-333.6838 2610.5,-324.9891 2610.5,-316.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2614.0001,-316.298 2610.5,-306.2981 2607.0001,-316.2981 2614.0001,-316.298\"/>\n</g>\n<!-- 50 -->\n<g id=\"node51\" class=\"node\">\n<title>50</title>\n<path fill=\"#e78c4a\" stroke=\"#000000\" d=\"M2964.5,-306C2964.5,-306 2878.5,-306 2878.5,-306 2872.5,-306 2866.5,-300 2866.5,-294 2866.5,-294 2866.5,-235 2866.5,-235 2866.5,-229 2872.5,-223 2878.5,-223 2878.5,-223 2964.5,-223 2964.5,-223 2970.5,-223 2976.5,-229 2976.5,-235 2976.5,-235 2976.5,-294 2976.5,-294 2976.5,-300 2970.5,-306 2964.5,-306\"/>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 32.881</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.147</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 25</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [23, 2]</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 42&#45;&gt;50 -->\n<g id=\"edge50\" class=\"edge\">\n<title>42&#45;&gt;50</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2668.6319,-361.2566C2722.1468,-340.7798 2801.4062,-310.4523 2856.8847,-289.2242\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2858.176,-292.4776 2866.2648,-285.635 2855.6743,-285.9399 2858.176,-292.4776\"/>\n</g>\n<!-- 44 -->\n<g id=\"node45\" class=\"node\">\n<title>44</title>\n<path fill=\"#fefaf7\" stroke=\"#000000\" d=\"M2582.5,-187C2582.5,-187 2490.5,-187 2490.5,-187 2484.5,-187 2478.5,-181 2478.5,-175 2478.5,-175 2478.5,-116 2478.5,-116 2478.5,-110 2484.5,-104 2490.5,-104 2490.5,-104 2582.5,-104 2582.5,-104 2588.5,-104 2594.5,-110 2594.5,-116 2594.5,-116 2594.5,-175 2594.5,-175 2594.5,-181 2588.5,-187 2582.5,-187\"/>\n<text text-anchor=\"middle\" x=\"2536.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 14.254</text>\n<text text-anchor=\"middle\" x=\"2536.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"2536.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 96</text>\n<text text-anchor=\"middle\" x=\"2536.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [49, 47]</text>\n<text text-anchor=\"middle\" x=\"2536.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 43&#45;&gt;44 -->\n<g id=\"edge44\" class=\"edge\">\n<title>43&#45;&gt;44</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2584.6184,-222.8796C2579.1858,-214.1434 2573.4008,-204.8404 2567.7947,-195.8253\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2570.7451,-193.9418 2562.4921,-187.2981 2564.8007,-197.6383 2570.7451,-193.9418\"/>\n</g>\n<!-- 47 -->\n<g id=\"node48\" class=\"node\">\n<title>47</title>\n<path fill=\"#84c2ef\" stroke=\"#000000\" d=\"M2746.5,-187C2746.5,-187 2624.5,-187 2624.5,-187 2618.5,-187 2612.5,-181 2612.5,-175 2612.5,-175 2612.5,-116 2612.5,-116 2612.5,-110 2618.5,-104 2624.5,-104 2624.5,-104 2746.5,-104 2746.5,-104 2752.5,-104 2758.5,-110 2758.5,-116 2758.5,-116 2758.5,-175 2758.5,-175 2758.5,-181 2752.5,-187 2746.5,-187\"/>\n<text text-anchor=\"middle\" x=\"2685.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Embarked_S &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"2685.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.399</text>\n<text text-anchor=\"middle\" x=\"2685.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 40</text>\n<text text-anchor=\"middle\" x=\"2685.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [11, 29]</text>\n<text text-anchor=\"middle\" x=\"2685.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 43&#45;&gt;47 -->\n<g id=\"edge47\" class=\"edge\">\n<title>43&#45;&gt;47</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2636.7314,-222.8796C2642.2373,-214.1434 2648.1006,-204.8404 2653.7824,-195.8253\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2656.7857,-197.6242 2659.1567,-187.2981 2650.8637,-193.8919 2656.7857,-197.6242\"/>\n</g>\n<!-- 45 -->\n<g id=\"node46\" class=\"node\">\n<title>45</title>\n<path fill=\"#e2f0fb\" stroke=\"#000000\" d=\"M2470.5,-68C2470.5,-68 2378.5,-68 2378.5,-68 2372.5,-68 2366.5,-62 2366.5,-56 2366.5,-56 2366.5,-12 2366.5,-12 2366.5,-6 2372.5,0 2378.5,0 2378.5,0 2470.5,0 2470.5,0 2476.5,0 2482.5,-6 2482.5,-12 2482.5,-12 2482.5,-56 2482.5,-56 2482.5,-62 2476.5,-68 2470.5,-68\"/>\n<text text-anchor=\"middle\" x=\"2424.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.497</text>\n<text text-anchor=\"middle\" x=\"2424.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 87</text>\n<text text-anchor=\"middle\" x=\"2424.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [40, 47]</text>\n<text text-anchor=\"middle\" x=\"2424.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 44&#45;&gt;45 -->\n<g id=\"edge45\" class=\"edge\">\n<title>44&#45;&gt;45</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2494.7953,-103.9815C2485.4711,-94.6989 2475.5803,-84.8522 2466.2541,-75.5677\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2468.4736,-72.8385 2458.9173,-68.2637 2463.5349,-77.7993 2468.4736,-72.8385\"/>\n</g>\n<!-- 46 -->\n<g id=\"node47\" class=\"node\">\n<title>46</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M2588,-68C2588,-68 2513,-68 2513,-68 2507,-68 2501,-62 2501,-56 2501,-56 2501,-12 2501,-12 2501,-6 2507,0 2513,0 2513,0 2588,0 2588,0 2594,0 2600,-6 2600,-12 2600,-12 2600,-56 2600,-56 2600,-62 2594,-68 2588,-68\"/>\n<text text-anchor=\"middle\" x=\"2550.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"2550.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n<text text-anchor=\"middle\" x=\"2550.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 0]</text>\n<text text-anchor=\"middle\" x=\"2550.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 44&#45;&gt;46 -->\n<g id=\"edge46\" class=\"edge\">\n<title>44&#45;&gt;46</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2541.7131,-103.9815C2542.7632,-95.618 2543.8708,-86.7965 2544.9325,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2548.4247,-78.6218 2546.1978,-68.2637 2541.4792,-77.7497 2548.4247,-78.6218\"/>\n</g>\n<!-- 48 -->\n<g id=\"node49\" class=\"node\">\n<title>48</title>\n<path fill=\"#50a9e8\" stroke=\"#000000\" d=\"M2713,-68C2713,-68 2630,-68 2630,-68 2624,-68 2618,-62 2618,-56 2618,-56 2618,-12 2618,-12 2618,-6 2624,0 2630,0 2630,0 2713,0 2713,0 2719,0 2725,-6 2725,-12 2725,-12 2725,-56 2725,-56 2725,-62 2719,-68 2713,-68\"/>\n<text text-anchor=\"middle\" x=\"2671.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.188</text>\n<text text-anchor=\"middle\" x=\"2671.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 19</text>\n<text text-anchor=\"middle\" x=\"2671.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [2, 17]</text>\n<text text-anchor=\"middle\" x=\"2671.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 47&#45;&gt;48 -->\n<g id=\"edge48\" class=\"edge\">\n<title>47&#45;&gt;48</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2680.2869,-103.9815C2679.2368,-95.618 2678.1292,-86.7965 2677.0675,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2680.5208,-77.7497 2675.8022,-68.2637 2673.5753,-78.6218 2680.5208,-77.7497\"/>\n</g>\n<!-- 49 -->\n<g id=\"node50\" class=\"node\">\n<title>49</title>\n<path fill=\"#cee6f8\" stroke=\"#000000\" d=\"M2838,-68C2838,-68 2755,-68 2755,-68 2749,-68 2743,-62 2743,-56 2743,-56 2743,-12 2743,-12 2743,-6 2749,0 2755,0 2755,0 2838,0 2838,0 2844,0 2850,-6 2850,-12 2850,-12 2850,-56 2850,-56 2850,-62 2844,-68 2838,-68\"/>\n<text text-anchor=\"middle\" x=\"2796.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.49</text>\n<text text-anchor=\"middle\" x=\"2796.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 21</text>\n<text text-anchor=\"middle\" x=\"2796.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 12]</text>\n<text text-anchor=\"middle\" x=\"2796.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 47&#45;&gt;49 -->\n<g id=\"edge49\" class=\"edge\">\n<title>47&#45;&gt;49</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2726.8323,-103.9815C2736.0733,-94.6989 2745.8758,-84.8522 2755.1187,-75.5677\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2757.8152,-77.82 2762.39,-68.2637 2752.8543,-72.8813 2757.8152,-77.82\"/>\n</g>\n<!-- 51 -->\n<g id=\"node52\" class=\"node\">\n<title>51</title>\n<path fill=\"#e99355\" stroke=\"#000000\" d=\"M2963,-187C2963,-187 2880,-187 2880,-187 2874,-187 2868,-181 2868,-175 2868,-175 2868,-116 2868,-116 2868,-110 2874,-104 2880,-104 2880,-104 2963,-104 2963,-104 2969,-104 2975,-110 2975,-116 2975,-116 2975,-175 2975,-175 2975,-181 2969,-187 2963,-187\"/>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">fare &lt;= 30.2</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.219</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 16</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 2]</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 50&#45;&gt;51 -->\n<g id=\"edge51\" class=\"edge\">\n<title>50&#45;&gt;51</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2921.5,-222.8796C2921.5,-214.6838 2921.5,-205.9891 2921.5,-197.5013\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2925.0001,-197.298 2921.5,-187.2981 2918.0001,-197.2981 2925.0001,-197.298\"/>\n</g>\n<!-- 54 -->\n<g id=\"node55\" class=\"node\">\n<title>54</title>\n<path fill=\"#e58139\" stroke=\"#000000\" d=\"M3080,-179.5C3080,-179.5 3005,-179.5 3005,-179.5 2999,-179.5 2993,-173.5 2993,-167.5 2993,-167.5 2993,-123.5 2993,-123.5 2993,-117.5 2999,-111.5 3005,-111.5 3005,-111.5 3080,-111.5 3080,-111.5 3086,-111.5 3092,-117.5 3092,-123.5 3092,-123.5 3092,-167.5 3092,-167.5 3092,-173.5 3086,-179.5 3080,-179.5\"/>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 9</text>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [9, 0]</text>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 50&#45;&gt;54 -->\n<g id=\"edge54\" class=\"edge\">\n<title>50&#45;&gt;54</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2963.8199,-222.8796C2975.6717,-211.2237 2988.5495,-198.5587 3000.3891,-186.9148\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3002.9327,-189.3223 3007.6083,-179.8149 2998.0244,-184.3314 3002.9327,-189.3223\"/>\n</g>\n<!-- 52 -->\n<g id=\"node53\" class=\"node\">\n<title>52</title>\n<path fill=\"#e88e4d\" stroke=\"#000000\" d=\"M2963,-68C2963,-68 2880,-68 2880,-68 2874,-68 2868,-62 2868,-56 2868,-56 2868,-12 2868,-12 2868,-6 2874,0 2880,0 2880,0 2963,0 2963,0 2969,0 2975,-6 2975,-12 2975,-12 2975,-56 2975,-56 2975,-62 2969,-68 2963,-68\"/>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.165</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 11</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [10, 1]</text>\n<text text-anchor=\"middle\" x=\"2921.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 51&#45;&gt;52 -->\n<g id=\"edge52\" class=\"edge\">\n<title>51&#45;&gt;52</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2921.5,-103.9815C2921.5,-95.618 2921.5,-86.7965 2921.5,-78.3409\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"2925.0001,-78.2636 2921.5,-68.2637 2918.0001,-78.2637 2925.0001,-78.2636\"/>\n</g>\n<!-- 53 -->\n<g id=\"node54\" class=\"node\">\n<title>53</title>\n<path fill=\"#eca06a\" stroke=\"#000000\" d=\"M3080,-68C3080,-68 3005,-68 3005,-68 2999,-68 2993,-62 2993,-56 2993,-56 2993,-12 2993,-12 2993,-6 2999,0 3005,0 3005,0 3080,0 3080,0 3086,0 3092,-6 3092,-12 3092,-12 3092,-56 3092,-56 3092,-62 3086,-68 3080,-68\"/>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">gini = 0.32</text>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 5</text>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [4, 1]</text>\n<text text-anchor=\"middle\" x=\"3042.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 51&#45;&gt;53 -->\n<g id=\"edge53\" class=\"edge\">\n<title>51&#45;&gt;53</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M2966.5559,-103.9815C2976.7291,-94.607 2987.5267,-84.6572 2997.6898,-75.2921\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"3000.3349,-77.6141 3005.317,-68.2637 2995.5913,-72.4663 3000.3349,-77.6141\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"gXg_cYdH7t9z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618210527282,"user_tz":-540,"elapsed":936,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"94281ea4-a9d2-473a-d76d-7a60c13a79a2"},"source":["# 정확도 예측하기 (accuracy_score)\n","from sklearn.metrics import accuracy_score\n","\n","model_tr5.score(X_train,y_train), model_tr5.score(X_test,y_test)\n","\n","\n","# 속성 별 상관계수 출력하기\n","# ['pclass', 'sex', 'fare', 'Embarked_C', 'Embarked_S', 'Embarked_Q']\n","\n","model_tr5.feature_importances_\n","#결과를 봤더니만, 성별, 운임의 중요도를 되게 높게 평가하는 듯."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.21355991, 0.60096392, 0.16459946, 0.01043032, 0.0104464 ,\n","       0.        ])"]},"metadata":{"tags":[]},"execution_count":253}]},{"cell_type":"code","metadata":{"id":"xWIMV4wV7ypU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618210527669,"user_tz":-540,"elapsed":909,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"0298015c-ec09-4b05-ebf9-b6ea581303a9"},"source":["# 실제 데이터를 넣어서 예측하기\n","# 여기서 depth leaf 등 조절하며 결과가 잘못 될 수있을지도 확인할 것!!\n","# pclass, sex, age, sibsp, parch, fare\n","dicaprio =[3., 0., 19., True, False, False]\n","winslet = [1., 1., 17., False, False, True]\n","\n","model_tr5.predict_proba([dicaprio,winslet])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.28571429, 0.71428571],\n","       [0.2       , 0.8       ]])"]},"metadata":{"tags":[]},"execution_count":254}]},{"cell_type":"markdown","metadata":{"id":"YOgOAKwTdpTC"},"source":["## 결정 트리 회귀\n","\n","- 분류 결정 트리와 비슷\n","- 각 노드에서 클래스를 예측하는 대신 어떤 값을 예측\n","- 훈련 데이터의 범위 밖의 포인트에 대해 예측을 할 수 없음(모든 다른 트리 기반 회귀 모델도 동일)"]},{"cell_type":"markdown","metadata":{"id":"6lrwCWBzsEgO"},"source":["[DecisionTreeRegressor()](https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeRegressor.html)\n","\n","```\n","DecisionTreeRegressor(criterion, splitter, max_depth, min_samples_split, min_samples_leaf, min_weight_fraction_leaf, max_features, random_state, max_leaf_nodes, min_impurity_decrease, min_impurity_split, presort, ccp_alpha)\n","```\n","- criterion : 분할 품질을 측정하는 기능 (default : gini)\n","- splitter : 각 노드에서 분할을 선택하는 데 사용되는 전략 (default : best)\n","- <font  color=yellow> max_depth : 트리의 최대 깊이 <br>\n","(값이 클수록 모델의 복잡도가 올라간다.) </font>\n","- min_samples_split : 자식 노드를 분할하는데 필요한 최소 샘플 수 (default : 2)\n","- <font  color=yellow> min_samples_leaf : 리프 노드에 있어야 할 최소 샘플 수 (default : 1) </font>\n","- min_weight_fraction_leaf : min_sample_leaf와 같지만 가중치가 부여된 샘플 수에서의 비율\n","- max_features : 각 노드에서 분할에 사용할 특징의 최대 수\n","- random_state : 난수 seed 설정\n","- <font  color=yellow> max_leaf_nodes : 리프 노드의 최대수 </font>\n","- min_impurity_decrease : 최소 불순도\n","- min_impurity_split : 나무 성장을 멈추기 위한 임계치\n","- presort : 데이터 정렬 필요 여부 (버전 0.22부터 사용되지 않음)\n","- ccp_alpha : 최소 비용 복잡성 가지 치기(Minimal Cost-Complexity Pruning) 복잡성 매개변수, 음이아닌 float (버전 0.22의 새로운 기능)\n"]},{"cell_type":"code","metadata":{"id":"eYQHvrJFduQx","colab":{"base_uri":"https://localhost:8080/","height":686},"executionInfo":{"status":"ok","timestamp":1618211599651,"user_tz":-540,"elapsed":1218,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"27225e65-cce4-472d-9b15-1f05753250a1"},"source":["import numpy as np\n","import pandas as pd\n","import os\n","import mglearn\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","ram_prices = pd.read_csv(os.path.join(mglearn.datasets.DATA_PATH, \"ram_price.csv\"))\n","\n","display(ram_prices)\n","\n","# 로그 스케일로 그린 램 가격 동향\n","plt.semilogy(ram_prices.date, ram_prices.price)\n","plt.xlabel(\"year\")             # 년\n","plt.ylabel(\"price ($/Mbyte)\")  # 가격"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>date</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1957.00</td>\n","      <td>4.110418e+08</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1959.00</td>\n","      <td>6.794772e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1960.00</td>\n","      <td>5.242880e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1965.00</td>\n","      <td>2.642412e+06</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1970.00</td>\n","      <td>7.340030e+05</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>328</th>\n","      <td>328</td>\n","      <td>2015.58</td>\n","      <td>4.500000e-03</td>\n","    </tr>\n","    <tr>\n","      <th>329</th>\n","      <td>329</td>\n","      <td>2015.67</td>\n","      <td>4.300000e-03</td>\n","    </tr>\n","    <tr>\n","      <th>330</th>\n","      <td>330</td>\n","      <td>2015.75</td>\n","      <td>4.200000e-03</td>\n","    </tr>\n","    <tr>\n","      <th>331</th>\n","      <td>331</td>\n","      <td>2015.83</td>\n","      <td>3.800000e-03</td>\n","    </tr>\n","    <tr>\n","      <th>332</th>\n","      <td>332</td>\n","      <td>2015.92</td>\n","      <td>3.700000e-03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>333 rows × 3 columns</p>\n","</div>"],"text/plain":["     Unnamed: 0     date         price\n","0             0  1957.00  4.110418e+08\n","1             1  1959.00  6.794772e+07\n","2             2  1960.00  5.242880e+06\n","3             3  1965.00  2.642412e+06\n","4             4  1970.00  7.340030e+05\n","..          ...      ...           ...\n","328         328  2015.58  4.500000e-03\n","329         329  2015.67  4.300000e-03\n","330         330  2015.75  4.200000e-03\n","331         331  2015.83  3.800000e-03\n","332         332  2015.92  3.700000e-03\n","\n","[333 rows x 3 columns]"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'price ($/Mbyte)')"]},"metadata":{"tags":[]},"execution_count":257},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"tx8_th_b1CGC"},"source":["- y 축은 로그 스케일\n","- 로그 스케일로 그리면 약간의 굴곡을 제외하고는 선형적으로 나타나서 비교적 예측하기 쉬움"]},{"cell_type":"code","metadata":{"id":"TxS5S0k9eRIp"},"source":["# 결정트리 회귀 적용\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.linear_model import LinearRegression\n","\n","# 2000년 이전을 훈련 데이터로, 2000년 이후를 테스트 데이터로 만듬\n","\n","X_train = ram_prices['date'][ram_prices['date']<2000][:,np.newaxis]\n","X_test = ram_prices['date'][ram_prices['date']>=2000][:,np.newaxis]\n","\n","y_train = ram_prices['price'][ram_prices['date']<2000][:,np.newaxis]\n","y_test = ram_prices['price'][ram_prices['date']>=2000][:,np.newaxis]\n","\n","#[:,np.newaxis]는 데이터프레임에서 추출한 열을 훈련용,테스트용으로 바로 쓸 때 차원변환용으로 주로 사용한다."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Pawzr3LEBWTw"},"source":["# 전체 예측\n","# X_all = ram_prices['date'][:, np.newaxis]\n","\n","# pred_tree = model_tree.predict(X_all)\n","# pred_lr = model_lr.predict(X_all)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"a4MhIqVkeswL","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"error","timestamp":1618213145320,"user_tz":-540,"elapsed":649,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"010ba809-66cf-424c-faea-4ef912778ad0"},"source":["# 두가지 선형회귀 모델에 대한 결과 비교.\n","\n","pred_tree = model_tree.predict(X_test)\n","pred_lr = model_lr.predict(X_test)\n","\n","pred_tree = np.exp(pred_tree)\n","pred_lr = np.exp(pred_lr)\n","\n","\n","\n","# 선형회귀모델은 선으로 잘 해주는데, 결정트리회귀 모델은 학습된 부분 이외의 부분에선 성과가 개차반인걸 알 수 있다.\n","# 결론 : 선형 모델일때는 가급적 선형회귀 모델을 쓰자. 결정트리회귀 말고,,,"],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-272-d90534d78c12>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mpred_tree\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'DecisionTreeRegressor' object is not callable"]}]},{"cell_type":"code","metadata":{"id":"xH2CYuwIqGBM"},"source":["# 결정트리 시각화\n","from sklearn.tree import export_graphviz\n","import graphviz\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"i5rZcwxVfFoY"},"source":["- 선형 모델은 우리가 아는 대로 직선으로 데이터를 근사\n","- 이 직선은 훈련 데이터와 테스트 데이터에 있는 미세한 굴곡을 매끈하게 근사하여 테스트 데이터(2000년 이후)를 꽤 정확히 예측\n","- 반면에 트리 모델은 훈련 데이터를 완벽하게 예측\n","- 트리의 복잡도에 제한을 두지 않아서 전체 데이터셋을 모두 기억하기 때문\n","- 그러나 모델이 가진 데이터 범위 밖으로 나가면 단순히 마지막 포인트를 이용해 예측하는 게 전부\n","- 트리 모델은 훈련 데이터 밖의 새로운 데이터를 예측할 능력이 없음\n","\n","\n","-  사전 가지치기 방법 중 max_depth, max_leaf_nodes 또는 min_samples_leaf 중 하나만 지정해도 과대적합을 막는 데 충분\n","\n","- 다른 알고리즘들보다 나은 점 : 만들어진 모델을 쉽게 시각화할 수 있음, 데이터의 스케일에 구애받지 않음 (스케이링이 필요없음)\n","\n","- 주요 단점 : 사전 가지치기를 사용함에도 불구하고 과대적합되는 경향이 있어 일반화 성능이 좋지 않음"]}]}