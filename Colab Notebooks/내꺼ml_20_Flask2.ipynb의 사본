{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"내꺼ml_20_Flask2.ipynb의 사본","provenance":[{"file_id":"1yHlfsxK4VDw_913DJD94MFzW3iQk14zE","timestamp":1619398193495}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"g19tsMWUNpCx"},"source":["### 구글드라이브 연동"]},{"cell_type":"code","metadata":{"id":"Ijyjm-4FNqNx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412474110,"user_tz":-540,"elapsed":1321,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"fa64fe2d-5d75-4d96-c630-bad787f1cba6"},"source":["# 구글드라이브 연동\n","from google.colab import drive\n","drive.mount('/gdrive', force_remount=True)\n","\n","# 구글 드라이브 파일 확인\n","!ls '/gdrive/My Drive/temp/'\n","\n","# 반복되는 드라이브 경로 변수화\n","drive_path = '/gdrive/My Drive/temp/'"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Mounted at /gdrive\n"," 매수종목1.txt\t\t   example.docx\t\t   seoul.html\n"," 매수종목2.txt\t\t   exmaple.docx\t\t   stock-data.csv\n"," abalone.txt\t\t   height_weight.txt\t  'stock price.xlsx'\n"," adult.data\t\t   HelloWorld.xlsx\t  'stock valuation.xlsx'\n"," app_clf\t\t   little-char.png\t   test.db.db\n"," auto-mpg.csv\t\t   ml-latest-small\t   test.txt\n"," bmi_500.csv\t\t   movieclassifier\t   titanic.xls\n"," citibike.csv\t\t   population_number.csv   tmdb_5000_credits.csv\n"," creditcard.csv\t\t   ram_price.csv\t   tmdb_5000_movies.csv\n","'투표 결과.csv'\t\t   ratings_small.txt\t   Traffic_Accident_2017.csv\n"," 매수종목.csv\t\t   ratings_test.txt\t   train.csv\n"," database\t\t   ratings_train.txt\t  'UCI HAR Dataset'\n"," data_mine.csv\t\t   sample1.pdf\t\t  'UCI HAR Dataset.zip'\n"," data_population.csv\t   sample2.pdf\t\t   user_id_mean.csv\n"," data_studentlist_en.csv   sample_merge.pdf\t   wine.csv\n"," demo.docx\t\t   sample.xlsx\t\t   주가데이터.xlsx\n"," diabetes.csv\t\t   score.csv\t\t   남북한발전전력량.xlsx\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"d4A5_n2RZOgg"},"source":["* Web 개요\n"," * 사이트와 서비스 (클라이언트와 백엔드)\n"," * REST API\n"," * [HTML 기본 문법](https://developer.mozilla.org/ko/docs/Web/HTML)\n"," * [HTML CSS JavaScript](https://www.w3schools.com/)\n","\n","* Flask 기초\n"," * [Flask 온라인 문서](https://flask.palletsprojects.com/)\n"," * [점프 투 플라스크](https://wikidocs.net/book/4542)\n","\n","* Flask를 이용한 머신러닝 서비스\n","\n","* 머신러닝 서비스 방법들"]},{"cell_type":"markdown","metadata":{"id":"iUXDmoCW3GAy"},"source":["## 영화 리뷰 분류기 웹 애플리케이션"]},{"cell_type":"markdown","metadata":{"id":"7ypY_gftn5qk"},"source":["### 프로젝트 폴더 및 모델 준비"]},{"cell_type":"code","metadata":{"id":"fwRCFkLVeTJi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412479076,"user_tz":-540,"elapsed":1242,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"95a5bc7f-dfb8-481d-f9e0-0b58354eb804"},"source":["!mkdir movieclassifier\n","!mkdir movieclassifier/templates\n","!mkdir movieclassifier/static\n","!pwd"],"execution_count":12,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"bJawjrhDe85v","executionInfo":{"status":"ok","timestamp":1619412482946,"user_tz":-540,"elapsed":775,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"730d8b5d-a9be-41ab-bc7c-b09b024eb465"},"source":["# 작업위치 변경\n","\n","import os\n","os.chdir('movieclassifier')\n","os.getcwd()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/content/movieclassifier'"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"lYPfXcpLmrO3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412514827,"user_tz":-540,"elapsed":4130,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"3c586fab-9019-476d-ee3d-e574b4cc6837"},"source":["# 모델 복사\n","src_path = drive_path + 'movieclassifier/.'\n","!ls '$src_path'\n","!cp -r '$src_path' ."],"execution_count":14,"outputs":[{"output_type":"stream","text":["pkl_objects  vectorizer.py\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"El4nnKarpODj"},"source":["모델 테스트"]},{"cell_type":"code","metadata":{"id":"RUjz2v7Gawlv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412557889,"user_tz":-540,"elapsed":2069,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"d46d3ff5-1da9-4c76-d894-861e3a6f5410"},"source":["import pickle\n","import re\n","import os\n","from vectorizer import vect\n","\n","clf = pickle.load(open(os.path.join('pkl_objects', 'classifier.pkl'), 'rb'))"],"execution_count":15,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator SGDClassifier from version 0.23.2 when using version 0.22.2.post1. This might lead to breaking code or invalid results. Use at your own risk.\n","  UserWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6UMp7VH1awlw","executionInfo":{"status":"ok","timestamp":1619412617259,"user_tz":-540,"elapsed":831,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8635d253-49a3-4973-ab5f-d72153ce13a1"},"source":["import numpy as np\n","label = {0:'음성', 1:'양성'}\n","\n","example = [\"I love this movie. It's amazing.\"]\n","X = vect.transform(example)\n","print('예측: %s\\n확률: %.2f%%' %\\\n","      (label[clf.predict(X)[0]], \n","       np.max(clf.predict_proba(X))*100))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["예측: 양성\n","확률: 95.55%\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"1tr9LMOmomUI"},"source":["### SQLite 데이터베이스 설정"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"-GdK2KVwozj5","executionInfo":{"status":"ok","timestamp":1619412620158,"user_tz":-540,"elapsed":833,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"19d3c3c9-6172-4433-af08-edd0c0284905"},"source":["os.getcwd()"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/content/movieclassifier'"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"9cZe4L0tawlx","executionInfo":{"status":"ok","timestamp":1619412620595,"user_tz":-540,"elapsed":797,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["import sqlite3\n","import os\n","\n","conn = sqlite3.connect('reviews.sqlite')\n","c = conn.cursor()\n","\n","c.execute('DROP TABLE IF EXISTS review_db')\n","c.execute('CREATE TABLE review_db (review TEXT, sentiment INTEGER, date TEXT)')\n","\n","example1 = 'I love this movie'\n","c.execute(\"INSERT INTO review_db (review, sentiment, date) VALUES (?, ?, DATETIME('now'))\", (example1, 1))\n","\n","example2 = 'I disliked this movie'\n","c.execute(\"INSERT INTO review_db (review, sentiment, date) VALUES (?, ?, DATETIME('now'))\", (example2, 0))\n","\n","conn.commit()\n","conn.close()"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"Mbe3UZgfawlx","executionInfo":{"status":"ok","timestamp":1619412621694,"user_tz":-540,"elapsed":731,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["conn = sqlite3.connect('reviews.sqlite')\n","c = conn.cursor()\n","\n","c.execute(\"SELECT * FROM review_db WHERE date BETWEEN '2017-01-01 10:10:10' AND DATETIME('now')\")\n","results = c.fetchall()\n","\n","conn.close()"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"lM2Rkk83o3Tw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412622643,"user_tz":-540,"elapsed":1096,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"b1c07168-d899-48cd-d3b4-2fadefe75b86"},"source":["print(results)"],"execution_count":21,"outputs":[{"output_type":"stream","text":["[('I love this movie', 1, '2021-04-26 04:50:18'), ('I disliked this movie', 0, '2021-04-26 04:50:18')]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WxAQjpwurytR"},"source":["### 애플리케이션 구현"]},{"cell_type":"markdown","metadata":{"id":"z6DKpOOF5Xkz"},"source":["* 구글 코랩은 내 컴퓨터가 아닌 가상 컴퓨터의 로컬 서버에서 작동하기 때문에, 구글 코랩에서 저 코드를 실행한 서버의 경로를 알아야 한다.\n"]},{"cell_type":"code","metadata":{"id":"RMdAg_ZG4xIy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412662362,"user_tz":-540,"elapsed":3567,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"ea6198e6-23d5-4fa1-b250-6bded4364cf4"},"source":["# 코렙의 경우\n","!pip install flask-ngrok"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Collecting flask-ngrok\n","  Downloading https://files.pythonhosted.org/packages/af/6c/f54cb686ad1129e27d125d182f90f52b32f284e6c8df58c1bae54fa1adbc/flask_ngrok-0.0.25-py3-none-any.whl\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from flask-ngrok) (2.23.0)\n","Requirement already satisfied: Flask>=0.8 in /usr/local/lib/python3.7/dist-packages (from flask-ngrok) (1.1.2)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->flask-ngrok) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->flask-ngrok) (2020.12.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->flask-ngrok) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->flask-ngrok) (3.0.4)\n","Requirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.7/dist-packages (from Flask>=0.8->flask-ngrok) (1.0.1)\n","Requirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.7/dist-packages (from Flask>=0.8->flask-ngrok) (1.1.0)\n","Requirement already satisfied: click>=5.1 in /usr/local/lib/python3.7/dist-packages (from Flask>=0.8->flask-ngrok) (7.1.2)\n","Requirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.7/dist-packages (from Flask>=0.8->flask-ngrok) (2.11.3)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2>=2.10.1->Flask>=0.8->flask-ngrok) (1.1.1)\n","Installing collected packages: flask-ngrok\n","Successfully installed flask-ngrok-0.0.25\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EcdH18OosI6m"},"source":["Flask 테스트"]},{"cell_type":"code","metadata":{"id":"5fzOUVvP42iS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619399786145,"user_tz":-540,"elapsed":2368,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"32ad6b06-c58f-4035-be6f-3fc7c9dad97e"},"source":["from flask import Flask\n","from flask_ngrok import run_with_ngrok\n","\n","app = Flask(__name__)\n","run_with_ngrok(app)\n","\n","@app.route('/')\n","def home():\n","  return \"Hello Flask!\"\n","\n","if __name__ == '__main__':\n","  app.run()\n","\n","# io로 끝나는 임시 주소를 클릭하면, 원하는 HTML 결과를 확인할 수 있음"],"execution_count":12,"outputs":[{"output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"],"name":"stdout"},{"output_type":"stream","text":[" * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"uqnFGH2T4_LR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619412668298,"user_tz":-540,"elapsed":3271,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8474b2d3-d3c2-4fd1-9463-528ca13094f5"},"source":["# WTForms 라이브러리 설치\n","!pip install wtforms"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: wtforms in /usr/local/lib/python3.7/dist-packages (2.3.3)\n","Requirement already satisfied: MarkupSafe in /usr/local/lib/python3.7/dist-packages (from wtforms) (1.1.1)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EXXt7JNmvwEA"},"source":["#### reviewform.html\n","\n","* 애플리케이션의 시작 웹 페이지"]},{"cell_type":"code","metadata":{"id":"xfoWYfymyCvm","executionInfo":{"status":"ok","timestamp":1619404132799,"user_tz":-540,"elapsed":846,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["\n","#   {% form \"_formhelpers.html\" import render_field %}  << 파이썬 코드\n","\n","html = '''<!DOCTYPE html>\n","<html>\n","<head>\n","  <title>영화 분류</title>\n","</head>\n","<body>\n","  <h2>영화에 대한 리뷰를 작성해 주세요.</h2>\n","\n","  {% form \"_formhelpers.html\" import render_field %}\n","\n","  <form method = post, action = \" /results\">\n","   \n","    <dl>\n","      {{render_field( form,moviereview, cols='30', rows='10')}}\n","    </dl>\n","    <div>\n","      <input  type=submit value =\"리뷰 입력\" name=\"submit_btn\">\n","\n","\n","</body>\n","</html>'''\n","\n","f = open(\"./templates/reviewform.html\", \"w\")\n","f.write(html)\n","f.close()"],"execution_count":22,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gbqLggsmy-l1"},"source":["#### results.html\n","\n","* 입력된 리뷰와 예측 결과를 출력"]},{"cell_type":"code","metadata":{"id":"Dcm9BybxzJ_S","executionInfo":{"status":"ok","timestamp":1619404161686,"user_tz":-540,"elapsed":842,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["## TIP\n","## 변수 없이 화면 다 써놓고 중간중간을 변수로 바꿔주는 코딩 과정이 필요\n","# 결과 화면 출력 창\n","\n","html = '''\n","<!DOCTYPE html>\n","<html>\n","<head>\n","  <title>영화 분류</title>\n","\t<link rel=\"stylesheet\" href=\"/static/style.css\">\n","</head>\n","<body>\n","\n","  <h3>입력한 영화 리뷰:</h3>\n","  <div>{{contents}}</div>\n","\n","  <h3>예측:</h3>\n","  <div>이 영화 리뷰는 <strong>{{prediction}}</strong>적입니다.\n","    (probability: {{ probability}%}.</div>\n","\n","  <div id='button'>\n","      <form action=\"/thanks\" method=\"post\">\n","        <input type=submit value='맞음' name='feedback_button'>\n","      <input type=submit value='틀림' name='feedback_button'>\n","      <input type=hidden value='negative' name='prediction'>\n","      <input type=hidden value='jflisjfisjiflsjflijsalfsjaf\n","safs\n","afe\n","sa\n","efs\n","f\n","s' name='review'>\n","      </form>\n","  </div>\n","\n","  <div id='button'>\n","      <form action=\"/\">\n","        <input type=submit value='리뷰 추가 입력'>\n","      </form>\n","  </div>\n","\n","</body>\n","</html>'''\n","\n","f = open(\"./templates/results.html\", \"w\")\n","f.write(html)\n","f.close()"],"execution_count":24,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0Wf43fu-0fN4"},"source":["#### thanks.html\n","\n","* result 페이지에서 '맞음' 또는 '틀림' 피드백을 준 사용자에게 감사의 메세지를 표시하는 페이지\n","\n","* 리뷰 추가 입력 버튼을 넣어서 초기 웹 페이지로 다시 돌아갈 수 있도록 함"]},{"cell_type":"code","metadata":{"id":"GXUQwAiM1CuV"},"source":["html = '''<!DOCTYPE html>\n","<html>\n","<head>\n","  <title>영화 분류</title>\n","</head>\n","<body>\n","\n","  <h3>피드벡을 보내 주셔서 감사합니다!</h3>\n","\n","  <div id='button'>\n","      <form action=\"/\">\n","        <input type=submit value='리뷰 추가 입력'>\n","      </form>\n","  </div>\n","\n","</body>\n","</html>'''\n","\n","f = open(\"./templates/thanks.html\", \"w\")\n","f.write(html)\n","f.close()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"woWwVEpG3j7R"},"source":["#### _formhelpers.html\n","\n","* 텍스트 필드를 화면에 출력하기 위해 Jinja2 템플릿 엔진을 사용하여 파일 매크로를 작성"]},{"cell_type":"code","metadata":{"id":"md0s_6qb31GM","executionInfo":{"status":"ok","timestamp":1619404161687,"user_tz":-540,"elapsed":840,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["html = '''{% macro render_field(field) %}\n","  <dt>{{ field.label }}\n","  <dd>{{ field(**kwargs)|safe }}\n","  {% if field.errors %}\n","    <ul class=errors>\n","    {% for error in field.errors %}\n","      <li>{{ error }}</li>\n","    {% endfor %}\n","    </ul>\n","  {% endif %}\n","  </dd>\n","{% endmacro %}'''\n","\n","f = open(\"./templates/_formhelpers.html\", \"w\")\n","f.write(html)\n","f.close()"],"execution_count":25,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MHWM0F7h1f-8"},"source":["#### style.css\n","\n","* 웹 애플리케이션의 콘텐츠 폭을 600픽셀로 제한\n","* 아이디가 button인 div 안에 들어 있는 '맞음'과 '틀림' 버튼을 20필셀 아래로 내림"]},{"cell_type":"code","metadata":{"id":"8tiNRbQe18Pg"},"source":["css = '''\n","'''\n","\n","f = open(\"./static/style.css\", \"w\")\n","f.write(css)\n","f.close()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"d0VM8N704TUd"},"source":["#### app.py\n","\n","* Flask 웹 애플리케이션을 구동하기 위한 핵심 코드"]},{"cell_type":"code","metadata":{"id":"wtQIVoJsBWQQ","executionInfo":{"status":"ok","timestamp":1619413505904,"user_tz":-540,"elapsed":1256,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["html = '''from flask import Flask, render_template, request\n","from wtforms import Form, TextAreaField, validators\n","import pickle\n","import sqlite3\n","import os\n","import numpy as np\n","\n","from vectorizer import vect\n","\n","app = Flask(__name__)\n","\n","\n","# 모델 로드\n","# cur_dir = os.path.dirname(__file__)\n","# 코렙 실행의 경우 실행 위치를 명시\n","cur_dir = os.getcwd() + '/'\n","clf = pickle.load(open(os.path.join(cur_dir,\n","                 'pkl_objects',\n","                 'classifier.pkl'), 'rb'))\n","db = os.path.join(cur_dir, 'reviews.sqlite')\n","\n","\n","def classify(document):\n","    X = vect.transform([document])\n","    y = clf.predict(X)[0]\n","    proba = np.max(clf.predict_proba(X))\n","    label = {0:'negative', 1:'positive'}\n","    return label[y], proba\n","\n","\n","def train(document, y):\n","    pass\n","\n","def sqlite_entry(path, document, y):\n","    conn = sqlite3.connect(path)\n","    c = conn.cursor()\n","    sql = \"INSERT INTO review_db (review, sentiment, date) VALUES (?, ?, DATETIME('now'))\"\n","    c.execute(sql, (document, y))\n","    conn.commit()\n","    conn.close()\n","\n","# Flask\n","# 15자 이상 입력하도록 제한된 폼\n","class ReviewForm(Form):\n","  moviereview = TextAreaField('', [validators.DataRequired(), validators.length(min=15)] )\n","\n","@app.route('/')\n","def index():\n","  form = ReviewForm(request.form)\n","  return render_template('reviewform.html', form=form)\n","\n","\n","@app.route('/results', methods=['POST'])\n","def results():\n","  form = ReviewForm(request.form)\n","  if request.method == 'POST' and form.validate():\n","    review = request.form['moviereview']\n","    y, proba = classify(review)\n","    return render_template('results.html', \n","                           content=review, \n","                           prediction=y, \n","                           probability=round(proba * 100, 2) )\n","\n","  return render_template('reviewform.html', form=form)\n","\n","\n","@app.route('/thanks', methods=['POST'])\n","def feedback():\n","  feedback = request.form['feedback_button']\n","  review = request.form['review']\n","  prediction = request.form['prediction']\n","  \n","  inv_label = {'negative':0, 'positive':1}\n","  sqlite_entry(db, review, inv_label[prediction])\n","  return render_template('thanks.html')\n","  \n","\n","if __name__ == '__main__':\n","    app.run()\n","'''\n","\n","f = open(\"./app.py\", \"w\")\n","f.write(html)\n","f.close()"],"execution_count":24,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FXfgMFAIs4B8"},"source":["### Flask Server"]},{"cell_type":"markdown","metadata":{"id":"7J_Vu2S6sOb_"},"source":["모델에 필요한 함수 준비"]},{"cell_type":"code","metadata":{"id":"mD7-d8NGsnFH","executionInfo":{"status":"ok","timestamp":1619403778508,"user_tz":-540,"elapsed":655,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["import sqlite3\n","import os\n","import numpy as np\n","\n","from vectorizer import vect\n","\n","\n","def classify(document):\n","  X = vect.transform([document])  # 학습 데이터\n","  y = clf.predict(X)[0]           # 예측치.. 왜 [0]이지? 디카프리오의 예시를 생각해봐라.\n","  proba = clf.predict_proba(X)    # 확률로 나옴\n","  label = {0:'negative',1:'positive'}\n","  return label[y],proba\n","\n","def train(document, y):\n","    pass\n","\n","def sqlite_entry(path, document, y):\n","  conn = sqlite3.connect(path)\n","  c = conn.cursor()\n","  sql = ''"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"bpdfvctBs05M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619404528760,"user_tz":-540,"elapsed":363056,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"439063f5-3329-44b0-cd3c-105d45048216"},"source":["from flask import Flask, render_template, request\n","from wtforms import Form, TextAreaField, validators\n","import pickle\n","from flask_ngrok import run_with_ngrok\n","\n","app = Flask(__name__)\n","run_with_ngrok(app)\n","\n","# 모델 로드\n","# cur_dir = os.path.dirname(__file__)\n","# 코렙 실행의 경우 실행 위치를 명시\n","cur_dir = os.getcwd() + '/'\n","clf = pickle.load(open(os.path.join(cur_dir,\n","                 'pkl_objects',\n","                 'classifier.pkl'), 'rb'))\n","db = os.path.join(cur_dir, 'reviews.sqlite')\n","\n","# Flask\n","# 15자 이상 입력하도록 제한된 폼\n","class ReviewForm(Form):\n","  moviereview = TextAreaField('', [validators.DataRequired(), validators.length(min=15)] )\n","\n","@app.route('/')\n","def index():\n","  form = ReviewForm(request.form)\n","  return render_template('reviewform.html', form=form)\n","\n","\n","@app.route('/results', methods=['POST'])\n","def results():\n","  form = ReviewForm(request.form)\n","  if request.method == 'POST' and form.validate():\n","    review = request.form['moviereview']\n","    y, proba = classify(review)\n","    return render_template('results.html', \n","                           content=review, \n","                           prediction=y, \n","                           probability=round(proba * 100, 2) )\n","\n","  return render_template('reviewform.html', form=form)\n","  \n","@app.route('/thanks',method=['POST'])\n","def feedback():\n","  feedback = request.form['feedback_button']\n","  review = request.form['review']\n","  prediction = request.form['prediction']\n","  sqlite_entry(db, review, pr)\n","\n","\n","\n","if __name__ == '__main__':\n","    app.run()\n"],"execution_count":27,"outputs":[{"output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator SGDClassifier from version 0.23.2 when using version 0.22.2.post1. This might lead to breaking code or invalid results. Use at your own risk.\n","  UserWarning)\n"," * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"],"name":"stderr"},{"output_type":"stream","text":[" * Running on http://26704a9f4db1.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n"],"name":"stdout"},{"output_type":"stream","text":["[2021-04-26 02:29:28,135] ERROR in app: Exception on / [GET]\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 2447, in wsgi_app\n","    response = self.full_dispatch_request()\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1952, in full_dispatch_request\n","    rv = self.handle_user_exception(e)\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1821, in handle_user_exception\n","    reraise(exc_type, exc_value, tb)\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/_compat.py\", line 39, in reraise\n","    raise value\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1950, in full_dispatch_request\n","    rv = self.dispatch_request()\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1936, in dispatch_request\n","    return self.view_functions[rule.endpoint](**req.view_args)\n","  File \"<ipython-input-27-cc131d492852>\", line 26, in index\n","    return render_template('reviewform.html', form=form)\n","  File \"/usr/local/lib/python3.7/dist-packages/flask/templating.py\", line 138, in render_template\n","    ctx.app.jinja_env.get_or_select_template(template_name_or_list),\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/environment.py\", line 930, in get_or_select_template\n","    return self.get_template(template_name_or_list, parent, globals)\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/environment.py\", line 883, in get_template\n","    return self._load_template(name, self.make_globals(globals))\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/environment.py\", line 857, in _load_template\n","    template = self.loader.load(self, name, globals)\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/loaders.py\", line 127, in load\n","    code = environment.compile(source, name, filename)\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/environment.py\", line 638, in compile\n","    self.handle_exception(source=source_hint)\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/environment.py\", line 832, in handle_exception\n","    reraise(*rewrite_traceback_stack(source=source))\n","  File \"/usr/local/lib/python3.7/dist-packages/jinja2/_compat.py\", line 28, in reraise\n","    raise value.with_traceback(tb)\n","  File \"/content/movieclassifier/templates/reviewform.html\", line 9, in template\n","    {% form \"_formhelpers.html\" import render_field %}\n","jinja2.exceptions.TemplateSyntaxError: Encountered unknown tag 'form'.\n","127.0.0.1 - - [26/Apr/2021 02:29:28] \"\u001b[35m\u001b[1mGET / HTTP/1.1\u001b[0m\" 500 -\n","127.0.0.1 - - [26/Apr/2021 02:29:28] \"\u001b[33mGET /favicon.ico HTTP/1.1\u001b[0m\" 404 -\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"iPnNsLtTB_wm"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"an1tucfKDIN8"},"source":["## 웹 애플리케이션 배포"]},{"cell_type":"code","metadata":{"id":"59ukPztakSmp"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gaR-LPYjDP_r","colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"status":"ok","timestamp":1619413514390,"user_tz":-540,"elapsed":875,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"361b47b3-ef14-4272-c52e-db739b87d72a"},"source":["drive_path"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/gdrive/My Drive/temp/'"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"5BAjrfRtDhGy","executionInfo":{"status":"ok","timestamp":1619413514391,"user_tz":-540,"elapsed":555,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["app_path = drive_path + 'app_clf'"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"id":"QEa7gBkfDYeq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619413514840,"user_tz":-540,"elapsed":620,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"d629551f-f0e5-4a47-c061-b63760343b60"},"source":["!mkdir '$app_path'"],"execution_count":27,"outputs":[{"output_type":"stream","text":["mkdir: cannot create directory ‘/gdrive/My Drive/temp/app_clf’: File exists\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6qhZDyehEkL-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619413520805,"user_tz":-540,"elapsed":831,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"aa0b0f48-31aa-4ef4-b6b2-db1e7a9e3233"},"source":["!pwd"],"execution_count":28,"outputs":[{"output_type":"stream","text":["/content/movieclassifier\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"t9vXeHEtDMyT","executionInfo":{"status":"ok","timestamp":1619413522395,"user_tz":-540,"elapsed":1030,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["# 구글 드라이브에 복사하는 방법\n","app_path = drive_path + 'app_clf'\n","!cp -r . '$app_path'"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"R6gprNXNGeVi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619413580274,"user_tz":-540,"elapsed":965,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"71c1e928-f58f-4162-bb5a-5dbecbad0eda"},"source":["# 폴더 압축하여 다운받는 방법 #cfvz는 옵션 이름.\n","!tar cfvz movieclassifier.tgz ."],"execution_count":30,"outputs":[{"output_type":"stream","text":["./\n","./pkl_objects/\n","./pkl_objects/stopwords.pkl\n","./pkl_objects/classifier.pkl\n","./reviews.sqlite\n","./vectorizer.py\n","./__pycache__/\n","./__pycache__/vectorizer.cpython-37.pyc\n","./app.py\n","./templates/\n","./movieclassifier.tgz\n","tar: ./movieclassifier.tgz: file changed as we read it\n","./static/\n","tar: .: file changed as we read it\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"q2DVJaIunN04"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"i5RmpemZHut4"},"source":["파이썬 웹 애플리케이션 호스팅\n","\n","* https://www.pythonanywhere.com/\n","\n","  1. 비기너 계정생성\n","  > 상단 메뉴 Pricing & signup에서 Create a Beginner account\n","  2. 새로운 웹 애플리케이션 생성 : +Add a new web app\n","   -  Select a Python Web framework 에서 Flask를 선택  \n","   - Select a Python version 에서 Python 3.7 (Flask 1.1.1) 선택\n","   - Quickstart new Flask project 에서 경로의 마지막 부분을 movieclassifier/app.py로 수정\n","  \n","  3. 파일 업로드\n","   - Source code: 오른쪽의 'Go to directory'를 선택 또는 상단의 File 탭으로 이동\n","   - 다운받은 movieclassifier.tgz 파일을 업로드\n","\n","   4. 압축풀기\n","    - File 탭의 Open Bash console here 선택하여 명령창 오픈\n","    ```\n","    tar xfvz movieclassifier.tgz \n","    ```\n","  5. 환경설정 : 의존 라이브러리 설치\n","    ```\n","    pip install --user sklearn --update scikit-learn=0.23.2\n","    ```\n","\n","  6. 웹 애플리케이션 실행\n","   - Web 탭으로 이동하여 Reload <username>.pythonanywhere.com 선택하여 변경 사항을 반영\n","   - Configuration for <username>.pythonanywhere.com 을 선택하여 사이트 접속"]},{"cell_type":"markdown","metadata":{"id":"6QfVTdqWlE9n"},"source":["### 파이썬 requirements.txt\n","\n","파이썬 환경에서 자신이 사용하고자 하는 파이썬 패키지를 일일히 설치해주는 수고를 줄이기 위해 requirements.txt을 사용하면 손쉽게 패키지를 설치할 수 있다.\n","\n","\n","\n","#### requirements.txt 만들기\n","\n","자신의 구성 환경을 requirements.txt로 만들려면, 다음과 같은 명령어를 실행한다.\n","```\n","pip freeze > requirements.txt\n","```\n","사용자 디렉토리에 설치된 패키지만을 가져오려면 --user 옵션을 사용하면 된다.\n","```\n","pip freeze --user > requirements.txt\n","```\n","\n","\n","#### requirements.txt로 패키지 설치\n","\n","requirements.txt로 지정한 환경에 패키치를 설치하려면, 다음과 같은 명령어를 실행한다.\n","```\n","pip install -r requirements.txt\n","``` "]},{"cell_type":"code","metadata":{"id":"mpdzpdo3lSiA","executionInfo":{"status":"ok","timestamp":1619413776251,"user_tz":-540,"elapsed":1304,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}}},"source":["pip freeze > requirements.txt"],"execution_count":31,"outputs":[]}]}