{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"내꺼py_08-데이터베이스.ipynb의 사본","provenance":[{"file_id":"1YP9-hwUDugGGRdZ6B4mX00UND8Nh2qrH","timestamp":1616983443189}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"fPArGC33tvBR"},"source":["### 구글드라이브 연동"]},{"cell_type":"code","metadata":{"id":"g2uUzVE1ttHS"},"source":["# 구글드라이브 연동\n","from google.colab import drive\n","drive.mount('/gdrive', force_remount=True)\n","\n","# 구글 드라이브 파일 확인\n","!ls '/gdrive/My Drive/temp/'\n","\n","# 반복되는 드라이브 경로 변수화\n","drive_path = '/gdrive/My Drive/temp/'"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IiEWjYE2DaJI"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"1zvCgl-8Bt3I"},"source":["# SQLiteStudio\n","\n","* SQL 개발환경\n","* 설치링크 https://sqlitestudio.pl/"]},{"cell_type":"code","metadata":{"id":"eIl8GnviA4FI"},"source":["# # temp 하위 폴더에 데이터 넣고 쓸 수 있다.\n","# # 타건 연습입니다.\n","\n","# select \"hello, world\";\n","# select 1 + 2;\n","# select code, name from country order by code, name;\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qOWCuXegsZO3"},"source":["# SQLite\n","SQLite는 별도의 DB 서버가 필요없이 DB 파일에 기초하여 데이타베이스 처리를 구현한 Embedded SQL DB 엔진\n","\n","SQLite는 기본적으로 SQLite DB 엔진과 \"sqlite3\" 라는 Command line tool 을 갖음"]},{"cell_type":"markdown","metadata":{"id":"OsKCinCd4PMI"},"source":["- 테이블 : 행과 열을 가진 2차원 데이터 (엑셀의 시트)\n","- 행 : 레고드(또는 로우), 1개 이상의 열로 구성\n","- 열 : 컬럼(또는 필드)"]},{"cell_type":"markdown","metadata":{"id":"kHn6MwZ2ukZ_"},"source":["## pysqlite\n","pysqlite 은 Python 2.5 이상에서 기본적으로 내장\n","\n","파이썬 자체로 매우 어려움. 왜 ? 오타검사가 전혀 안되거든. 따라서 코드메이킹은 다른 싸이트를 이용할거다. 그것이 SQLiteStudio이다."]},{"cell_type":"code","metadata":{"id":"FKp6aU3EIYsc","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1617107552678,"user_tz":-540,"elapsed":1131,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8aff4a00-c29f-44d6-a170-5131b9b90cff"},"source":["import sqlite3\n","sqlite3.version"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'2.6.0'"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"bYPisM-vsXdW"},"source":["## SQLite 쿼리\n","DB Connection이 연결되면 Connection 객체가 리턴되는데, 이 객체로부터 커서를 생성하고 커서 객체의 execute() 명령을 실행하여 SQL 쿼리를 실행"]},{"cell_type":"code","metadata":{"id":"LZkOaUBoV54o"},"source":["# drive_path = r\"c:/Apps/\"\n","\n","# 객체가 리턴? 커서 객체는 실행명령을 실행하면 SQL 실행해줌\n","# 밑에 있는 코드 틀은 계속 갖다 쓰자. sqlite3 실행하는 기본 코드이기 때문이지."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"NDQH8G4nX4YR","executionInfo":{"status":"ok","timestamp":1617107552680,"user_tz":-540,"elapsed":1126,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"eb1e6dc2-568e-4505-c21e-817172a22247"},"source":["import os\n","\n","os.getcwd()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/content'"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"iQMmuQkyu9eZ","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"error","timestamp":1617108003793,"user_tz":-540,"elapsed":662,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"b8617cb9-7cb3-4fdd-a088-10edc29a9e7c"},"source":["import sqlite3\n","import os\n","\n","os.chdir(\"C:\")\n","\n","# dbpath = r\"C:\\Users\\shimh\\OneDrive\\바탕 화면\\sqlitestudio-3.3.2\\world.db\"\n","# SQLite DB 연결\n","conn = sqlite3.connect( dbpath )  #커넥트 메서드를 통해 경로의 db파일 불러오기\n","# Connection 으로부터 Cursor 생성. 아마 마우스를 올려놓으라는 말인거 같음.\n","cur = conn.cursor()\n","\n","# SQL 쿼리 실행\n","# sql = \"select * from city\"\n","# cur.execute(sql)              # << 여기서 오류 발생.\n","# 데이타 Fetch  -- \n","rows = cur.fetchall()\n","for row in rows:\n","    print(row)\n","# Connection 닫기\n","conn.close()"],"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-8586d27fecd8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mchdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"C:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# dbpath = r\"C:\\Users\\shimh\\OneDrive\\바탕 화면\\sqlitestudio-3.3.2\\world.db\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'C:'"]}]},{"cell_type":"markdown","metadata":{"id":"ikO0QOPswFMW"},"source":["## Parameterized Query\n","SQL 문장에 동적으로 컬럼 데이타값을 집어 넣어야 하는 경우"]},{"cell_type":"code","metadata":{"id":"_yjPCh-wwEmC","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"error","timestamp":1617107553008,"user_tz":-540,"elapsed":1444,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"d9e791be-954c-4b82-d539-f890f1cdf9c3"},"source":["conn = sqlite3.connect( dbpath )\n","cur = conn.cursor()\n"," \n","# cur.execute(\"select * from city, country where city.CountryCode = country.Code limit 5\")\n","# cur.execute(\"select code, population from country limit 5\")\n"," \n","\n","sql = \"select * from country where continent=? or region=? limit 10\"\n","cur.execute(sql, ('Asia', 'Middle East'))                                             # 마치 퍼즐 조립 하듯이. ? 부분에 끼워넣는다.\n","\n","# 데이타 Fetch  -- \n","rows = cur.fetchall()\n","for row in rows:\n","    print(row)\n"," \n","# Connection 닫기\n","conn.close()"],"execution_count":null,"outputs":[{"output_type":"error","ename":"OperationalError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mOperationalError\u001b[0m                          Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-ff9b705bac05>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0msql\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"select * from country where continent=? or region=? limit 10\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mcur\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'Asia'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Middle East'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m                                             \u001b[0;31m# 마치 퍼즐 조립 하듯이. ? 부분에 끼워넣는다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# 데이타 Fetch  --\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mOperationalError\u001b[0m: no such table: country"]}]},{"cell_type":"code","metadata":{"id":"FgONzUVjwSvg"},"source":["# Named Placeholder 방식 \n","# DIctionary 방식으로도 사용 가능합니다.\n","\n","conn = sqlite3.connect( dbpath )\n","\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2tZjg3YlyQpm"},"source":["## DML (INSERT, UPDATE, DELETE)\n","SQL에서 데이타 조작하는 INSERT, UPDATE, DELETE 문을 DML(Data Manipulation Language)이라 한다.\n","\n","> 단, DML은 리턴되는 데이타가 없으므로 fetch 를 사용하지 않는다.\n","\n","디폴트로 Autocommit 이 아니기 때문에, execute() 로 DML 문장을 실행한 후에, Connection 객체의 commit() 메서드를 호출해야 한다."]},{"cell_type":"code","metadata":{"id":"zUCAZgkOylMM"},"source":["# Teble 생성\n","# a INT, b TEXT, c TEXT\n","# 데이터를 추가 할때는 commit을 쓴다. 그리고 close까지 해줘야 함.\n","# drop table test2 \n","\n","\n","conn = sqlite3.connect( dbpath )\n","cur = conn.cursor()\n","sql = \"drop table IF EXISTS test2\"\n","cur.execute(sql)\n","sql =\"\"\"create table test2 (\n","    a INT,\n","    b TEXT,\n","    c TEXT\n","    );\n","    \"\"\" \n","cur.execute(sql)\n","conn.commit()           # <<< 원본 파일에 반영. SAVE 기능과 같다.\n","conn.close()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UPW4-f_nzpxF"},"source":["# Data 추가\n","# a=1, b='This' c='Right here' \n","# parameter 방식도 가능\n","\n","conn = sqlite3.connect( dbpath )\n","cur = conn.cursor()\n","# sql = \"\"\"insert into test2 values(1,'This','Right here');\n","#     \"\"\" \n","\n","sql = 'insert into test2 (a,b,c) values(?,?,?)'\n","cur.execute(sql,(1, 'This', 'Right here'))\n","cur.execute(sql,(2, 'aa', 'Right here'))\n","cur.execute(sql,(3, 'bb', 'Right here'))\n","\n","conn.commit()           #<<< 원본 파일에 반영. SAVE 기능과 같다.\n","conn.close()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FibtKxvZ0rQU"},"source":["# 데이터 검색(추출)\n","# 테이블이 잘 만들어졌는지 알 수 있는 방법? 진짜 검색해보기 전까진 알 수 없다.\n","# 이 부분엔 commit이 없어도 됨.\n","\n","conn = sqlite3.connect( dbpath )\n","cur = conn.cursor()\n","sql = \"select * from test2\"\n","cur.execute(sql)\n","\n","rows = cur.fetchall()\n","for row in rows:\n","    print(row)\n"," \n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zURlY75J1Tgn"},"source":["# Teble 삭제\n","conn = sqlite3.connect( dbpath )\n","cur = conn.cursor()\n","sql =\"\"\"DROP table test2 \n","    \"\"\" \n","cur.execute(sql)\n","conn.commit()            #<<< 원본 파일에 반영. SAVE 기능과 같다.\n","conn.close()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ISiBgZdd1gcY"},"source":["# 생성, 추가, 검색, 삭제를 한번에 해보자.\n","conn = sqlite3.connect( dbpath )\n","\n","cur = conn.cursor()\n","\n","\n","# sql 부분은 sqlitestudio에서 작업해온다음 옮겨오자.\n","# IF EXISTS? 있으면 드랍해라. 없으면 무시해라.\n","sql = \"\"\"\n","DROP TABLE IF EXISTS test2;   \n","CREATE TABLE test2 (\n","  a INT,\n","  b TEXT,\n","  c TEXT\n",");\n","\n","INSERT INTO test2 VALUES (1, 'This', 'Right here');\n","INSERT INTO test2 (b, c) VALUES ('This', 'Over here');\n","\"\"\"\n","cur.executescript(sql)                  #!!!!!!!!!!!한번에 많은 execute를 실행 = execute script를 사용한다.\n","conn.commit()\n","\n","\n","sql = \"SELECT * from test2\"\n","cur.execute(sql)\n","rows = cur.fetchall()\n","for row in rows:\n","    print(row)\n","conn.close() "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4VO87pkj3F-H"},"source":["# 복수 개의 Row 데이타를 한꺼번에 처리\n","conn = sqlite3.connect( dbpath )\n","\n","cur = conn.cursor()\n","data = (\n","    (1, 'This', 'Right here'),\n","    (2, 'This', 'Left here'),\n","    (3, 'This', 'Over here'),\n","    (4, '~', '~'),\n",")\n","\n","sql = \"INSERT INTO test2 VALUES ( ?, ?, ?)\"\n","cur.executemany(sql, data)\n","conn.commit()\n","\n","\n","sql = \"select * from test2\"\n","cur.execute(sql)\n","\n","\n","rows = cur.fetchall()\n","for row in rows:\n","  print(row)\n","\n","conn.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1eqGl9AzTnMC"},"source":["conn = sqlite3.connect( dbpath )\n","cur = conn.cursor()\n","sql = \"select * from test2\"\n","cur.execute(sql)\n","rows = cur.fetchall()\n","for row in rows:\n","  print(row)\n","\n","# sql = \"drop table test2\"\n","# cur.execute(sql)\n","conn.close()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f094gzSMgyqU"},"source":["엔진 자체가 무료임. SQLLITE 짱짱맨.\n","\n","일반적인 모바일 서비스 만들때 사용되는 내장 DB는 sqllite 가능."]},{"cell_type":"code","metadata":{"id":"2iCxAWxqnfUH"},"source":[""],"execution_count":null,"outputs":[]}]}