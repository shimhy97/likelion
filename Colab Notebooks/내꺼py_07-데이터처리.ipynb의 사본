{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"내꺼py_07-데이터처리.ipynb의 사본","provenance":[{"file_id":"1Ny2xu3LEClyRCOyuXuY4LcaIec0THI7Z","timestamp":1616723734362}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"g19tsMWUNpCx"},"source":["### 구글드라이브 연동"]},{"cell_type":"code","metadata":{"id":"Ijyjm-4FNqNx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002544,"user_tz":-540,"elapsed":1657,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"06913805-fbe7-4c41-c76e-1a0c0bfaeac9"},"source":["# 구글드라이브 연동\n","from google.colab import drive\n","drive.mount('/gdrive', force_remount=True)\n","\n","# 구글 드라이브 파일 확인\n","!ls '/gdrive/My Drive/temp/'\n","\n","# 반복되는 드라이브 경로 변수화\n","drive_path = '/gdrive/My Drive/temp/'"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /gdrive\n"," 매수종목1.txt\t\t   example.docx\t\t   sample.xlsx\n"," 매수종목2.txt\t\t   exmaple.docx\t\t   score.csv\n"," adult.data\t\t   height_weight.txt\t   seoul.html\n"," auto-mpg.csv\t\t   HelloWorld.xlsx\t   stock-data.csv\n"," bmi_500.csv\t\t   little-char.png\t  'stock price.xlsx'\n"," citibike.csv\t\t   population_number.csv  'stock valuation.xlsx'\n","'투표 결과.csv'\t\t   ram_price.csv\t   test.db.db\n"," 매수종목.csv\t\t   ratings_small.txt\t   test.txt\n"," database\t\t   ratings_test.txt\t   Traffic_Accident_2017.csv\n"," data_mine.csv\t\t   ratings_train.txt\t   train.csv\n"," data_population.csv\t   sample1.pdf\t\t   user_id_mean.csv\n"," data_studentlist_en.csv   sample2.pdf\t\t   주가데이터.xlsx\n"," demo.docx\t\t   sample_merge.pdf\t   남북한발전전력량.xlsx\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"D4_DOeUO78B7"},"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import os\n","import warnings\n","%matplotlib inline\n","%config InlineBackend.figure_format = 'retina'\n","warnings.filterwarnings('ignore')           # 성가신 warning은 off 해준다. "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4tq-wkkoKjD5"},"source":["## 리스트 연습"]},{"cell_type":"code","metadata":{"id":"WMn-gqKiKjD9"},"source":["shopping_list = []\n","shopping_list.append(\"milk\")\n","shopping_list.append(\"cheese\")\n","shopping_list.append(\"bread\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Jini9IqpKjEB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002545,"user_tz":-540,"elapsed":1638,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"fd68d3a3-1872-453c-e6b9-529db6b4635a"},"source":["shopping_list"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['milk', 'cheese', 'bread']"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"rt_UVgrSKjEH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002546,"user_tz":-540,"elapsed":1630,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"6d701824-89e7-4c44-d522-456751073bac"},"source":["shopping_list.remove(\"milk\")\n","shopping_list"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cheese', 'bread']"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"9EZdR4bWKjEL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002945,"user_tz":-540,"elapsed":2021,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"52b472f3-6c96-4ab6-fca8-4f8276120b87"},"source":["for item in shopping_list:\n","    print(item)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["cheese\n","bread\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EBXPEeigKjEP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002945,"user_tz":-540,"elapsed":2011,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8ddf9b58-1e0c-498d-b647-3af9c36d931a"},"source":["if \"milk\" in shopping_list:\n","    print(\"Delicious!\")\n","\n","if \"eggs\" not in shopping_list:\n","    print(\"Well we can't have that!\")\n","    shopping_list.append(\"eggs\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Well we can't have that!\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"I62wnCg0KjET","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002946,"user_tz":-540,"elapsed":2004,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"7c6a0da2-3b86-412b-fbf1-1de7d0fe1bc5"},"source":["shopping_list"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cheese', 'bread', 'eggs']"]},"metadata":{"tags":[]},"execution_count":67}]},{"cell_type":"markdown","metadata":{"id":"UtNoBB-2KjEX"},"source":["## 딕셔너리 연습\n"]},{"cell_type":"code","metadata":{"id":"AZ25vwSJKjEY"},"source":["foods = {}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hQ_i95X5KjEb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002947,"user_tz":-540,"elapsed":1991,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"98029f5d-2376-4ed3-b23e-ea4e59798c9a"},"source":["foods[\"banana\"] = \"A delicious and tasty treat!\"\n","foods[\"dirt\"]   = \"Not delicious. Not tasty. DO NOT EAT!\"\n","foods"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'banana': 'A delicious and tasty treat!',\n"," 'dirt': 'Not delicious. Not tasty. DO NOT EAT!'}"]},"metadata":{"tags":[]},"execution_count":69}]},{"cell_type":"code","metadata":{"id":"wHff9Xb_KjEd","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1617006002947,"user_tz":-540,"elapsed":1982,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"56db4ec4-1896-4139-d50c-0d6b49f63ae0"},"source":["foods[\"banana\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'A delicious and tasty treat!'"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"FEYL_e1TKjEh"},"source":["# foods[\"cheese\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PcrzpVN9KjEl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002948,"user_tz":-540,"elapsed":1970,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"e5f5841d-f4d7-4ac5-8c87-fe2798c795c3"},"source":["if \"cheese\" in foods:\n","    print(\"Cheese is one of the known foods!\")\n","else:\n","    print(\"No cheese\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["No cheese\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FFk7msi8KjEr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006002948,"user_tz":-540,"elapsed":1961,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"9eca69b5-9301-4c10-bac3-a007c2cc036d"},"source":["del foods[\"dirt\"]\n","foods"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'banana': 'A delicious and tasty treat!'}"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"markdown","metadata":{"id":"BMITeZ6rhcRc"},"source":["## 데이터 사전 처리"]},{"cell_type":"markdown","metadata":{"id":"K2wzLdIzxJE8"},"source":["### 결측치(누락 데이터) 처리"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"Jq7CiIrqxzOk","executionInfo":{"status":"ok","timestamp":1617006002948,"user_tz":-540,"elapsed":1953,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"b263d31a-9e46-484a-decc-c1b2f2bef8d1"},"source":["import pandas as pd\n","import seaborn as sns\n","\n","# titanic 데이터셋 가져오기\n","df = sns.load_dataset('titanic')\n","df\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","      <td>S</td>\n","      <td>Second</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>B</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>23.4500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 15 columns</p>\n","</div>"],"text/plain":["     survived  pclass     sex   age  ...  deck  embark_town  alive  alone\n","0           0       3    male  22.0  ...   NaN  Southampton     no  False\n","1           1       1  female  38.0  ...     C    Cherbourg    yes  False\n","2           1       3  female  26.0  ...   NaN  Southampton    yes   True\n","3           1       1  female  35.0  ...     C  Southampton    yes  False\n","4           0       3    male  35.0  ...   NaN  Southampton     no   True\n","..        ...     ...     ...   ...  ...   ...          ...    ...    ...\n","886         0       2    male  27.0  ...   NaN  Southampton     no   True\n","887         1       1  female  19.0  ...     B  Southampton    yes   True\n","888         0       3  female   NaN  ...   NaN  Southampton     no  False\n","889         1       1    male  26.0  ...     C    Cherbourg    yes   True\n","890         0       3    male  32.0  ...   NaN   Queenstown     no   True\n","\n","[891 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"hVxtcsXQgJxO","colab":{"base_uri":"https://localhost:8080/","height":671},"executionInfo":{"status":"ok","timestamp":1617006002949,"user_tz":-540,"elapsed":1944,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"009c01a9-5486-4512-8729-a3f47f3ea1b8"},"source":["df.info()  # 누락 데이터 찾을때 강사님은 거의 인포를 쓴다.\n","\n","df.describe() # 요건 각종 데이터에 대한 정보를 갈쳐줌"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     891 non-null    int64   \n"," 1   pclass       891 non-null    int64   \n"," 2   sex          891 non-null    object  \n"," 3   age          714 non-null    float64 \n"," 4   sibsp        891 non-null    int64   \n"," 5   parch        891 non-null    int64   \n"," 6   fare         891 non-null    float64 \n"," 7   embarked     889 non-null    object  \n"," 8   class        891 non-null    category\n"," 9   who          891 non-null    object  \n"," 10  adult_male   891 non-null    bool    \n"," 11  deck         203 non-null    category\n"," 12  embark_town  889 non-null    object  \n"," 13  alive        891 non-null    object  \n"," 14  alone        891 non-null    bool    \n","dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n","memory usage: 80.6+ KB\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         survived      pclass         age       sibsp       parch        fare\n","count  891.000000  891.000000  714.000000  891.000000  891.000000  891.000000\n","mean     0.383838    2.308642   29.699118    0.523008    0.381594   32.204208\n","std      0.486592    0.836071   14.526497    1.102743    0.806057   49.693429\n","min      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n","25%      0.000000    2.000000   20.125000    0.000000    0.000000    7.910400\n","50%      0.000000    3.000000   28.000000    0.000000    0.000000   14.454200\n","75%      1.000000    3.000000   38.000000    1.000000    0.000000   31.000000\n","max      1.000000    3.000000   80.000000    8.000000    6.000000  512.329200"]},"metadata":{"tags":[]},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6I7IYVsd-hNd","executionInfo":{"status":"ok","timestamp":1617006002949,"user_tz":-540,"elapsed":1936,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"d3084696-081b-477d-9179-586eec92b7e2"},"source":["nan_deck = df['deck'].value_counts(dropna=False)   #결측값이 있는 행을 제거 ?!\n","nan_deck"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["NaN    688\n","C       59\n","B       47\n","D       33\n","E       32\n","A       15\n","F       13\n","G        4\n","Name: deck, dtype: int64"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"D6JC7yjC_CA6","executionInfo":{"status":"ok","timestamp":1617006002950,"user_tz":-540,"elapsed":1928,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"f1d813a5-45d5-4a69-fc21-d0264f0ba018"},"source":["df.head().isnull()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   survived  pclass    sex    age  ...   deck  embark_town  alive  alone\n","0     False   False  False  False  ...   True        False  False  False\n","1     False   False  False  False  ...  False        False  False  False\n","2     False   False  False  False  ...   True        False  False  False\n","3     False   False  False  False  ...  False        False  False  False\n","4     False   False  False  False  ...   True        False  False  False\n","\n","[5 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"liFZrSzY_jXx","executionInfo":{"status":"ok","timestamp":1617006002950,"user_tz":-540,"elapsed":1918,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"2c361f47-43a7-440a-d8c0-d5f393461eb5"},"source":["df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived         0\n","pclass           0\n","sex              0\n","age            177\n","sibsp            0\n","parch            0\n","fare             0\n","embarked         2\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      2\n","alive            0\n","alone            0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"markdown","metadata":{"id":"KIuOIBLWVyii"},"source":["누락 데이터 제거"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"p1w9j0_-DlQH","executionInfo":{"status":"ok","timestamp":1617006002950,"user_tz":-540,"elapsed":1909,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"613495a2-4840-407c-f64f-f8de56be5d76"},"source":["df_rc = pd.DataFrame({'name':['kim','lee','park'],\n","                      'age':[10,20,30],\n","                      'height':[170, 160, 180]})\n","display(df_rc)\n","display(df_rc.drop([0,1], axis=0))    # 행\n","display(df_rc.drop(['name'], axis=1)) # 열\n","\n","#변수[열이름] 이랑 [열이름] 이랑 어떻게 다른가?"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>kim</td>\n","      <td>10</td>\n","      <td>170</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>lee</td>\n","      <td>20</td>\n","      <td>160</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>park</td>\n","      <td>30</td>\n","      <td>180</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   name  age  height\n","0   kim   10     170\n","1   lee   20     160\n","2  park   30     180"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>park</td>\n","      <td>30</td>\n","      <td>180</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   name  age  height\n","2  park   30     180"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>170</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>160</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>180</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   age  height\n","0   10     170\n","1   20     160\n","2   30     180"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"bfzXQ3AigM7R","colab":{"base_uri":"https://localhost:8080/","height":580},"executionInfo":{"status":"ok","timestamp":1617006003419,"user_tz":-540,"elapsed":2370,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"6f22e756-16c8-40eb-80d4-90cfaaf19adc"},"source":["missing_df = df.isnull()\n","\n","display(missing_df)\n","# 데이터가 500개 이상 있는 경우가 아니면 열을 삭제\n","df_thresh = df.dropna(axis=1, thresh=500)\n","df_thresh.head()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows × 15 columns</p>\n","</div>"],"text/plain":["     survived  pclass    sex    age  ...   deck  embark_town  alive  alone\n","0       False   False  False  False  ...   True        False  False  False\n","1       False   False  False  False  ...  False        False  False  False\n","2       False   False  False  False  ...   True        False  False  False\n","3       False   False  False  False  ...  False        False  False  False\n","4       False   False  False  False  ...   True        False  False  False\n","..        ...     ...    ...    ...  ...    ...          ...    ...    ...\n","886     False   False  False  False  ...   True        False  False  False\n","887     False   False  False  False  ...  False        False  False  False\n","888     False   False  False   True  ...   True        False  False  False\n","889     False   False  False  False  ...  False        False  False  False\n","890     False   False  False  False  ...   True        False  False  False\n","\n","[891 rows x 15 columns]"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   survived  pclass     sex   age  ...  adult_male  embark_town  alive  alone\n","0         0       3    male  22.0  ...        True  Southampton     no  False\n","1         1       1  female  38.0  ...       False    Cherbourg    yes  False\n","2         1       3  female  26.0  ...       False  Southampton    yes   True\n","3         1       1  female  35.0  ...       False  Southampton    yes  False\n","4         0       3    male  35.0  ...        True  Southampton     no   True\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"markdown","metadata":{"id":"Sz-qeXMGWBGZ"},"source":["누락 데이터 치환"]},{"cell_type":"code","metadata":{"id":"-YAcfdXzWDC8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006003420,"user_tz":-540,"elapsed":2362,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"94a4c615-4121-48e5-8ca2-f47871332511"},"source":["# 평균으로 누락 데이터 치환\n","mean_age = df['age'].mean()\n","df['age'].fillna(mean_age, inplace=True)\n","\n","df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived         0\n","pclass           0\n","sex              0\n","age              0\n","sibsp            0\n","parch            0\n","fare             0\n","embarked         2\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      2\n","alive            0\n","alone            0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":81}]},{"cell_type":"code","metadata":{"id":"9YlwdPvwbhwM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006003420,"user_tz":-540,"elapsed":2353,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"924f9e3c-a607-43db-e602-831c61479e25"},"source":["# 빈도수로 누락 데이터 치환\n","embark_town_idxmax = df['embark_town'].value_counts().idxmax()\n","df['embark_town'].fillna(embark_town_idxmax, inplace=True)    # 빈곳을 최댓값으로 채워버려\n","\n","df.isnull().sum()   # 빈칸 갯수 "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived         0\n","pclass           0\n","sex              0\n","age              0\n","sibsp            0\n","parch            0\n","fare             0\n","embarked         2\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      0\n","alive            0\n","alone            0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":82}]},{"cell_type":"code","metadata":{"id":"gOfNYBU8bwcT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006003421,"user_tz":-540,"elapsed":2346,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"987a064f-3bfb-4d03-a35a-3b48a9c88113"},"source":["# 이웃하는 값으로 치환\n","df['embarked'].fillna(method='ffill', inplace=True)\n","df.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived         0\n","pclass           0\n","sex              0\n","age              0\n","sibsp            0\n","parch            0\n","fare             0\n","embarked         0\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      0\n","alive            0\n","alone            0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":83}]},{"cell_type":"markdown","metadata":{"id":"RGp-sKYZxN5l"},"source":["### 중복 데이터 처리"]},{"cell_type":"markdown","metadata":{"id":"cjYV5JJacDth"},"source":["중복 데이터 확인"]},{"cell_type":"code","metadata":{"id":"SIaGC1mOgVpn","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617006003421,"user_tz":-540,"elapsed":2336,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"5853326e-827f-4b7b-fa11-a015767dbae1"},"source":["df = pd.DataFrame({'c1':['a', 'a', 'b', 'a', 'b'],\n","                  'c2':[1, 1, 1, 2, 2],\n","                  'c3':[1, 1, 2, 2, 2]})\n","display(df)\n","df2 = df"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>c1</th>\n","      <th>c2</th>\n","      <th>c3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>b</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>b</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  c1  c2  c3\n","0  a   1   1\n","1  a   1   1\n","2  b   1   2\n","3  a   2   2\n","4  b   2   2"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"_i9QjzFycP2x"},"source":["중복 데이터 제거"]},{"cell_type":"code","metadata":{"id":"06HujCPxgXsW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006003422,"user_tz":-540,"elapsed":2328,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"acbe0a58-b434-4c1c-90ce-0544404e55ef"},"source":["df = pd.DataFrame({'c1':['a', 'a', 'b', 'a', 'b'],\n","                  'c2':[1, 1, 1, 2, 2],\n","                  'c3':[1, 1, 2, 2, 2]})\n","print(df)\n","df2 = df.drop_duplicates()  #행 단위로 중복 행 삭제\n","print(df2)\n","df3 = df.drop_duplicates(subset=['c2','c3'])  #전체 안하고 부분 열만 넣어주면 그 열끼리만 비교해줌.\n","print(df3)\n","\n","#중복 데이터를 방지. 경우의수를 보고싶은 경우? 사용. "],"execution_count":null,"outputs":[{"output_type":"stream","text":["  c1  c2  c3\n","0  a   1   1\n","1  a   1   1\n","2  b   1   2\n","3  a   2   2\n","4  b   2   2\n","  c1  c2  c3\n","0  a   1   1\n","2  b   1   2\n","3  a   2   2\n","4  b   2   2\n","  c1  c2  c3\n","0  a   1   1\n","2  b   1   2\n","3  a   2   2\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"K-A210-BxYvN"},"source":["### 데이터 표준화\n","\n","* 데이터 포맷을 일관성 있게 표준화"]},{"cell_type":"markdown","metadata":{"id":"Y8DQ7RDschT4"},"source":["단위 환산산"]},{"cell_type":"code","metadata":{"id":"AVf_1XFjgaCT","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"error","timestamp":1617250154551,"user_tz":-540,"elapsed":803,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"ab7113de-a424-4392-8119-f9779b75ef36"},"source":["df = pd.read_csv(drive_path + 'auto-mpg.csv', header=None)\n","df.columns = ['mpg','cylinders','displacement','horsepower','weight',\n","              'acceleration','model year','origin','name'] \n","display(df.head(3))\n","\n","# mpg(mile per galion)를  kpl(kilometer per liter)로 변환한 열을 추가\n","mpg_to_kpl = 1.60934 / 3.78541\n","df['kpl'] = df['mpg'] * mpg_to_kpl\n","display(df.head(3))\n","\n","# kpl 열을 소수점 2째 자리까지 반올림\n","df['kpl'] = df['kpl'].round(2)\n","display(df)"],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-6c67853e6e47>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrive_path\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'auto-mpg.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheader\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m df.columns = ['mpg','cylinders','displacement','horsepower','weight',\n\u001b[1;32m      3\u001b[0m               'acceleration','model year','origin','name'] \n\u001b[1;32m      4\u001b[0m \u001b[0mdisplay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"GqIc5m_OdAVK"},"source":["자료형 변환 - 중요!!"]},{"cell_type":"code","metadata":{"id":"cmyz6Wv_ga7s","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617006003422,"user_tz":-540,"elapsed":2310,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"5528ec45-45ae-4f02-f281-64b778baf575"},"source":["df.dtypes\n","# object는 컴퓨터가 계산을 못함. 수치로 바꿔서 계산해줘야 댐 .\n","df['horsepower'].unique()\n","\n","#inplacte = True 를 써줘야 원본이 바뀐다.\n","# https://vyeslog.com/blog/pandas-dropna/ 를 참조하여 dropna 메서드의 how, thresh, subset 속성을 참조하자.\n","\n","\n","df['horsepower'].replace('?', np.nan, inplace=True)  # 문자로된 결측치 확인( '?' )하여 공백으로 바꾼다.\n","df.dropna(subset=['horsepower'], axis=0, inplace=True)  # horsepower 열에서 공백이 포함된 곳을 찾아 그게 있는 행을 싸그리 지운다..\n","print(df['horsepower'].unique())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['130.0' '165.0' '150.0' '140.0' '198.0' '220.0' '215.0' '225.0' '190.0'\n"," '170.0' '160.0' '95.00' '97.00' '85.00' '88.00' '46.00' '87.00' '90.00'\n"," '113.0' '200.0' '210.0' '193.0' '100.0' '105.0' '175.0' '153.0' '180.0'\n"," '110.0' '72.00' '86.00' '70.00' '76.00' '65.00' '69.00' '60.00' '80.00'\n"," '54.00' '208.0' '155.0' '112.0' '92.00' '145.0' '137.0' '158.0' '167.0'\n"," '94.00' '107.0' '230.0' '49.00' '75.00' '91.00' '122.0' '67.00' '83.00'\n"," '78.00' '52.00' '61.00' '93.00' '148.0' '129.0' '96.00' '71.00' '98.00'\n"," '115.0' '53.00' '81.00' '79.00' '120.0' '152.0' '102.0' '108.0' '68.00'\n"," '58.00' '149.0' '89.00' '63.00' '48.00' '66.00' '139.0' '103.0' '125.0'\n"," '133.0' '138.0' '135.0' '142.0' '77.00' '62.00' '132.0' '84.00' '64.00'\n"," '74.00' '116.0' '82.00']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7xAMbiSlV8e5","executionInfo":{"status":"ok","timestamp":1617006003423,"user_tz":-540,"elapsed":2303,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"da8c33b8-4065-4b2e-a0b2-63160b691d5c"},"source":["#문자열 변경\n","\n","df['horsepower'] = df['horsepower'].astype('float64')\n","df['horsepower'] "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      130.0\n","1      165.0\n","2      150.0\n","3      150.0\n","4      140.0\n","       ...  \n","393     86.0\n","394     52.0\n","395     84.0\n","396     79.0\n","397     82.0\n","Name: horsepower, Length: 392, dtype: float64"]},"metadata":{"tags":[]},"execution_count":88}]},{"cell_type":"markdown","metadata":{"id":"PjD4-30Txauf"},"source":["### 범주형(카테고리) 데이터 처리"]},{"cell_type":"markdown","metadata":{"id":"5g6Fcv39dcb-"},"source":["구간 분할\n","\n","* 연속 데이터를 그대로 사용하기 보다는 일정한 구간(bin)으로 나눠서 분석하는 것이 효율적인 경우"]},{"cell_type":"code","metadata":{"id":"ScDYIo7tgcT0","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1617006004034,"user_tz":-540,"elapsed":2905,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"3babfa46-b182-4d8b-c1a9-d3587fac1df8"},"source":["bin_count, bin_dividers = np.histogram(df['horsepower'], bins=3)  # 구간을 동일 길이로 3등분분\n","bin_labels = ['저출력','보통출력','고출력']\n","df['hp_bin'] = pd.cut(x=df['horsepower'], \n","                      bins=bin_dividers, \n","                      labels=bin_labels,\n","                      include_lowest=True)\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","      <th>kpl</th>\n","      <th>hp_bin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","      <td>7.65</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693.0</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","      <td>6.38</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436.0</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","      <td>7.65</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","      <td>6.80</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449.0</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","      <td>7.23</td>\n","      <td>보통출력</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    mpg  cylinders  displacement  ...                       name   kpl  hp_bin\n","0  18.0          8         307.0  ...  chevrolet chevelle malibu  7.65    보통출력\n","1  15.0          8         350.0  ...          buick skylark 320  6.38    보통출력\n","2  18.0          8         318.0  ...         plymouth satellite  7.65    보통출력\n","3  16.0          8         304.0  ...              amc rebel sst  6.80    보통출력\n","4  17.0          8         302.0  ...                ford torino  7.23    보통출력\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"markdown","metadata":{"id":"uLaMSBXJdwAd"},"source":["더미 변수 (dummy variable)\n","\n","* 카테고리를 나타내는 범주형 데이터를 컴퓨터가 인식 가능한 입력값으로 변환 (숫자)"]},{"cell_type":"markdown","metadata":{"id":"Q95P_FEneSrq"},"source":["원핫인코딩\n","\n","* 범주형 데이터를 0과 1을 원소로 갖는 원핫벡터로 변환\n"," * 선형대수학에서 정의하는 희소행렬(sparse matrix)로 정리리"]},{"cell_type":"code","metadata":{"id":"RMW3_6GJgeg8","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1617006004034,"user_tz":-540,"elapsed":2896,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"8a7b3bd9-238f-4a50-dbf5-9d679c893de5"},"source":["pd.get_dummies(df['hp_bin'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>저출력</th>\n","      <th>보통출력</th>\n","      <th>고출력</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 3 columns</p>\n","</div>"],"text/plain":["     저출력  보통출력  고출력\n","0      0     1    0\n","1      0     1    0\n","2      0     1    0\n","3      0     1    0\n","4      0     1    0\n","..   ...   ...  ...\n","393    1     0    0\n","394    1     0    0\n","395    1     0    0\n","396    1     0    0\n","397    1     0    0\n","\n","[392 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":90}]},{"cell_type":"markdown","metadata":{"id":"mim1vXtuxeUU"},"source":["### 정규화"]},{"cell_type":"markdown","metadata":{"id":"xPLUa04lewvC"},"source":["* 숫자 데이터의 상대적인 크기 차이를 제거"]},{"cell_type":"code","metadata":{"id":"nL6nggELe1nA","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1617006004034,"user_tz":-540,"elapsed":2887,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"abf05394-4068-4084-9713-a34d9edaf0e0"},"source":["# normalize_max\n","# 사이간격????\n","\n","df['horsepower'].describe() # 분포값을 보자.\n","\n","df['horsepower'] / df['horsepower'].max()   #원래 변수에 함부로 대입 ㄴㄴ \n","\n","df\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","      <th>kpl</th>\n","      <th>hp_bin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","      <td>7.65</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693.0</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","      <td>6.38</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436.0</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","      <td>7.65</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","      <td>6.80</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449.0</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","      <td>7.23</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>27.0</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>86.0</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford mustang gl</td>\n","      <td>11.48</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>44.0</td>\n","      <td>4</td>\n","      <td>97.0</td>\n","      <td>52.0</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","      <td>82</td>\n","      <td>2</td>\n","      <td>vw pickup</td>\n","      <td>18.71</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>32.0</td>\n","      <td>4</td>\n","      <td>135.0</td>\n","      <td>84.0</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>dodge rampage</td>\n","      <td>13.60</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford ranger</td>\n","      <td>11.90</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>82.0</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>chevy s-10</td>\n","      <td>13.18</td>\n","      <td>저출력</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 11 columns</p>\n","</div>"],"text/plain":["      mpg  cylinders  displacement  ...                       name    kpl  hp_bin\n","0    18.0          8         307.0  ...  chevrolet chevelle malibu   7.65    보통출력\n","1    15.0          8         350.0  ...          buick skylark 320   6.38    보통출력\n","2    18.0          8         318.0  ...         plymouth satellite   7.65    보통출력\n","3    16.0          8         304.0  ...              amc rebel sst   6.80    보통출력\n","4    17.0          8         302.0  ...                ford torino   7.23    보통출력\n","..    ...        ...           ...  ...                        ...    ...     ...\n","393  27.0          4         140.0  ...            ford mustang gl  11.48     저출력\n","394  44.0          4          97.0  ...                  vw pickup  18.71     저출력\n","395  32.0          4         135.0  ...              dodge rampage  13.60     저출력\n","396  28.0          4         120.0  ...                ford ranger  11.90     저출력\n","397  31.0          4         119.0  ...                 chevy s-10  13.18     저출력\n","\n","[392 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":91}]},{"cell_type":"code","metadata":{"id":"Hj5uvpVdfK3C","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1617006004035,"user_tz":-540,"elapsed":2879,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"f7aaccd8-ac37-43d6-ea70-d481a2fdfbf5"},"source":["# normalize_min_max  정규화 과정.\n","\n","min_x = df['horsepower']-df['horsepower'].min()   # 최솟값을 0으로 만들어보리기\n","\n","min_max = df['horsepower'].max()- df['horsepower'].min()\n","\n","df['horsepower'] = min_x/min_max\n","\n","df\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","      <th>kpl</th>\n","      <th>hp_bin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>0.456522</td>\n","      <td>3504.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","      <td>7.65</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>0.646739</td>\n","      <td>3693.0</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","      <td>6.38</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>0.565217</td>\n","      <td>3436.0</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","      <td>7.65</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>0.565217</td>\n","      <td>3433.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","      <td>6.80</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>0.510870</td>\n","      <td>3449.0</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","      <td>7.23</td>\n","      <td>보통출력</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>27.0</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>0.217391</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford mustang gl</td>\n","      <td>11.48</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>44.0</td>\n","      <td>4</td>\n","      <td>97.0</td>\n","      <td>0.032609</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","      <td>82</td>\n","      <td>2</td>\n","      <td>vw pickup</td>\n","      <td>18.71</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>32.0</td>\n","      <td>4</td>\n","      <td>135.0</td>\n","      <td>0.206522</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>dodge rampage</td>\n","      <td>13.60</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>0.179348</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford ranger</td>\n","      <td>11.90</td>\n","      <td>저출력</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>0.195652</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>chevy s-10</td>\n","      <td>13.18</td>\n","      <td>저출력</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 11 columns</p>\n","</div>"],"text/plain":["      mpg  cylinders  displacement  ...                       name    kpl  hp_bin\n","0    18.0          8         307.0  ...  chevrolet chevelle malibu   7.65    보통출력\n","1    15.0          8         350.0  ...          buick skylark 320   6.38    보통출력\n","2    18.0          8         318.0  ...         plymouth satellite   7.65    보통출력\n","3    16.0          8         304.0  ...              amc rebel sst   6.80    보통출력\n","4    17.0          8         302.0  ...                ford torino   7.23    보통출력\n","..    ...        ...           ...  ...                        ...    ...     ...\n","393  27.0          4         140.0  ...            ford mustang gl  11.48     저출력\n","394  44.0          4          97.0  ...                  vw pickup  18.71     저출력\n","395  32.0          4         135.0  ...              dodge rampage  13.60     저출력\n","396  28.0          4         120.0  ...                ford ranger  11.90     저출력\n","397  31.0          4         119.0  ...                 chevy s-10  13.18     저출력\n","\n","[392 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"markdown","metadata":{"id":"yJhPhoZdhuIG"},"source":["## 데이터프레임 응용"]},{"cell_type":"markdown","metadata":{"id":"q-kxRV8TpULC"},"source":["문제 정의\n","1)데이터 수집 by 크롤링\n","2)데이터 처리 (수치, 단위, 정규화, 중복 등등)\n","3)데이터 분석 (데이터 순서 변경, 합치기, 결합, 카테고리화) = 피벗테이블 응용\n","4)데이터 리포팅 (유의미한 결과물 도출)"]},{"cell_type":"markdown","metadata":{"id":"UMOsXrT9dqbI"},"source":["### 순서 바꾸기, 분리"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"HG8MqmuXWQmg","executionInfo":{"status":"ok","timestamp":1617006004035,"user_tz":-540,"elapsed":2870,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"2c789c40-e916-4c17-d16a-31d50682059a"},"source":["df_ti = sns.load_dataset('titanic')\n","\n","df_ti = df_ti.loc[0:4,'survived':'age']\n","\n","columns = list(df_ti  .columns.values)\n","\n","col_sorted=sorted(columns)   #팬시 인덱싱\n","\n","display(df_ti[col_sorted])\n","\n","col_reversed =list(reversed(columns))  # 열 순서를 바꾸기\n","\n","df_ti[col_reversed]\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22.0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>26.0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35.0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    age  pclass     sex  survived\n","0  22.0       3    male         0\n","1  38.0       1  female         1\n","2  26.0       3  female         1\n","3  35.0       1  female         1\n","4  35.0       3    male         0"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22.0</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>26.0</td>\n","      <td>female</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35.0</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35.0</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    age     sex  pclass  survived\n","0  22.0    male       3         0\n","1  38.0  female       1         1\n","2  26.0  female       3         1\n","3  35.0  female       1         1\n","4  35.0    male       3         0"]},"metadata":{"tags":[]},"execution_count":93}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"xHQMo1VtYhv1","executionInfo":{"status":"ok","timestamp":1617006004035,"user_tz":-540,"elapsed":2861,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"762bc03c-d864-4254-cda6-20569429f6e2"},"source":["#열 분리 \n","\n","df_stocks = pd.read_excel(drive_path+'주가데이터.xlsx')\n","display(df_stocks)\n","\n","df_stocks['연월일'] = df_stocks['연월일'].astype('str')\n","dates= df_stocks['연월일'].str.split('-')\n","display(dates)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>연월일</th>\n","      <th>당일종가</th>\n","      <th>전일종가</th>\n","      <th>시가</th>\n","      <th>고가</th>\n","      <th>저가</th>\n","      <th>거래량</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-07-02</td>\n","      <td>10100</td>\n","      <td>600</td>\n","      <td>10850</td>\n","      <td>10900</td>\n","      <td>10000</td>\n","      <td>137977</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-06-29</td>\n","      <td>10700</td>\n","      <td>300</td>\n","      <td>10550</td>\n","      <td>10900</td>\n","      <td>9990</td>\n","      <td>170253</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-06-28</td>\n","      <td>10400</td>\n","      <td>500</td>\n","      <td>10900</td>\n","      <td>10950</td>\n","      <td>10150</td>\n","      <td>155769</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-06-27</td>\n","      <td>10900</td>\n","      <td>100</td>\n","      <td>10800</td>\n","      <td>11050</td>\n","      <td>10500</td>\n","      <td>133548</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-06-26</td>\n","      <td>10800</td>\n","      <td>350</td>\n","      <td>10900</td>\n","      <td>11000</td>\n","      <td>10700</td>\n","      <td>63039</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2018-06-25</td>\n","      <td>11150</td>\n","      <td>150</td>\n","      <td>11400</td>\n","      <td>11450</td>\n","      <td>11000</td>\n","      <td>55519</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2018-06-22</td>\n","      <td>11300</td>\n","      <td>100</td>\n","      <td>11250</td>\n","      <td>11450</td>\n","      <td>10750</td>\n","      <td>134805</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2018-06-21</td>\n","      <td>11200</td>\n","      <td>350</td>\n","      <td>11350</td>\n","      <td>11750</td>\n","      <td>11200</td>\n","      <td>133002</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2018-06-20</td>\n","      <td>11550</td>\n","      <td>250</td>\n","      <td>11200</td>\n","      <td>11600</td>\n","      <td>10900</td>\n","      <td>308596</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2018-06-19</td>\n","      <td>11300</td>\n","      <td>700</td>\n","      <td>11850</td>\n","      <td>11950</td>\n","      <td>11300</td>\n","      <td>180656</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2018-06-18</td>\n","      <td>12000</td>\n","      <td>1400</td>\n","      <td>13400</td>\n","      <td>13400</td>\n","      <td>12000</td>\n","      <td>309787</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2018-06-15</td>\n","      <td>13400</td>\n","      <td>50</td>\n","      <td>13600</td>\n","      <td>13600</td>\n","      <td>12900</td>\n","      <td>201376</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2018-06-14</td>\n","      <td>13450</td>\n","      <td>250</td>\n","      <td>13200</td>\n","      <td>13700</td>\n","      <td>13150</td>\n","      <td>347451</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2018-06-12</td>\n","      <td>13200</td>\n","      <td>1250</td>\n","      <td>12200</td>\n","      <td>13300</td>\n","      <td>12050</td>\n","      <td>558148</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2018-06-11</td>\n","      <td>11950</td>\n","      <td>0</td>\n","      <td>12000</td>\n","      <td>12250</td>\n","      <td>11950</td>\n","      <td>62293</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2018-06-08</td>\n","      <td>11950</td>\n","      <td>0</td>\n","      <td>11950</td>\n","      <td>12200</td>\n","      <td>11800</td>\n","      <td>59258</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2018-06-07</td>\n","      <td>11950</td>\n","      <td>200</td>\n","      <td>12200</td>\n","      <td>12300</td>\n","      <td>11900</td>\n","      <td>49088</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2018-06-05</td>\n","      <td>12150</td>\n","      <td>250</td>\n","      <td>11800</td>\n","      <td>12250</td>\n","      <td>11800</td>\n","      <td>42485</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2018-06-04</td>\n","      <td>11900</td>\n","      <td>0</td>\n","      <td>11900</td>\n","      <td>12200</td>\n","      <td>11700</td>\n","      <td>25171</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2018-06-01</td>\n","      <td>11900</td>\n","      <td>100</td>\n","      <td>11800</td>\n","      <td>12100</td>\n","      <td>11750</td>\n","      <td>32062</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          연월일   당일종가  전일종가     시가     고가     저가     거래량\n","0  2018-07-02  10100   600  10850  10900  10000  137977\n","1  2018-06-29  10700   300  10550  10900   9990  170253\n","2  2018-06-28  10400   500  10900  10950  10150  155769\n","3  2018-06-27  10900   100  10800  11050  10500  133548\n","4  2018-06-26  10800   350  10900  11000  10700   63039\n","5  2018-06-25  11150   150  11400  11450  11000   55519\n","6  2018-06-22  11300   100  11250  11450  10750  134805\n","7  2018-06-21  11200   350  11350  11750  11200  133002\n","8  2018-06-20  11550   250  11200  11600  10900  308596\n","9  2018-06-19  11300   700  11850  11950  11300  180656\n","10 2018-06-18  12000  1400  13400  13400  12000  309787\n","11 2018-06-15  13400    50  13600  13600  12900  201376\n","12 2018-06-14  13450   250  13200  13700  13150  347451\n","13 2018-06-12  13200  1250  12200  13300  12050  558148\n","14 2018-06-11  11950     0  12000  12250  11950   62293\n","15 2018-06-08  11950     0  11950  12200  11800   59258\n","16 2018-06-07  11950   200  12200  12300  11900   49088\n","17 2018-06-05  12150   250  11800  12250  11800   42485\n","18 2018-06-04  11900     0  11900  12200  11700   25171\n","19 2018-06-01  11900   100  11800  12100  11750   32062"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/plain":["0     [2018, 07, 02]\n","1     [2018, 06, 29]\n","2     [2018, 06, 28]\n","3     [2018, 06, 27]\n","4     [2018, 06, 26]\n","5     [2018, 06, 25]\n","6     [2018, 06, 22]\n","7     [2018, 06, 21]\n","8     [2018, 06, 20]\n","9     [2018, 06, 19]\n","10    [2018, 06, 18]\n","11    [2018, 06, 15]\n","12    [2018, 06, 14]\n","13    [2018, 06, 12]\n","14    [2018, 06, 11]\n","15    [2018, 06, 08]\n","16    [2018, 06, 07]\n","17    [2018, 06, 05]\n","18    [2018, 06, 04]\n","19    [2018, 06, 01]\n","Name: 연월일, dtype: object"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"6p33GYsPZpQp","executionInfo":{"status":"ok","timestamp":1617006004036,"user_tz":-540,"elapsed":2852,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"00c6cdbf-0c5a-4c36-95e3-92aeaf47ec2a"},"source":["df_stocks['연'] = dates.str.get(0)\n","df_stocks['월'] = dates.str.get(1)\n","df_stocks['일'] = dates.str.get(2)\n","df_stocks.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>연월일</th>\n","      <th>당일종가</th>\n","      <th>전일종가</th>\n","      <th>시가</th>\n","      <th>고가</th>\n","      <th>저가</th>\n","      <th>거래량</th>\n","      <th>연</th>\n","      <th>월</th>\n","      <th>일</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-07-02</td>\n","      <td>10100</td>\n","      <td>600</td>\n","      <td>10850</td>\n","      <td>10900</td>\n","      <td>10000</td>\n","      <td>137977</td>\n","      <td>2018</td>\n","      <td>07</td>\n","      <td>02</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-06-29</td>\n","      <td>10700</td>\n","      <td>300</td>\n","      <td>10550</td>\n","      <td>10900</td>\n","      <td>9990</td>\n","      <td>170253</td>\n","      <td>2018</td>\n","      <td>06</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-06-28</td>\n","      <td>10400</td>\n","      <td>500</td>\n","      <td>10900</td>\n","      <td>10950</td>\n","      <td>10150</td>\n","      <td>155769</td>\n","      <td>2018</td>\n","      <td>06</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-06-27</td>\n","      <td>10900</td>\n","      <td>100</td>\n","      <td>10800</td>\n","      <td>11050</td>\n","      <td>10500</td>\n","      <td>133548</td>\n","      <td>2018</td>\n","      <td>06</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-06-26</td>\n","      <td>10800</td>\n","      <td>350</td>\n","      <td>10900</td>\n","      <td>11000</td>\n","      <td>10700</td>\n","      <td>63039</td>\n","      <td>2018</td>\n","      <td>06</td>\n","      <td>26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          연월일   당일종가  전일종가     시가     고가     저가     거래량     연   월   일\n","0  2018-07-02  10100   600  10850  10900  10000  137977  2018  07  02\n","1  2018-06-29  10700   300  10550  10900   9990  170253  2018  06  29\n","2  2018-06-28  10400   500  10900  10950  10150  155769  2018  06  28\n","3  2018-06-27  10900   100  10800  11050  10500  133548  2018  06  27\n","4  2018-06-26  10800   350  10900  11000  10700   63039  2018  06  26"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"markdown","metadata":{"id":"yywlUJycZ6Oo"},"source":["### 데이터프레임 합치기\n","concat(),merge(),join()\n","머지와 조인은 합치는 순서가 중요하다"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":849},"id":"2lx-xZHYaEb0","executionInfo":{"status":"ok","timestamp":1617006004036,"user_tz":-540,"elapsed":2843,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"cb1bf142-5b1a-424c-aa60-02a1022e6e83"},"source":["# 데이터프레임 만들기\n","df11 = pd.DataFrame({'a': ['a0', 'a1', 'a2', 'a3'],\n","                    'b': ['b0', 'b1', 'b2', 'b3'],\n","                    'c': ['c0', 'c1', 'c2', 'c3']},\n","                    index=[0, 1, 2, 3])\n"," \n","df22 = pd.DataFrame({'a': ['a2', 'a3', 'a4', 'a5'],\n","                    'b': ['b2', 'b3', 'b4', 'b5'],\n","                    'c': ['c2', 'c3', 'c4', 'c5'],\n","                    'd': ['d2', 'd3', 'd4', 'd5']},\n","                    index=[2, 3, 4, 5])\n","\n","display(df11,df22)\n","\n","\n","\n","#위 아래 행 방향으로 연결하기??  -- concat!\n","display(pd.concat([df11,df22]))   # 열 갯수 안맞으면 없는 열은 내용이 NAN으로 들어감. 중복 그런거 상관없이 그냥 연이어 붙임.\n","display(pd.concat([df11,df22],  ignore_index= True))  #ignore_index 옵션은 인덱스가 새로 만들어지며 이어붙여짐.\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a0</td>\n","      <td>b0</td>\n","      <td>c0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a1</td>\n","      <td>b1</td>\n","      <td>c1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    a   b   c\n","0  a0  b0  c0\n","1  a1  b1  c1\n","2  a2  b2  c2\n","3  a3  b3  c3"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>d</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>d2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>d3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>a4</td>\n","      <td>b4</td>\n","      <td>c4</td>\n","      <td>d4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>a5</td>\n","      <td>b5</td>\n","      <td>c5</td>\n","      <td>d5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    a   b   c   d\n","2  a2  b2  c2  d2\n","3  a3  b3  c3  d3\n","4  a4  b4  c4  d4\n","5  a5  b5  c5  d5"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>d</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a0</td>\n","      <td>b0</td>\n","      <td>c0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a1</td>\n","      <td>b1</td>\n","      <td>c1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>d2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>d3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>a4</td>\n","      <td>b4</td>\n","      <td>c4</td>\n","      <td>d4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>a5</td>\n","      <td>b5</td>\n","      <td>c5</td>\n","      <td>d5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    a   b   c    d\n","0  a0  b0  c0  NaN\n","1  a1  b1  c1  NaN\n","2  a2  b2  c2  NaN\n","3  a3  b3  c3  NaN\n","2  a2  b2  c2   d2\n","3  a3  b3  c3   d3\n","4  a4  b4  c4   d4\n","5  a5  b5  c5   d5"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>d</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a0</td>\n","      <td>b0</td>\n","      <td>c0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a1</td>\n","      <td>b1</td>\n","      <td>c1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>d2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>d3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>a4</td>\n","      <td>b4</td>\n","      <td>c4</td>\n","      <td>d4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>a5</td>\n","      <td>b5</td>\n","      <td>c5</td>\n","      <td>d5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    a   b   c    d\n","0  a0  b0  c0  NaN\n","1  a1  b1  c1  NaN\n","2  a2  b2  c2  NaN\n","3  a3  b3  c3  NaN\n","4  a2  b2  c2   d2\n","5  a3  b3  c3   d3\n","6  a4  b4  c4   d4\n","7  a5  b5  c5   d5"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":314},"id":"gD3LiWexbeuF","executionInfo":{"status":"ok","timestamp":1617006004455,"user_tz":-540,"elapsed":3253,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"86ee6cb6-e349-4a3b-92a8-d19dc7a33baf"},"source":["#열방향 이어붙임열방향 이어붙임\n","display( pd.concat([df11,df22], axis=1) )   # 좌우 열 방향으로 연결. 이때 인덱스를 기준으로 겹치는게 있으면 그 옆에 추가된다!\n","\n","#교집합\n","display(pd.concat([df11,df22],axis=1, join='inner') )\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>d</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a0</td>\n","      <td>b0</td>\n","      <td>c0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a1</td>\n","      <td>b1</td>\n","      <td>c1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>d2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>d3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>a4</td>\n","      <td>b4</td>\n","      <td>c4</td>\n","      <td>d4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>a5</td>\n","      <td>b5</td>\n","      <td>c5</td>\n","      <td>d5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     a    b    c    a    b    c    d\n","0   a0   b0   c0  NaN  NaN  NaN  NaN\n","1   a1   b1   c1  NaN  NaN  NaN  NaN\n","2   a2   b2   c2   a2   b2   c2   d2\n","3   a3   b3   c3   a3   b3   c3   d3\n","4  NaN  NaN  NaN   a4   b4   c4   d4\n","5  NaN  NaN  NaN   a5   b5   c5   d5"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>a</th>\n","      <th>b</th>\n","      <th>c</th>\n","      <th>d</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>a2</td>\n","      <td>b2</td>\n","      <td>c2</td>\n","      <td>d2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>a3</td>\n","      <td>b3</td>\n","      <td>c3</td>\n","      <td>d3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    a   b   c   a   b   c   d\n","2  a2  b2  c2  a2  b2  c2  d2\n","3  a3  b3  c3  a3  b3  c3  d3"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"xH8I2aF9dUKS"},"source":["데이터프레임 병합"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"heApB3R2dVa4","executionInfo":{"status":"ok","timestamp":1617006004455,"user_tz":-540,"elapsed":3234,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"75b2645e-e0d8-4eae-aafb-f3e78ac8ad94"},"source":["df111 = pd.read_excel(drive_path + 'stock price.xlsx')\n","df222 = pd.read_excel(drive_path + 'stock valuation.xlsx')\n","display(df111,df222)\n","\n","# #교집합\n","# display(pd.merge(df111,df222)) \n","\n","# #합집합\n","# display( pd.merge(df111,df222, how='outer',on='id'),\"\\n\")   #기준이 되는 열을 제시해줌. id를 기준으로 합쳐\n","\n","#왼쪽 기준, 키 값 분리\n","display( pd.merge(df111,df222, how='left', left_on='stock_name',right_on='name'),\"\\n\" ) #왼쪽 데이터는 다 있고 오른쪽에서 추가로 가져옴\n","\n","#오른쪽 기준, 키 값 분리\n","display( pd.merge(df111,df222, how='right', left_on='stock_name',right_on='name') ,\"\\n\") #오른쪽 데이터는 다 있고 왼쪽에서 추가로 가져옴. 잘 안씀"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>stock_name</th>\n","      <th>value</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>128940</td>\n","      <td>한미약품</td>\n","      <td>59385.666667</td>\n","      <td>421000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>130960</td>\n","      <td>CJ E&amp;M</td>\n","      <td>58540.666667</td>\n","      <td>98900</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>138250</td>\n","      <td>엔에스쇼핑</td>\n","      <td>14558.666667</td>\n","      <td>13200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>139480</td>\n","      <td>이마트</td>\n","      <td>239230.833333</td>\n","      <td>254500</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>142280</td>\n","      <td>녹십자엠에스</td>\n","      <td>468.833333</td>\n","      <td>10200</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>145990</td>\n","      <td>삼양사</td>\n","      <td>82750.000000</td>\n","      <td>82000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>185750</td>\n","      <td>종근당</td>\n","      <td>40293.666667</td>\n","      <td>100500</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>192400</td>\n","      <td>쿠쿠홀딩스</td>\n","      <td>179204.666667</td>\n","      <td>177500</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>199800</td>\n","      <td>툴젠</td>\n","      <td>-2514.333333</td>\n","      <td>115400</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>204210</td>\n","      <td>모두투어리츠</td>\n","      <td>3093.333333</td>\n","      <td>3475</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       id stock_name          value   price\n","0  128940       한미약품   59385.666667  421000\n","1  130960     CJ E&M   58540.666667   98900\n","2  138250      엔에스쇼핑   14558.666667   13200\n","3  139480        이마트  239230.833333  254500\n","4  142280     녹십자엠에스     468.833333   10200\n","5  145990        삼양사   82750.000000   82000\n","6  185750        종근당   40293.666667  100500\n","7  192400      쿠쿠홀딩스  179204.666667  177500\n","8  199800         툴젠   -2514.333333  115400\n","9  204210     모두투어리츠    3093.333333    3475"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>eps</th>\n","      <th>bps</th>\n","      <th>per</th>\n","      <th>pbr</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>130960</td>\n","      <td>CJ E&amp;M</td>\n","      <td>6301.333333</td>\n","      <td>54068</td>\n","      <td>15.695091</td>\n","      <td>1.829178</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>136480</td>\n","      <td>하림</td>\n","      <td>274.166667</td>\n","      <td>3551</td>\n","      <td>11.489362</td>\n","      <td>0.887074</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>138040</td>\n","      <td>메리츠금융지주</td>\n","      <td>2122.333333</td>\n","      <td>14894</td>\n","      <td>6.313806</td>\n","      <td>0.899691</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>139480</td>\n","      <td>이마트</td>\n","      <td>18268.166667</td>\n","      <td>295780</td>\n","      <td>13.931338</td>\n","      <td>0.860437</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>145990</td>\n","      <td>삼양사</td>\n","      <td>5741.000000</td>\n","      <td>108090</td>\n","      <td>14.283226</td>\n","      <td>0.758627</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>161390</td>\n","      <td>한국타이어</td>\n","      <td>5648.500000</td>\n","      <td>51341</td>\n","      <td>7.453306</td>\n","      <td>0.820007</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>181710</td>\n","      <td>NHN엔터테인먼트</td>\n","      <td>2110.166667</td>\n","      <td>78434</td>\n","      <td>30.755864</td>\n","      <td>0.827447</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>185750</td>\n","      <td>종근당</td>\n","      <td>3990.333333</td>\n","      <td>40684</td>\n","      <td>25.185866</td>\n","      <td>2.470259</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>204210</td>\n","      <td>모두투어리츠</td>\n","      <td>85.166667</td>\n","      <td>5335</td>\n","      <td>40.802348</td>\n","      <td>0.651359</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>207940</td>\n","      <td>삼성바이오로직스</td>\n","      <td>4644.166667</td>\n","      <td>60099</td>\n","      <td>89.790059</td>\n","      <td>6.938551</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       id       name           eps     bps        per       pbr\n","0  130960     CJ E&M   6301.333333   54068  15.695091  1.829178\n","1  136480         하림    274.166667    3551  11.489362  0.887074\n","2  138040    메리츠금융지주   2122.333333   14894   6.313806  0.899691\n","3  139480        이마트  18268.166667  295780  13.931338  0.860437\n","4  145990        삼양사   5741.000000  108090  14.283226  0.758627\n","5  161390      한국타이어   5648.500000   51341   7.453306  0.820007\n","6  181710  NHN엔터테인먼트   2110.166667   78434  30.755864  0.827447\n","7  185750        종근당   3990.333333   40684  25.185866  2.470259\n","8  204210     모두투어리츠     85.166667    5335  40.802348  0.651359\n","9  207940   삼성바이오로직스   4644.166667   60099  89.790059  6.938551"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_x</th>\n","      <th>stock_name</th>\n","      <th>value</th>\n","      <th>price</th>\n","      <th>id_y</th>\n","      <th>name</th>\n","      <th>eps</th>\n","      <th>bps</th>\n","      <th>per</th>\n","      <th>pbr</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>128940</td>\n","      <td>한미약품</td>\n","      <td>59385.666667</td>\n","      <td>421000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>130960</td>\n","      <td>CJ E&amp;M</td>\n","      <td>58540.666667</td>\n","      <td>98900</td>\n","      <td>130960.0</td>\n","      <td>CJ E&amp;M</td>\n","      <td>6301.333333</td>\n","      <td>54068.0</td>\n","      <td>15.695091</td>\n","      <td>1.829178</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>138250</td>\n","      <td>엔에스쇼핑</td>\n","      <td>14558.666667</td>\n","      <td>13200</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>139480</td>\n","      <td>이마트</td>\n","      <td>239230.833333</td>\n","      <td>254500</td>\n","      <td>139480.0</td>\n","      <td>이마트</td>\n","      <td>18268.166667</td>\n","      <td>295780.0</td>\n","      <td>13.931338</td>\n","      <td>0.860437</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>142280</td>\n","      <td>녹십자엠에스</td>\n","      <td>468.833333</td>\n","      <td>10200</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>145990</td>\n","      <td>삼양사</td>\n","      <td>82750.000000</td>\n","      <td>82000</td>\n","      <td>145990.0</td>\n","      <td>삼양사</td>\n","      <td>5741.000000</td>\n","      <td>108090.0</td>\n","      <td>14.283226</td>\n","      <td>0.758627</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>185750</td>\n","      <td>종근당</td>\n","      <td>40293.666667</td>\n","      <td>100500</td>\n","      <td>185750.0</td>\n","      <td>종근당</td>\n","      <td>3990.333333</td>\n","      <td>40684.0</td>\n","      <td>25.185866</td>\n","      <td>2.470259</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>192400</td>\n","      <td>쿠쿠홀딩스</td>\n","      <td>179204.666667</td>\n","      <td>177500</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>199800</td>\n","      <td>툴젠</td>\n","      <td>-2514.333333</td>\n","      <td>115400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>204210</td>\n","      <td>모두투어리츠</td>\n","      <td>3093.333333</td>\n","      <td>3475</td>\n","      <td>204210.0</td>\n","      <td>모두투어리츠</td>\n","      <td>85.166667</td>\n","      <td>5335.0</td>\n","      <td>40.802348</td>\n","      <td>0.651359</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     id_x stock_name          value  ...       bps        per       pbr\n","0  128940       한미약품   59385.666667  ...       NaN        NaN       NaN\n","1  130960     CJ E&M   58540.666667  ...   54068.0  15.695091  1.829178\n","2  138250      엔에스쇼핑   14558.666667  ...       NaN        NaN       NaN\n","3  139480        이마트  239230.833333  ...  295780.0  13.931338  0.860437\n","4  142280     녹십자엠에스     468.833333  ...       NaN        NaN       NaN\n","5  145990        삼양사   82750.000000  ...  108090.0  14.283226  0.758627\n","6  185750        종근당   40293.666667  ...   40684.0  25.185866  2.470259\n","7  192400      쿠쿠홀딩스  179204.666667  ...       NaN        NaN       NaN\n","8  199800         툴젠   -2514.333333  ...       NaN        NaN       NaN\n","9  204210     모두투어리츠    3093.333333  ...    5335.0  40.802348  0.651359\n","\n","[10 rows x 10 columns]"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\n'"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_x</th>\n","      <th>stock_name</th>\n","      <th>value</th>\n","      <th>price</th>\n","      <th>id_y</th>\n","      <th>name</th>\n","      <th>eps</th>\n","      <th>bps</th>\n","      <th>per</th>\n","      <th>pbr</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>130960.0</td>\n","      <td>CJ E&amp;M</td>\n","      <td>58540.666667</td>\n","      <td>98900.0</td>\n","      <td>130960</td>\n","      <td>CJ E&amp;M</td>\n","      <td>6301.333333</td>\n","      <td>54068</td>\n","      <td>15.695091</td>\n","      <td>1.829178</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>136480</td>\n","      <td>하림</td>\n","      <td>274.166667</td>\n","      <td>3551</td>\n","      <td>11.489362</td>\n","      <td>0.887074</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>138040</td>\n","      <td>메리츠금융지주</td>\n","      <td>2122.333333</td>\n","      <td>14894</td>\n","      <td>6.313806</td>\n","      <td>0.899691</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>139480.0</td>\n","      <td>이마트</td>\n","      <td>239230.833333</td>\n","      <td>254500.0</td>\n","      <td>139480</td>\n","      <td>이마트</td>\n","      <td>18268.166667</td>\n","      <td>295780</td>\n","      <td>13.931338</td>\n","      <td>0.860437</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>145990.0</td>\n","      <td>삼양사</td>\n","      <td>82750.000000</td>\n","      <td>82000.0</td>\n","      <td>145990</td>\n","      <td>삼양사</td>\n","      <td>5741.000000</td>\n","      <td>108090</td>\n","      <td>14.283226</td>\n","      <td>0.758627</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>161390</td>\n","      <td>한국타이어</td>\n","      <td>5648.500000</td>\n","      <td>51341</td>\n","      <td>7.453306</td>\n","      <td>0.820007</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>181710</td>\n","      <td>NHN엔터테인먼트</td>\n","      <td>2110.166667</td>\n","      <td>78434</td>\n","      <td>30.755864</td>\n","      <td>0.827447</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>185750.0</td>\n","      <td>종근당</td>\n","      <td>40293.666667</td>\n","      <td>100500.0</td>\n","      <td>185750</td>\n","      <td>종근당</td>\n","      <td>3990.333333</td>\n","      <td>40684</td>\n","      <td>25.185866</td>\n","      <td>2.470259</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>204210.0</td>\n","      <td>모두투어리츠</td>\n","      <td>3093.333333</td>\n","      <td>3475.0</td>\n","      <td>204210</td>\n","      <td>모두투어리츠</td>\n","      <td>85.166667</td>\n","      <td>5335</td>\n","      <td>40.802348</td>\n","      <td>0.651359</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>207940</td>\n","      <td>삼성바이오로직스</td>\n","      <td>4644.166667</td>\n","      <td>60099</td>\n","      <td>89.790059</td>\n","      <td>6.938551</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       id_x stock_name          value  ...     bps        per       pbr\n","0  130960.0     CJ E&M   58540.666667  ...   54068  15.695091  1.829178\n","1       NaN        NaN            NaN  ...    3551  11.489362  0.887074\n","2       NaN        NaN            NaN  ...   14894   6.313806  0.899691\n","3  139480.0        이마트  239230.833333  ...  295780  13.931338  0.860437\n","4  145990.0        삼양사   82750.000000  ...  108090  14.283226  0.758627\n","5       NaN        NaN            NaN  ...   51341   7.453306  0.820007\n","6       NaN        NaN            NaN  ...   78434  30.755864  0.827447\n","7  185750.0        종근당   40293.666667  ...   40684  25.185866  2.470259\n","8  204210.0     모두투어리츠    3093.333333  ...    5335  40.802348  0.651359\n","9       NaN        NaN            NaN  ...   60099  89.790059  6.938551\n","\n","[10 rows x 10 columns]"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\n'"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"d_T5jVqnjSEn"},"source":["# 결합(join) ?? 왜 오류가 뜰까.\n","# 객체 안에 사용할 함수가 메소드 형식으로 들어있다 = 객체지향!! 나 기준으로 무엇을 사용할 것이다.\n","# df3 = df111.join(df222)\n","\n","\n","# df111.join(df222, how='inner')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zfVWCtsClrkA"},"source":["### 멀티 인덱스"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"VSvBkOAelw-b","executionInfo":{"status":"ok","timestamp":1617006004456,"user_tz":-540,"elapsed":3216,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"d263e33a-6e40-4f31-ca91-cd60a1d575e8"},"source":["# groupby로 인해서 만들어지면 그걸로 인해서 멀티 인덱스가 만들어진다!\n","# db가 편하긴 한데 groupby로 인해서 만들어지면 그걸로 인해서 멀티 인덱스가 만들어진다!\n","\n","titanic = sns.load_dataset('titanic')\n","df_ti2 = titanic[ ['age', 'sex', 'class', 'fare', 'survived'] ]\n","df_ti2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>class</th>\n","      <th>fare</th>\n","      <th>survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22.0</td>\n","      <td>male</td>\n","      <td>Third</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38.0</td>\n","      <td>female</td>\n","      <td>First</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>26.0</td>\n","      <td>female</td>\n","      <td>Third</td>\n","      <td>7.9250</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35.0</td>\n","      <td>female</td>\n","      <td>First</td>\n","      <td>53.1000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35.0</td>\n","      <td>male</td>\n","      <td>Third</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    age     sex  class     fare  survived\n","0  22.0    male  Third   7.2500         0\n","1  38.0  female  First  71.2833         1\n","2  26.0  female  Third   7.9250         1\n","3  35.0  female  First  53.1000         1\n","4  35.0    male  Third   8.0500         0"]},"metadata":{"tags":[]},"execution_count":100}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":254},"id":"gGkF9RCgmZOR","executionInfo":{"status":"ok","timestamp":1617006004456,"user_tz":-540,"elapsed":3203,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"ad51ff0e-5783-41e5-a114-b158ee3f015d"},"source":["df_ti2_gp = df_ti2.groupby(['class', 'sex'])\n","df_ti2_gp.sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>age</th>\n","      <th>fare</th>\n","      <th>survived</th>\n","    </tr>\n","    <tr>\n","      <th>class</th>\n","      <th>sex</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">First</th>\n","      <th>female</th>\n","      <td>2942.00</td>\n","      <td>9975.8250</td>\n","      <td>91</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>4169.42</td>\n","      <td>8201.5875</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Second</th>\n","      <th>female</th>\n","      <td>2125.50</td>\n","      <td>1669.7292</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>3043.33</td>\n","      <td>2132.1125</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Third</th>\n","      <th>female</th>\n","      <td>2218.50</td>\n","      <td>2321.1086</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>6706.42</td>\n","      <td>4393.5865</td>\n","      <td>47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                   age       fare  survived\n","class  sex                                 \n","First  female  2942.00  9975.8250        91\n","       male    4169.42  8201.5875        45\n","Second female  2125.50  1669.7292        70\n","       male    3043.33  2132.1125        17\n","Third  female  2218.50  2321.1086        72\n","       male    6706.42  4393.5865        47"]},"metadata":{"tags":[]},"execution_count":101}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":166},"id":"ERbm_Z0Imwa7","executionInfo":{"status":"ok","timestamp":1617006119005,"user_tz":-540,"elapsed":556,"user":{"displayName":"심훈용","photoUrl":"","userId":"17506418350267611748"}},"outputId":"515911a0-c97a-4c78-bb15-543be5517d91"},"source":["df_mean = df_ti2_gp.mean()\n","df_mean.loc[ ('First', 'female') ]\n","df_mean.xs('male', level='sex')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>fare</th>\n","      <th>survived</th>\n","    </tr>\n","    <tr>\n","      <th>class</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>First</th>\n","      <td>41.281386</td>\n","      <td>67.226127</td>\n","      <td>0.368852</td>\n","    </tr>\n","    <tr>\n","      <th>Second</th>\n","      <td>30.740707</td>\n","      <td>19.741782</td>\n","      <td>0.157407</td>\n","    </tr>\n","    <tr>\n","      <th>Third</th>\n","      <td>26.507589</td>\n","      <td>12.661633</td>\n","      <td>0.135447</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              age       fare  survived\n","class                                 \n","First   41.281386  67.226127  0.368852\n","Second  30.740707  19.741782  0.157407\n","Third   26.507589  12.661633  0.135447"]},"metadata":{"tags":[]},"execution_count":106}]},{"cell_type":"markdown","metadata":{"id":"k4doqWrgh3ch"},"source":["## 시계열 데이터"]},{"cell_type":"markdown","metadata":{"id":"LqEnRBgilRJk"},"source":["* 시계열 데이터를 데이터프레임의 행 인덱스로 사용하면, 시간으로 기록된 데이터를 분석하는데 편리\n","\n","* 시계열 데이터 표현에 이용되는 두 가지 유형(판다스 시간 표시 유형)\n"," 1. Timestamp : 특정한 시점을 기록\n"," 2. Peroid : 두 시점 사이의 일정한 기간을 표시"]},{"cell_type":"markdown","metadata":{"id":"ec7A3CDwo1vj"},"source":["문자열을 Timestamp로 변환"]},{"cell_type":"code","metadata":{"id":"vsGKENR9mSCk"},"source":["# 문자열을 Timestamp로 변환\n","# .to_datetime과 .to_period method .period_range .date_range\n","import pandas as pd\n","\n","df_stock = pd.read_csv(drive_path + 'stock-data.csv')\n","display( df_stock.head() )\n","display( df_stock.info() )\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ozqh6El2gtlJ"},"source":["# 기본적으로 날짜는 계산이 불가능하므로 타입을 변경해줘야한다\n","\n","pd.to_datetime(df_stock['Date'])   #눈으로보기에는 그냥 날짠데? 하지만 컴퓨터가 계산 가능한 타입으로 바뀌어져 있다.\n","                                   #pd.to_datetime 이용\n","df_stock['new_Date'] = pd.to_datetime(df_stock['Date'])   # 그냥 칼럼 추가\n","\n","# df_stock.drop('Date',axis=1,inplace=True)               # inplace = True는 원본을 변형하라는 뜻.\n","\n","df_stock.set_index('new_Date',inplace=True)\n","\n","df_stock\n","\n","#여러번 실행하면 오류나네.. Date 지워버렸는데 그걸 또 하라고 하니까! 그래서 일단 주석처리."],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7SdULDPOo7OX"},"source":["Timestamp를 Period로 변환"]},{"cell_type":"code","metadata":{"id":"RII6pMQHpBwN"},"source":["# 날짜 형식의 문자열로 구성되는 리스트 정의\n","dates = ['2019-01-01', '2020-03-01', '2021-06-01']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9sTckgGsgv1U"},"source":["ts_dates = pd.to_datetime(dates)\n","ts_dates"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v5427qZz63Ec"},"source":["ts_dates.to_period(freq='D')   # 판다스에 자세하게 나와있다. D는 하루 기준으로 하라는 뜻"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zcoB_FyUqK9i"},"source":["[freq 옵션 참고](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects)"]},{"cell_type":"markdown","metadata":{"id":"GsrNToNGrgRe"},"source":["Timestamp 배열"]},{"cell_type":"code","metadata":{"id":"1qJjBAQArGZT"},"source":["# Timestamp의 배열 만들기 - 월 간격, 월의 시작일 기준\n","# 실제 서비스 만들때 중요하게 고려되는 사항.\n","ts_ms = pd.date_range(start='2019-01-01',    # 날짜 범위의 시작\n","                   end=None,                 # 날짜 범위의 끝\n","                   periods=6,                # 생성할 Timestamp의 개수\n","                   freq='MS',                # 시간 간격 (MS: 월의 시작일)\n","                   tz='Asia/Seoul')          # 시간대(timezone)\n","ts_ms"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EGglYY2er08A"},"source":["# 시간 간격을 다르게 설정\n","# 월 간격, 월의 마지막 날 기준\n","ts_ms = pd.date_range(start='2019-01-01',    # 날짜 범위의 시작\n","                   end=None,                 # 날짜 범위의 끝\n","                   periods=6,                # 생성할 Timestamp의 개수\n","                   freq='M',                 # 시간 간격 (M: 월의 마지막)\n","                   tz='Asia/Seoul')          # 시간대(timezone)\n","ts_ms"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"o4H6OcxQsBCs"},"source":["# 시간 간격을 다르게 설정\n","# 분기(3개월) 간격, 월의 마지막 날 기준\n","\n","ts_ms = pd.date_range(start='2019-01-01',    # 날짜 범위의 시작\n","                   end=None,                 # 날짜 범위의 끝\n","                   periods=6,                # 생성할 Timestamp의 개수\n","                   freq='3MS',               # 시간 간격 (분기)\n","                   tz='Asia/Seoul')          # 시간대(timezone)\n","ts_ms"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D24JQWiosOPs"},"source":["Period 배열"]},{"cell_type":"code","metadata":{"id":"29prvU9NsRcs"},"source":["# Period 배열 만들기 - 1개월 길이\n","pr_m = pd.period_range(start='2019-01-01',     # 날짜 범위의 시작\n","                   end=None,                   # 날짜 범위의 끝\n","                   periods=3,                  # 생성할 Period 개수\n","                   freq='M')                   # 기간의 길이 (M: 월)\n","pr_m"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CsiEaP2zstkC"},"source":["# Period 배열 만들기 - 1시간 길이\n","pr_m = pd.period_range(start='2019-01-01',     # 날짜 범위의 시작\n","                   end=None,                   # 날짜 범위의 끝\n","                   periods=3,                  # 생성할 Period 개수\n","                   freq='H')                   # 기간의 길이 (H: 시간)\n","pr_m\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1dVaiidVs2tN"},"source":["# Period 배열 만들기 - 2시간 길이\n","pr_m = pd.period_range(start='2019-01-01',     # 날짜 범위의 시작\n","                   end=None,                   # 날짜 범위의 끝\n","                   periods=3,                  # 생성할 Period 개수\n","                   freq='2H')                   # 기간의 길이 (2H: 2시간)\n","pr_m\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6-29tmIHtARS"},"source":["날짜 데이터 분리"]},{"cell_type":"code","metadata":{"id":"dbXRAmf4tJcD"},"source":["import pandas as pd\n","\n","df_stock = pd.read_csv(drive_path + 'stock-data.csv')\n","display( df.head() )\n","display( df.info() )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"X7iwE4N5tSEw"},"source":["# 문자열인 날짜 데이터를 판다스 Timestamp로 변환\n","# 자신 없으면 바로 넣지 마!\n","\n","df_stock['new_Date'] = pd.to_datetime(df_stock['Date'])\n","df_stock.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dH5U0tdPtY6y"},"source":["# dt 속성을 이용하여 new_Date 열의 년월일 정보를 년, 월, 일로 구분\n","df_stock['Year'] = df_stock['new_Date'].dt.year\n","df_stock['Month'] = df_stock['new_Date'].dt.month\n","df_stock['Day'] = df_stock['new_Date'].dt.day\n","\n","df_stock.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Fz4uNUQytfF2"},"source":["# Timestamp를 Period로 변환하여 년월일 표기 변경하기\n","df_stock['Date_Yr']=df_stock['new_Date'].dt.to_period(freq='A')\n","df_stock['Date_Mth']=df_stock['new_Date'].dt.to_period(freq='M')\n","\n","display(df_stock)\n","df_stock.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ezqPH75vtmi3"},"source":["\n","# 원하는 열을 새로운 행 인덱스로 지정\n","df_stock.set_index('new_Date', inplace=True)\n","df_stock.head()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5_nNgQdRtzJQ"},"source":["날짜 인덱스 활용\n"," * 날짜 인덱스를 활용하면 시계열 데이터에 대한 인덱싱과 슬라이싱이 편리"]},{"cell_type":"code","metadata":{"id":"7YaDwPRYuARe"},"source":["# 날짜 인덱스를 이용하여 데이터 선택하기\n","# 문자열인 날짜 데이터를 판다스 Timestamp로 변환\n","# 인덱스에 날짜데이터가 들어가있으면, 행이어도 열처럼? 사용 가능하다. 편리하다!\n","\n","df_stock['2018']           #인덱스라고 말도 안해줬고 파싱도 안했는데 알아서 2018년 선택해주네 햐"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bU-rXMc8Bf_K"},"source":["# 날짜 인덱스를 이용하여 데이터 선택하기\n","\n","df_stock.loc['2018-06-25':'2018-06-20','Start':'Low']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ptmWijOZBf36"},"source":["df_stock.loc['2018-06-25':'2018-06-20','Start':'Low']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y_FOXHeeBfiA"},"source":["df_stock.loc['2018-7', 'Start':'Low']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tgXKI19qu4q0"},"source":["# 시간 간격 계산. 최근 180일 ~ 189일 사이의 값들만 선택하기\n","\n","today = pd.to_datetime('2018-12-25') # 2018-12-25라는 문자열을 날짜 형식으로 바꿔줌. 수학적 계산이 가능한 형태.\n","# df[180 <=today - df.index <=189] #틀린 코드\n","\n","df_stock['time_delta'] = today- df_stock.index  #날짜끼리의 계산 결과는 알아서 days가 붙는다.\n","\n","df2 = df_stock.set_index('time_delta')\n","df2.head()\n","df2['180 days': '189 days']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rbkpMA-aEjyd"},"source":["## 파일 다루기\n","\n","- 텍스트 파일 다운로드\n","- http://opentechschool.github.io/python-data-intro/files/radishsurvey.txt"]},{"cell_type":"code","metadata":{"id":"ySWN_pbZE6f-"},"source":["!pwd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9DvDtUujExfo"},"source":["!mkdir ./data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_WXJ53cIEpD5"},"source":["!curl http://opentechschool.github.io/python-data-intro/files/radishsurvey.txt\\\n","    -o ./data/radishsurvey.txt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ss5mtJxPKrTH"},"source":["!head -10 ./data/radishsurvey.txt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZZCHehR4KPRM"},"source":["# 이 방식은 개 구진 방식.\n","with open(\"./data/radishsurvey.txt\") as file:\n","    for line in file:       \n","        line = line.strip()\n","        parts = line.split(\" - \")\n","        name = parts[0]\n","        vote = parts[1]\n","        print(name + \" voted for \" + vote)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z8q8Neq0Lbh1"},"source":["# df_vote = pd.read_csv(drive_path+'투표 결과.csv')  # 엑셀 이용. \"-\"\" 기준으로 열 구분 후 공백 모두 제거\n","\n","# df_vote.columns=[\"voter\",'vote_for_1','vote_for_2']  #컬럼 추가\n","\n","# df_vote[\"vote_for_1\"] = df_vote[\"vote_for_1\"].str.capitalize() # 2번째 열의 앞문자 대문자로 변경\n","\n","# miss = df_vote['vote_for_2'].isnull()  #중복투표한 사람 추출\n","\n","# count = df_vote[miss][\"vote_for_1\"].value_counts() #중복투표 제거 후 밸류카운트\n","\n","# count.plot(kind=\"bar\", title=\"result?\",rot=30)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S_wQYwe2tS_0"},"source":["df = pd.read_csv(\"./data/radishsurvey.txt\", sep=' - ', header=None)\n","# display(df.iloc[500:600])\n","df[1].\n","\n","df[1].value_counts()\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ySUrrcARe7df"},"source":["항공운항 데이터\n","https://raw.githubusercontent.com/jpatokal/openflights/master/data/airports.dat\n","\n","경로데이터\n","\n","https://raw.githubusercontent.com/jpatokal/openflights/master/data/routes.dat"]},{"cell_type":"code","metadata":{"id":"QwZfOsR5evkr"},"source":["!curl https://raw.githubusercontent.com/jpatokal/openflights/master/data/airports.dat\\\n","    -o ./data/airports.dat"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ftWDXjrOfJqh"},"source":["!curl https://raw.githubusercontent.com/jpatokal/openflights/master/data/routes.dat\\\n","    -o ./data/routes.dat"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ukFuLXzqf2DR"},"source":["항공데이터 두 그래프 비교 공통된 단어를 가지고 와 시리즈 만들어서 추가해? 파일을 하나로 만들어 쓰실수도있음\n","그렇게 하면 원래는 어느만큼 거리를 운행했는가를 찾는 문제였다. 경로와 경로를 추적 해서 누적 계산. "]},{"cell_type":"code","metadata":{"id":"wBKf5XYOEEb4"},"source":["df_airports = pd.read_csv(\"./data/airports.dat\", header=None)\n","\n","display(df_airport)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v6IVF4wHEiXt"},"source":["df_routes = pd.read_csv(\"./data/routes.dat\", header=None)\n","\n","df_routes"],"execution_count":null,"outputs":[]}]}